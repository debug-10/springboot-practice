<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CoolRequestHistoryPersistent">
    <option name="historyAPIS" value="[{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\AAA.txt&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:28,&quot;second&quot;:18,&quot;nano&quot;:433716800}},&quot;historyId&quot;:&quot;ad8cba97-92f0-45d1-99d6-888bff2d958a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\snow.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:28,&quot;second&quot;:1,&quot;nano&quot;:437401000}},&quot;historyId&quot;:&quot;8d94660f-ffa7-4e1e-91fc-9f0e9cf6eb3f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\large.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:27,&quot;second&quot;:46,&quot;nano&quot;:536089700}},&quot;historyId&quot;:&quot;c002884f-7736-462d-b7f0-e21b7b23d784&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\yz.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:27,&quot;second&quot;:28,&quot;nano&quot;:428543300}},&quot;historyId&quot;:&quot;a51afb81-f7b7-458b-b6d0-0b4765dde162&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\小结.txt&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:24,&quot;second&quot;:40,&quot;nano&quot;:431020300}},&quot;historyId&quot;:&quot;b40997e4-d7f7-492c-a8b1-01120f2323c5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\snow.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:24,&quot;second&quot;:21,&quot;nano&quot;:315488800}},&quot;historyId&quot;:&quot;e2545802-9d64-4111-8a59-f05104405c34&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\large.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:24,&quot;second&quot;:5,&quot;nano&quot;:817337600}},&quot;historyId&quot;:&quot;eeb79cc8-e72a-4870-b6e1-8b26560af33b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\yz.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:23,&quot;second&quot;:48,&quot;nano&quot;:205316300}},&quot;historyId&quot;:&quot;adb9d3ce-5dbb-465d-8052-b82613444ab5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\snow.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:21,&quot;second&quot;:1,&quot;nano&quot;:787421100}},&quot;historyId&quot;:&quot;fbcdbfa3-5e52-4f66-9b4b-ac3f62e83b41&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\snow.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:18,&quot;second&quot;:49,&quot;nano&quot;:21705100}},&quot;historyId&quot;:&quot;8355f743-852c-482e-9486-ab81438c4099&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\large.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:18,&quot;second&quot;:40,&quot;nano&quot;:520275100}},&quot;historyId&quot;:&quot;ef8081f9-27d8-4c15-a329-a9a6211f1fc8&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\yz.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:18,&quot;second&quot;:32,&quot;nano&quot;:294586200}},&quot;historyId&quot;:&quot;cecb8e90-0a7d-4fad-b0cb-4177a880f095&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\yz.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:17,&quot;second&quot;:43,&quot;nano&quot;:757361600}},&quot;historyId&quot;:&quot;4240a362-8eb3-4a35-9646-9cdf509af9fa&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\snow.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:17,&quot;second&quot;:29,&quot;nano&quot;:435120900}},&quot;historyId&quot;:&quot;6ae005dd-1949-430d-a736-211c3931f639&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\snow.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:13,&quot;second&quot;:29,&quot;nano&quot;:650541700}},&quot;historyId&quot;:&quot;a3985241-a0d8-4d6d-b08b-94892be434ad&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\large.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:13,&quot;second&quot;:19,&quot;nano&quot;:411470500}},&quot;historyId&quot;:&quot;d0eded60-9cc3-4f4c-b45f-31f03f608773&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\yz.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:12,&quot;second&quot;:56,&quot;nano&quot;:791940900}},&quot;historyId&quot;:&quot;7fd9f4d1-152e-4e63-a62e-cf2f8ad67e4c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\yz.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:12,&quot;second&quot;:53,&quot;nano&quot;:485701900}},&quot;historyId&quot;:&quot;ab08e08a-595c-4fcc-b976-4d5f48dccdf3&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\yz.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:12,&quot;second&quot;:44,&quot;nano&quot;:74727300}},&quot;historyId&quot;:&quot;13235428-b935-4650-9fc4-889d07fc828a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\yz.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:12,&quot;second&quot;:13,&quot;nano&quot;:172787500}},&quot;historyId&quot;:&quot;10466846-11f0-4131-b232-c52102bab614&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\yz.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:7,&quot;second&quot;:29,&quot;nano&quot;:95402200}},&quot;historyId&quot;:&quot;3454419e-6ce6-4710-b5c4-e3ae4f4ac697&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\yz.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:3,&quot;second&quot;:54,&quot;nano&quot;:505589600}},&quot;historyId&quot;:&quot;99b9aa77-59c5-4013-8d78-dc35cf3cadd0&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\large.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:3,&quot;second&quot;:8,&quot;nano&quot;:348814000}},&quot;historyId&quot;:&quot;83136575-5018-42a9-afc9-1673a4f3918a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\snow.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:2,&quot;second&quot;:55,&quot;nano&quot;:477801300}},&quot;historyId&quot;:&quot;4b506d52-04ff-4ce2-bc0b-3bd79a21c71c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\yz.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:2,&quot;second&quot;:46,&quot;nano&quot;:152834400}},&quot;historyId&quot;:&quot;704ce454-5098-4c28-9f13-0f4c3238f4c9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\yz.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:57,&quot;second&quot;:54,&quot;nano&quot;:538577900}},&quot;historyId&quot;:&quot;4da0de26-71ed-444f-99b7-2a65524dcd6b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\yz.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:56,&quot;second&quot;:51,&quot;nano&quot;:679689000}},&quot;historyId&quot;:&quot;2315bb12-7d00-4bbd-9f27-6fd67d3cc333&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\yz.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:55,&quot;second&quot;:20,&quot;nano&quot;:207383300}},&quot;historyId&quot;:&quot;f6690ef2-6f4c-4e92-86f9-a72a5698c387&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\yz.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:52,&quot;second&quot;:1,&quot;nano&quot;:347271100}},&quot;historyId&quot;:&quot;97ad2e65-dd25-4436-af1d-a2040e18c09b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\yz.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:51,&quot;second&quot;:36,&quot;nano&quot;:915463200}},&quot;historyId&quot;:&quot;399cf4e1-1111-404b-94b5-85990fae5a04&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\yz.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:50,&quot;second&quot;:9,&quot;nano&quot;:758029100}},&quot;historyId&quot;:&quot;fe85c73d-ad32-4f9d-8356-8342010b25a3&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\yz.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:48,&quot;second&quot;:48,&quot;nano&quot;:62346900}},&quot;historyId&quot;:&quot;c1370b95-8796-4d3e-9065-d8413bb81d2b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\yz.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:43,&quot;second&quot;:37,&quot;nano&quot;:910001200}},&quot;historyId&quot;:&quot;189b5121-2fa7-48db-9b70-d410d38bafac&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\yz.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:43,&quot;second&quot;:16,&quot;nano&quot;:791915500}},&quot;historyId&quot;:&quot;155a5a99-531d-4f67-b3ee-8d7e78b90756&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\large.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:43,&quot;second&quot;:5,&quot;nano&quot;:775429200}},&quot;historyId&quot;:&quot;8636f7b2-ffe4-4f7c-9749-8a9e03396bad&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\snow.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:42,&quot;second&quot;:54,&quot;nano&quot;:102902000}},&quot;historyId&quot;:&quot;9879b2dd-9310-4514-855b-6935d6980ea6&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\snow.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:37,&quot;second&quot;:23,&quot;nano&quot;:818600}},&quot;historyId&quot;:&quot;ae4c8a6d-8308-4b15-8c9a-b8864a0a9bc6&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\yz.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:36,&quot;second&quot;:29,&quot;nano&quot;:951222000}},&quot;historyId&quot;:&quot;af8df650-27d1-4db4-88e1-065d6319a563&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\snow.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:36,&quot;second&quot;:20,&quot;nano&quot;:315978100}},&quot;historyId&quot;:&quot;56fcdbf2-bcea-4181-982f-75ba0ec01b59&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.ImageUploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;81c0cb3c775241e8d13df2ab1e931eaa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\snow.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;response&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:36,&quot;second&quot;:2,&quot;nano&quot;:541361800}},&quot;historyId&quot;:&quot;5493b0c6-0e4f-4b2c-8b31-b4d698444916&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.UploadController&quot;,&quot;methodName&quot;:&quot;uploadFile&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1f09fd315e526077d921fb872e563862&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\snow.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:35,&quot;second&quot;:7,&quot;nano&quot;:296307700}},&quot;historyId&quot;:&quot;0bdb4ced-af99-4a1d-b35f-bd84621b12ed&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.UploadController&quot;,&quot;methodName&quot;:&quot;uploadFile&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1f09fd315e526077d921fb872e563862&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\snow.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:35,&quot;second&quot;:7,&quot;nano&quot;:47963800}},&quot;historyId&quot;:&quot;f41592fd-492c-4a92-a21f-d8a3524ef6df&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.UploadController&quot;,&quot;methodName&quot;:&quot;uploadFile&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1f09fd315e526077d921fb872e563862&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\snow.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:35,&quot;second&quot;:6,&quot;nano&quot;:863819900}},&quot;historyId&quot;:&quot;27bc3f18-182a-4fd7-895d-5c3de3e892dd&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.UploadController&quot;,&quot;methodName&quot;:&quot;uploadFile&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1f09fd315e526077d921fb872e563862&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\snow.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:35,&quot;second&quot;:6,&quot;nano&quot;:369968600}},&quot;historyId&quot;:&quot;dd280b4f-c1bf-4a70-8cc8-6901bb606bd1&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.UploadController&quot;,&quot;methodName&quot;:&quot;uploadFile&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1f09fd315e526077d921fb872e563862&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\snow.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:35,&quot;second&quot;:3,&quot;nano&quot;:604756300}},&quot;historyId&quot;:&quot;5d23827a-719c-4382-9857-cec7bbbfac4a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.UploadController&quot;,&quot;methodName&quot;:&quot;uploadFile&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1f09fd315e526077d921fb872e563862&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\snow.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:31,&quot;second&quot;:36,&quot;nano&quot;:810117600}},&quot;historyId&quot;:&quot;7fca2b6d-6c4d-4c60-aba5-1ebd1e304f8a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.UploadController&quot;,&quot;methodName&quot;:&quot;uploadFile&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1f09fd315e526077d921fb872e563862&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\large.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:30,&quot;second&quot;:49,&quot;nano&quot;:819540800}},&quot;historyId&quot;:&quot;1e234bc4-653b-4895-9e46-ab3b8a1849b5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.UploadController&quot;,&quot;methodName&quot;:&quot;uploadFile&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1f09fd315e526077d921fb872e563862&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\yz.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:30,&quot;second&quot;:41,&quot;nano&quot;:935103000}},&quot;historyId&quot;:&quot;7bba728c-39cd-49c9-856a-97d95b4502f2&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.UploadController&quot;,&quot;methodName&quot;:&quot;uploadFile&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;1f09fd315e526077d921fb872e563862&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\large.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:22,&quot;second&quot;:2,&quot;nano&quot;:196707800}},&quot;historyId&quot;:&quot;0c2ab712-e67f-423b-b4e3-d1a8f3dfa856&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/upload&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.UploadController&quot;,&quot;methodName&quot;:&quot;uploadFile&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;id&quot;:&quot;1f09fd315e526077d921fb872e563862&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/upload&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\large.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:21,&quot;second&quot;:27,&quot;nano&quot;:41306400}},&quot;historyId&quot;:&quot;46a6f952-d73b-4b82-963a-b82a0f8961f1&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.UploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;ae3c5efe25e9413831874db981ffc0fa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\小结.txt&quot;,&quot;name&quot;:&quot;&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:18,&quot;minute&quot;:27,&quot;second&quot;:44,&quot;nano&quot;:863006300}},&quot;historyId&quot;:&quot;dcb4b2b4-f748-42ad-8840-d6238e5ec38e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.UploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;ae3c5efe25e9413831874db981ffc0fa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\snow.jpg&quot;,&quot;name&quot;:&quot;&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:18,&quot;minute&quot;:20,&quot;second&quot;:34,&quot;nano&quot;:414817800}},&quot;historyId&quot;:&quot;adbacf55-c5e2-44cf-960f-f9ee3bac7d0d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.UploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;ae3c5efe25e9413831874db981ffc0fa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\large.jpg&quot;,&quot;name&quot;:&quot;&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:18,&quot;minute&quot;:20,&quot;second&quot;:25,&quot;nano&quot;:329204500}},&quot;historyId&quot;:&quot;4b752d24-0a2c-4f08-b04c-38bcc8d8a5cb&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/upload/image&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.UploadController&quot;,&quot;methodName&quot;:&quot;uploadImage&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;ae3c5efe25e9413831874db981ffc0fa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/upload/image&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:18,&quot;minute&quot;:19,&quot;second&quot;:49,&quot;nano&quot;:375695800}},&quot;historyId&quot;:&quot;8d8600ad-0f0e-448e-9347-d6e29bd8d43a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:48,&quot;nano&quot;:593831600}},&quot;historyId&quot;:&quot;4a9ab195-79dc-4ad8-90c1-5ff58437c468&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:48,&quot;nano&quot;:386835500}},&quot;historyId&quot;:&quot;a27cab4c-3143-4f3f-8438-ef676760f1b1&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:48,&quot;nano&quot;:225534200}},&quot;historyId&quot;:&quot;5f31d6ea-8c80-400c-a58d-22a470df3062&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:47,&quot;nano&quot;:819178600}},&quot;historyId&quot;:&quot;ed04b2eb-3660-4e0f-9e66-64f86246c0ad&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:47,&quot;nano&quot;:77916600}},&quot;historyId&quot;:&quot;4a34f540-5ec6-457b-ad5e-024d392c6c22&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:46,&quot;nano&quot;:572852300}},&quot;historyId&quot;:&quot;8378d182-eb9d-49e4-821f-3ebb557ad78e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:46,&quot;nano&quot;:136583700}},&quot;historyId&quot;:&quot;b46e9beb-f9c3-4a6c-a2be-46d9c60ef96e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:45,&quot;nano&quot;:722423300}},&quot;historyId&quot;:&quot;4c8b1600-cce8-4544-951c-2bd775a78cc6&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:45,&quot;nano&quot;:244315900}},&quot;historyId&quot;:&quot;ac57f4bf-a5ec-44d3-8982-7a8f17ada4ff&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:44,&quot;nano&quot;:785440200}},&quot;historyId&quot;:&quot;e8249eeb-c73b-4f7c-944a-79df881d2464&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:44,&quot;nano&quot;:308495200}},&quot;historyId&quot;:&quot;5f21e185-8834-4ab2-9e27-e817c3e54c27&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:43,&quot;nano&quot;:843076000}},&quot;historyId&quot;:&quot;a4ae8235-8fca-48f9-a3db-9442cd1f14b2&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:43,&quot;nano&quot;:472724100}},&quot;historyId&quot;:&quot;79063587-c9de-4fc4-a531-4fe79c1f597a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:43,&quot;nano&quot;:55662600}},&quot;historyId&quot;:&quot;38a13ec1-ca04-43ce-92cd-78de7a3ccbd3&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:40,&quot;nano&quot;:581824100}},&quot;historyId&quot;:&quot;40450c31-f047-44f0-9d94-22fdc122c94c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:40,&quot;nano&quot;:411140700}},&quot;historyId&quot;:&quot;5a1d3c7c-81c2-4bca-b688-5668b96f1187&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:40,&quot;nano&quot;:251902800}},&quot;historyId&quot;:&quot;a0cae01a-8ab6-4d8a-af2f-90cb1cfde215&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:40,&quot;nano&quot;:94508400}},&quot;historyId&quot;:&quot;f952dd79-f7d3-4ce1-a701-cf987e45de86&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:39,&quot;nano&quot;:939957200}},&quot;historyId&quot;:&quot;8d5ad9e9-7f7b-4db3-9f35-2885691d17e9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:39,&quot;nano&quot;:568609200}},&quot;historyId&quot;:&quot;84855cfb-82c6-4455-ba0e-d0456a2828dd&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:26,&quot;nano&quot;:715597600}},&quot;historyId&quot;:&quot;f18b59fa-8d94-466f-9df3-5f5bbde8b33e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:26,&quot;nano&quot;:554428600}},&quot;historyId&quot;:&quot;77ebf74a-b878-4f2e-85dd-f0bfee0f0f83&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:26,&quot;nano&quot;:393123600}},&quot;historyId&quot;:&quot;82b220ed-480f-45a7-b15e-31f535211dd2&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:26,&quot;nano&quot;:235652500}},&quot;historyId&quot;:&quot;d03e727a-1d7c-42e6-866a-5d3fe2ceadfa&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:26,&quot;nano&quot;:71813500}},&quot;historyId&quot;:&quot;a435b151-3c85-4f83-ace3-392bf204b6d2&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:25,&quot;nano&quot;:914105700}},&quot;historyId&quot;:&quot;6e762c7f-e123-433b-a82b-4cc0acb6056f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:25,&quot;nano&quot;:752964200}},&quot;historyId&quot;:&quot;c55ea70c-46b7-41d7-9e8c-21ef51611e15&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:25,&quot;nano&quot;:601876100}},&quot;historyId&quot;:&quot;a1f7c2cd-3024-46eb-955e-72a243f09c33&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:25,&quot;nano&quot;:434027800}},&quot;historyId&quot;:&quot;bd0478e4-222d-4e66-a579-fa24201803d5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:25,&quot;nano&quot;:269189600}},&quot;historyId&quot;:&quot;9d21a774-525a-4cd3-8ca6-9d003e25669c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:25,&quot;nano&quot;:65256900}},&quot;historyId&quot;:&quot;63162fa2-92a4-4c6b-b9a5-e676fc8f5570&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:19,&quot;nano&quot;:121837000}},&quot;historyId&quot;:&quot;0f1d387f-af40-4a33-8eda-2854d0a3731e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:7,&quot;nano&quot;:676141400}},&quot;historyId&quot;:&quot;2b30a578-7578-48c9-96db-36a076b61288&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:7,&quot;nano&quot;:534763700}},&quot;historyId&quot;:&quot;196ac679-6a75-414f-ad68-a6f29e64fc08&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:7,&quot;nano&quot;:385717300}},&quot;historyId&quot;:&quot;1e7ac712-b7fc-4d57-af69-e32c4e845478&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:7,&quot;nano&quot;:226405400}},&quot;historyId&quot;:&quot;36c2385b-dba0-48de-9926-f550ca9ffbd9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:7,&quot;nano&quot;:58003000}},&quot;historyId&quot;:&quot;9d369372-7303-46a2-a7fd-1cbebc7c14a9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:6,&quot;nano&quot;:900877500}},&quot;historyId&quot;:&quot;d2845ac7-6f70-4210-8b34-469b19f4c545&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:6,&quot;nano&quot;:362206900}},&quot;historyId&quot;:&quot;bb6c5868-d0a7-4667-8c9e-c4ffa60668f3&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:6,&quot;nano&quot;:11022900}},&quot;historyId&quot;:&quot;6b3fedfe-f43b-48b9-b31d-c075e0f98b82&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:5,&quot;nano&quot;:809258900}},&quot;historyId&quot;:&quot;c5d8dd37-5ffc-43bb-8e3e-0444a89fbd64&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:5,&quot;nano&quot;:640742400}},&quot;historyId&quot;:&quot;6b1c9246-f307-487c-97b6-7b9cb4cd86e5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:5,&quot;nano&quot;:485448500}},&quot;historyId&quot;:&quot;03e3fc92-2fe0-478b-a387-ede1ba987de8&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:5,&quot;nano&quot;:302477900}},&quot;historyId&quot;:&quot;99cd50ac-32d8-4f70-9d52-9ec781da60e4&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:5,&quot;nano&quot;:140436800}},&quot;historyId&quot;:&quot;681385ab-48ce-4e5f-a2df-defc7e5e5a78&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:4,&quot;nano&quot;:973507500}},&quot;historyId&quot;:&quot;1fff456d-32bc-478b-830b-a6d7fbad8935&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:4,&quot;nano&quot;:525507100}},&quot;historyId&quot;:&quot;b5b21bf5-f2f7-4544-9e80-518cc2875209&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:4,&quot;nano&quot;:163380900}},&quot;historyId&quot;:&quot;3a8573bc-b624-4425-b2f1-38dad5c8f35e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:3,&quot;nano&quot;:736003600}},&quot;historyId&quot;:&quot;874ed68e-3e56-442c-b6b7-79c627033e38&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:3,&quot;nano&quot;:293136200}},&quot;historyId&quot;:&quot;2fc675c5-ecc3-4b16-979c-d9c74bf028b7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:2,&quot;nano&quot;:906126000}},&quot;historyId&quot;:&quot;7af7adec-3f0f-4b2b-8be6-707646c1b953&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:2,&quot;nano&quot;:601257500}},&quot;historyId&quot;:&quot;94edbe91-c5b4-4eed-bb91-927844f3df64&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:2,&quot;nano&quot;:184043700}},&quot;historyId&quot;:&quot;fc7e1c06-2e6a-40d5-ada7-f9f5ea408e37&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:1,&quot;nano&quot;:691037800}},&quot;historyId&quot;:&quot;3e2fde59-b992-4694-9150-e068ed44dd93&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:8,&quot;second&quot;:58,&quot;nano&quot;:826024300}},&quot;historyId&quot;:&quot;92a65d7d-1b42-4615-97bf-aec51c138f17&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:8,&quot;second&quot;:58,&quot;nano&quot;:666104800}},&quot;historyId&quot;:&quot;e8cc58ca-d169-4673-b2b4-78cd677ba236&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:8,&quot;second&quot;:58,&quot;nano&quot;:498174300}},&quot;historyId&quot;:&quot;8f09153b-a286-4f9d-9e50-77876f7602dd&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:8,&quot;second&quot;:58,&quot;nano&quot;:130963200}},&quot;historyId&quot;:&quot;ac8cb43b-7daf-4f6a-a8cf-b94c738ee0ff&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:8,&quot;second&quot;:57,&quot;nano&quot;:751574400}},&quot;historyId&quot;:&quot;fcec51a4-306a-42f9-83d3-05c18568817a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:8,&quot;second&quot;:57,&quot;nano&quot;:382672200}},&quot;historyId&quot;:&quot;cb902f6b-24d2-40e5-8743-345bbb86d63a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:7,&quot;second&quot;:4,&quot;nano&quot;:543144400}},&quot;historyId&quot;:&quot;8cec4663-8ae9-4a20-9e3a-5ed10b2bf333&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:7,&quot;second&quot;:4,&quot;nano&quot;:70732800}},&quot;historyId&quot;:&quot;8179d8af-d226-4da4-b193-164bc6074da1&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:7,&quot;second&quot;:3,&quot;nano&quot;:635574100}},&quot;historyId&quot;:&quot;85a40eb7-1f87-428a-a049-114afb4660e9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:7,&quot;second&quot;:3,&quot;nano&quot;:207515300}},&quot;historyId&quot;:&quot;46e38d9f-086b-4438-8912-9ec8ea84a332&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:7,&quot;second&quot;:2,&quot;nano&quot;:698684700}},&quot;historyId&quot;:&quot;76bf69df-7c93-4ddd-8a0f-86e848778356&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:7,&quot;second&quot;:2,&quot;nano&quot;:524570700}},&quot;historyId&quot;:&quot;3d2a97ab-24f3-437b-8b7b-f08a59e76e5a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:7,&quot;second&quot;:2,&quot;nano&quot;:352976200}},&quot;historyId&quot;:&quot;f56dd4e0-a1f2-4ea0-9948-ee9a7e7bc474&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:7,&quot;second&quot;:2,&quot;nano&quot;:172125400}},&quot;historyId&quot;:&quot;fc8b9120-64a3-4e84-8d6b-d80fcf663107&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:7,&quot;second&quot;:1,&quot;nano&quot;:682583300}},&quot;historyId&quot;:&quot;307034da-932e-439c-b5ba-6150bfb3bad7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:7,&quot;second&quot;:1,&quot;nano&quot;:483351600}},&quot;historyId&quot;:&quot;98669d98-a70e-421a-ada3-c76c0fcc0c19&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:7,&quot;second&quot;:1,&quot;nano&quot;:302818400}},&quot;historyId&quot;:&quot;4d22458f-0f52-466e-9b55-d5f372628ba3&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:7,&quot;second&quot;:1,&quot;nano&quot;:129939600}},&quot;historyId&quot;:&quot;4d7705a0-81ba-48f0-bfbb-44cb57fb393e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:56,&quot;nano&quot;:887286800}},&quot;historyId&quot;:&quot;6e07cb34-7dfc-41c9-a4cb-2b0a05d4625c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:55,&quot;nano&quot;:392663700}},&quot;historyId&quot;:&quot;7f6c7b08-06f8-4b42-b97e-018b1fdb001f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:55,&quot;nano&quot;:76574900}},&quot;historyId&quot;:&quot;151dff7f-c687-4303-8839-60a37e17c8c9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:54,&quot;nano&quot;:904665000}},&quot;historyId&quot;:&quot;14f62f1c-65cc-4bc3-bd76-023173699140&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:54,&quot;nano&quot;:720735100}},&quot;historyId&quot;:&quot;d2f24062-2047-4456-a7aa-356aef67472f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:54,&quot;nano&quot;:559958900}},&quot;historyId&quot;:&quot;5d66d41e-b89e-48c2-8874-7cf810ad2fa3&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:54,&quot;nano&quot;:389475200}},&quot;historyId&quot;:&quot;322bb8d6-ba4c-466e-81a5-cb886ca12ed3&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:54,&quot;nano&quot;:228041200}},&quot;historyId&quot;:&quot;f53e7bc7-44ab-4d2d-adbf-fd1b62abadbf&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:53,&quot;nano&quot;:708277000}},&quot;historyId&quot;:&quot;013bfd1b-6851-4463-989b-5a484388c93d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:53,&quot;nano&quot;:525551900}},&quot;historyId&quot;:&quot;7eae40ad-da5a-4c6d-9e1d-3b2b510b1fdd&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:53,&quot;nano&quot;:366588600}},&quot;historyId&quot;:&quot;f27e6046-379b-4296-a4ff-a6c571321af8&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:53,&quot;nano&quot;:197611600}},&quot;historyId&quot;:&quot;3a99b0b9-53db-4e4f-bd05-b1e5c41a5229&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:53,&quot;nano&quot;:27551000}},&quot;historyId&quot;:&quot;858ecff9-a2a9-4c6b-910a-98fa409bba05&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:52,&quot;nano&quot;:842596800}},&quot;historyId&quot;:&quot;5cd31813-1811-4a39-b886-e0c326db0a41&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:52,&quot;nano&quot;:428733600}},&quot;historyId&quot;:&quot;2e2585dc-1eed-4d40-9033-eea612ac3c99&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:52,&quot;nano&quot;:258727800}},&quot;historyId&quot;:&quot;86f8802d-d8b4-4485-8d36-6b6fe830e621&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:52,&quot;nano&quot;:98708400}},&quot;historyId&quot;:&quot;6bfc048e-3de5-4357-a019-c7c130a6c198&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:51,&quot;nano&quot;:938807500}},&quot;historyId&quot;:&quot;42538768-4514-4677-bb91-5ac670a9bdae&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:51,&quot;nano&quot;:382757600}},&quot;historyId&quot;:&quot;46e69fa0-74c9-43e9-bdc5-c4f4b1628af9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:50,&quot;nano&quot;:947931100}},&quot;historyId&quot;:&quot;817a15ac-75c6-47e9-ae86-57046f9c0a25&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:50,&quot;nano&quot;:741796500}},&quot;historyId&quot;:&quot;63dd07be-eb3e-4c73-acc4-63be4f91fabe&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:50,&quot;nano&quot;:110773700}},&quot;historyId&quot;:&quot;98b55aeb-56d0-4d6f-9ba3-6a5a9d14b130&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:49,&quot;nano&quot;:673069700}},&quot;historyId&quot;:&quot;6eab8368-26f2-42be-b65c-59669ac58101&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:49,&quot;nano&quot;:79352300}},&quot;historyId&quot;:&quot;ddcbb32f-7b6c-4058-9005-e3d99f77b39a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:48,&quot;nano&quot;:747936200}},&quot;historyId&quot;:&quot;bbbeefbb-9908-4b9c-8351-fe4277b100e1&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:48,&quot;nano&quot;:331448100}},&quot;historyId&quot;:&quot;2c97ad27-3d73-4792-8d8e-db4df82101c9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:48,&quot;nano&quot;:160570100}},&quot;historyId&quot;:&quot;79d8a1e9-2b84-44de-acb8-1ddbd10fcdc6&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:47,&quot;nano&quot;:985100100}},&quot;historyId&quot;:&quot;a3920dc4-2645-4482-8f34-49e23b864621&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:47,&quot;nano&quot;:812886100}},&quot;historyId&quot;:&quot;5f78567c-1efc-4d8b-8c3a-0859f46964e3&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:47,&quot;nano&quot;:428615400}},&quot;historyId&quot;:&quot;4f10b563-68af-4f51-99f6-17707c3e4d4f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:47,&quot;nano&quot;:252676300}},&quot;historyId&quot;:&quot;f095f5d0-df89-48e2-a5bc-0f84619efeed&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:47,&quot;nano&quot;:42325800}},&quot;historyId&quot;:&quot;c49fdebc-9eb5-4692-a475-593c5d58a84f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:46,&quot;nano&quot;:829711500}},&quot;historyId&quot;:&quot;793c2e31-6f88-467e-b456-afd70b8e09d7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:46,&quot;nano&quot;:628630800}},&quot;historyId&quot;:&quot;0a4b4d0d-2bb8-43a6-bd3c-455155516405&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:46,&quot;nano&quot;:402891200}},&quot;historyId&quot;:&quot;0da32eb3-af1f-45f5-bce9-9f1df0a02195&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:46,&quot;nano&quot;:54357200}},&quot;historyId&quot;:&quot;2bd4c9b9-aa16-4554-9033-326d1dbeca00&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:45,&quot;nano&quot;:597781900}},&quot;historyId&quot;:&quot;6c75d9c8-9b89-43f0-b9ed-3d81369ea6f4&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:45,&quot;nano&quot;:150301400}},&quot;historyId&quot;:&quot;a1c7a5da-03c5-48cd-a0c6-9c25bd307f79&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:44,&quot;nano&quot;:855649900}},&quot;historyId&quot;:&quot;1071263d-508d-49ba-86bb-9318471298c4&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:44,&quot;nano&quot;:649351800}},&quot;historyId&quot;:&quot;8e8dad57-4d6a-4bd5-951e-3ed3d9a03e2c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:44,&quot;nano&quot;:434496500}},&quot;historyId&quot;:&quot;ef75b8c6-bf89-47f9-91e4-2d1b8a09c4a9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:44,&quot;nano&quot;:285134900}},&quot;historyId&quot;:&quot;c4aee6c4-157e-4808-a419-d08acb734448&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:41,&quot;nano&quot;:491353900}},&quot;historyId&quot;:&quot;ef49f8ab-29eb-4aea-86db-6d3ed24941f4&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:41,&quot;nano&quot;:147318600}},&quot;historyId&quot;:&quot;9b7c1246-85cc-4678-9ee4-2ec84aad0491&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:40,&quot;nano&quot;:685338600}},&quot;historyId&quot;:&quot;b884b54c-b6bb-4e90-9be0-1ba1a1d81ca7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:40,&quot;nano&quot;:428241100}},&quot;historyId&quot;:&quot;7f4f356c-cf52-4e7f-9fa0-40c4fef974f7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:40,&quot;nano&quot;:250945300}},&quot;historyId&quot;:&quot;e0b574c5-1dc7-46b8-af59-4113c4d968b6&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:39,&quot;nano&quot;:916048200}},&quot;historyId&quot;:&quot;e5a03521-4262-41a4-970c-635e8b8c31ed&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:39,&quot;nano&quot;:505428300}},&quot;historyId&quot;:&quot;06a7c88b-cfbd-4901-b612-396712e54865&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:39,&quot;nano&quot;:52732000}},&quot;historyId&quot;:&quot;cbd1479f-3381-4059-8410-37e70f937fdc&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:38,&quot;nano&quot;:779258100}},&quot;historyId&quot;:&quot;84adeef1-b6f4-4f7c-9402-6acca43d62e1&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:38,&quot;nano&quot;:615155200}},&quot;historyId&quot;:&quot;083163b1-3aa1-4f0e-ae7a-3b2224105955&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:38,&quot;nano&quot;:446989800}},&quot;historyId&quot;:&quot;4e06a0f1-0614-4bc2-8a9a-4f7ba9486da2&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:38,&quot;nano&quot;:275270600}},&quot;historyId&quot;:&quot;8128fa49-8e57-48b9-8f5e-0df67d53c2a9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:38,&quot;nano&quot;:115374400}},&quot;historyId&quot;:&quot;5d4d7b5a-b166-4087-a28c-c102ccdcba75&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:37,&quot;nano&quot;:954249200}},&quot;historyId&quot;:&quot;ffc61c2e-1d9d-4022-8ddf-355c4fc9b332&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:37,&quot;nano&quot;:454940200}},&quot;historyId&quot;:&quot;eb5b35b0-80f8-416d-a2d4-8719b3f2c739&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:37,&quot;nano&quot;:198106200}},&quot;historyId&quot;:&quot;0d3ac1d9-7567-4e91-bf47-ca758f8a9333&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:36,&quot;nano&quot;:856451600}},&quot;historyId&quot;:&quot;d537df16-3a90-4d13-9774-b71262cd1a5c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:36,&quot;nano&quot;:431709800}},&quot;historyId&quot;:&quot;4eb2092b-6ee6-442c-af3e-66aa57bf2f55&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:36,&quot;nano&quot;:257005600}},&quot;historyId&quot;:&quot;fe45c227-ae3f-469f-b731-0159997cdcba&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:36,&quot;nano&quot;:85966500}},&quot;historyId&quot;:&quot;bda61ca5-95c0-4a93-b208-48b73504e886&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:35,&quot;nano&quot;:612748000}},&quot;historyId&quot;:&quot;6e026aee-a04b-4772-96b2-9d6f6a7da4f4&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:35,&quot;nano&quot;:310029300}},&quot;historyId&quot;:&quot;10b37324-0e79-45a4-9273-386db831cb29&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:35,&quot;nano&quot;:143888800}},&quot;historyId&quot;:&quot;bb34a35f-5aa1-4198-b41a-4791bed0b833&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:34,&quot;nano&quot;:969017700}},&quot;historyId&quot;:&quot;1cb1f299-24cc-414c-bae6-c5d1145cfacf&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:34,&quot;nano&quot;:779678000}},&quot;historyId&quot;:&quot;04e1edad-ae93-4e84-af53-456947982a2d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:34,&quot;nano&quot;:612654200}},&quot;historyId&quot;:&quot;a4906d69-ac5f-4728-9b58-197df6c85dd7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:34,&quot;nano&quot;:260094200}},&quot;historyId&quot;:&quot;5fb2eb5d-895d-49c9-bd1b-4db869df0bd4&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:33,&quot;nano&quot;:897540100}},&quot;historyId&quot;:&quot;b02fa1db-1bf9-4d55-b374-991c66b3fe14&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:33,&quot;nano&quot;:748971700}},&quot;historyId&quot;:&quot;80d565e4-a38c-4603-8711-e7c492b11ea0&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:33,&quot;nano&quot;:587185300}},&quot;historyId&quot;:&quot;07d916ff-4354-47f0-866e-6790dc1887d1&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:33,&quot;nano&quot;:430535400}},&quot;historyId&quot;:&quot;f8824da8-b512-414b-9117-921a8930786d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:33,&quot;nano&quot;:263663600}},&quot;historyId&quot;:&quot;90cf4e63-cf54-47cf-8619-4ed1e4912830&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:33,&quot;nano&quot;:102266700}},&quot;historyId&quot;:&quot;49cd1275-56d4-42ed-ba41-49f56f475ee2&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:32,&quot;nano&quot;:562647400}},&quot;historyId&quot;:&quot;94208364-02f8-46ce-ba50-1a7d733d301a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:32,&quot;nano&quot;:362208800}},&quot;historyId&quot;:&quot;b637bd94-abf6-4bd8-9e60-fb05f0c9209d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:32,&quot;nano&quot;:190900200}},&quot;historyId&quot;:&quot;ed8ac770-6a89-436b-8e5a-94b2de0512d4&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:32,&quot;nano&quot;:8148500}},&quot;historyId&quot;:&quot;e4d371a3-4d82-4bbd-ace7-5bac420126e2&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:31,&quot;nano&quot;:853950600}},&quot;historyId&quot;:&quot;c645bc07-e998-49ec-b3ba-81417f03fecf&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:31,&quot;nano&quot;:699592500}},&quot;historyId&quot;:&quot;aa03d0a8-d85c-454b-ae76-20c2247f7b8a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:31,&quot;nano&quot;:535147100}},&quot;historyId&quot;:&quot;7edf1c8a-d12b-4b6e-bf20-7ef34287ccb9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:31,&quot;nano&quot;:382664900}},&quot;historyId&quot;:&quot;c8af5bbe-49f1-48d5-9552-abeb4e3b27d1&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:30,&quot;nano&quot;:932384100}},&quot;historyId&quot;:&quot;cda317d9-fc74-4532-8ccf-743b82e08a6b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:30,&quot;nano&quot;:534638400}},&quot;historyId&quot;:&quot;aa466c3c-f88b-400f-852b-01c257c05901&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:30,&quot;nano&quot;:35102000}},&quot;historyId&quot;:&quot;c5ef7bde-833a-434d-aacf-c87e2c1079ec&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:29,&quot;nano&quot;:569362400}},&quot;historyId&quot;:&quot;f90ac61e-1f6a-4ea8-8518-ae7730fd0b78&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:29,&quot;nano&quot;:135184600}},&quot;historyId&quot;:&quot;45c63cbf-ad5d-44ba-9db1-d076e41b732d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:28,&quot;nano&quot;:86111400}},&quot;historyId&quot;:&quot;2a29972c-ee91-4c7c-9de6-0b55c33cd642&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:27,&quot;nano&quot;:652043700}},&quot;historyId&quot;:&quot;20c4274d-bb58-45eb-ab04-5fdcb271f0af&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:27,&quot;nano&quot;:206856400}},&quot;historyId&quot;:&quot;9a07b8bc-0d51-46a0-9ec7-b4003e6d970a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:26,&quot;nano&quot;:747466600}},&quot;historyId&quot;:&quot;ef68d620-6363-4d7e-9b1d-0f899d7ad95a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:26,&quot;nano&quot;:397671800}},&quot;historyId&quot;:&quot;501ee525-007e-4731-b697-f889338c9fbb&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:26,&quot;nano&quot;:231305600}},&quot;historyId&quot;:&quot;54fb9b4b-f42d-469e-886f-20e4c1f581c0&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:26,&quot;nano&quot;:71770100}},&quot;historyId&quot;:&quot;a5bbdae6-d638-4c5a-9a5e-8470c93d4912&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:25,&quot;nano&quot;:656033000}},&quot;historyId&quot;:&quot;2e6cc361-53b0-4aeb-bed1-9a0fdd27f2c0&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:25,&quot;nano&quot;:352395300}},&quot;historyId&quot;:&quot;b34622c4-16ee-46ff-a565-7bd82ecf5ed3&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:25,&quot;nano&quot;:175765400}},&quot;historyId&quot;:&quot;631ceb7f-5abd-4a25-93ff-a865d6b6323f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:24,&quot;nano&quot;:995660100}},&quot;historyId&quot;:&quot;cf4ea4cb-748f-4efb-964f-81ed2666637b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:24,&quot;nano&quot;:836267600}},&quot;historyId&quot;:&quot;51df1d46-e891-4a46-9dc7-9266bb979b41&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:24,&quot;nano&quot;:668900500}},&quot;historyId&quot;:&quot;5e9c1c7a-b6a7-4346-b5dd-f97cd616b425&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:24,&quot;nano&quot;:496539900}},&quot;historyId&quot;:&quot;a852ec59-b408-48a1-a8c3-9d6e7070ecd8&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:23,&quot;nano&quot;:848342200}},&quot;historyId&quot;:&quot;7501bfbc-c1dc-4b5b-8e11-62081f5e93e5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:23,&quot;nano&quot;:571192900}},&quot;historyId&quot;:&quot;588847d7-aff9-4de0-9804-f1abfdefc086&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:23,&quot;nano&quot;:197880300}},&quot;historyId&quot;:&quot;ebec0213-d73e-4937-9295-3a6fa2ae634d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:22,&quot;nano&quot;:899949000}},&quot;historyId&quot;:&quot;aaa0c9d0-9f2e-416f-9ca7-9a729776b82f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:22,&quot;nano&quot;:719054700}},&quot;historyId&quot;:&quot;95367e74-a9a8-4c32-a1a8-e88ae40e2ed0&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:22,&quot;nano&quot;:417790500}},&quot;historyId&quot;:&quot;870ee095-13e9-4eb5-a850-34dd91cfdd6d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:22,&quot;nano&quot;:256569900}},&quot;historyId&quot;:&quot;1a691e5f-1b7e-4f1a-9ffd-ac35108bb020&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:22,&quot;nano&quot;:86543800}},&quot;historyId&quot;:&quot;98112213-071a-40a6-9dc5-f1242e24bfb5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:21,&quot;nano&quot;:898803600}},&quot;historyId&quot;:&quot;b2711ebd-3212-46f0-bd35-ef0d183e1ca7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:21,&quot;nano&quot;:722926100}},&quot;historyId&quot;:&quot;a56aca95-6e2d-4723-81b0-c3ebecaaaf88&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:14,&quot;nano&quot;:141104000}},&quot;historyId&quot;:&quot;801179c5-e50b-4a56-b194-2edd0e64e619&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:13,&quot;nano&quot;:659418100}},&quot;historyId&quot;:&quot;bc52b3e5-5832-4fd3-b7eb-ad7f7a2e7c1d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:13,&quot;nano&quot;:290559900}},&quot;historyId&quot;:&quot;72a1f288-3050-4168-ade8-1027fd90dfe7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:12,&quot;nano&quot;:887892200}},&quot;historyId&quot;:&quot;2a9f0fea-8838-4fea-8006-c58149b1cc05&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:12,&quot;nano&quot;:316600200}},&quot;historyId&quot;:&quot;c397e138-bbd2-4cfe-bc9f-91f539423c53&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:11,&quot;nano&quot;:786637300}},&quot;historyId&quot;:&quot;f3a91205-4b14-4350-99e0-c18f129b3a95&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:11,&quot;nano&quot;:361716600}},&quot;historyId&quot;:&quot;d5d3fa5f-81ff-4584-a20f-9bf8fa4bcace&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:11,&quot;nano&quot;:74465600}},&quot;historyId&quot;:&quot;c84fd44c-3bda-41ab-966c-60b1a67383b5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:8,&quot;nano&quot;:169457000}},&quot;historyId&quot;:&quot;cd8bb777-9938-4c20-b2b5-d58d701043be&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:7,&quot;nano&quot;:885358500}},&quot;historyId&quot;:&quot;ebb81b43-2ceb-4a51-83e8-b5a48dac65a8&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:7,&quot;nano&quot;:436270500}},&quot;historyId&quot;:&quot;1e3363c6-084f-4909-8c16-80c81967b6da&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:7,&quot;nano&quot;:36222400}},&quot;historyId&quot;:&quot;36adf472-9ec1-4586-baed-42c06bd5c65f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:6,&quot;nano&quot;:637419500}},&quot;historyId&quot;:&quot;e8a9ffc9-b495-4a2f-b629-1e57a09577fc&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:6,&quot;nano&quot;:363804800}},&quot;historyId&quot;:&quot;5198b9df-ac9a-4f89-a428-6ed29e83171e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:6,&quot;nano&quot;:18913100}},&quot;historyId&quot;:&quot;fec9b180-d735-419d-b1e4-6258d884c2c5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:5,&quot;nano&quot;:737111600}},&quot;historyId&quot;:&quot;17deb158-5eac-4ae3-b39d-b82060fb47a6&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:5,&quot;nano&quot;:567165200}},&quot;historyId&quot;:&quot;a7066521-e741-4035-a80b-ed6876b31a18&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:1,&quot;nano&quot;:768558300}},&quot;historyId&quot;:&quot;82bc8ae3-59e8-4e84-b75a-bf47c3be3e80&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:1,&quot;nano&quot;:576992300}},&quot;historyId&quot;:&quot;a5968ef0-4c0b-42a6-835b-1386fc3d7eb5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:1,&quot;nano&quot;:368012800}},&quot;historyId&quot;:&quot;773a5e2c-acfd-476f-a710-11ef912924fe&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:1,&quot;nano&quot;:189565500}},&quot;historyId&quot;:&quot;14fd21ed-f8f7-4244-9046-44fb451878ca&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:0,&quot;nano&quot;:980152300}},&quot;historyId&quot;:&quot;88af7e28-a03c-4cf0-9603-a1ff77df08db&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:0,&quot;nano&quot;:610509200}},&quot;historyId&quot;:&quot;ec500f32-0980-4973-8e24-a3fce34addb6&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:0,&quot;nano&quot;:399545200}},&quot;historyId&quot;:&quot;86457976-a5c3-4069-9864-256be65b1942&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:0,&quot;nano&quot;:193271800}},&quot;historyId&quot;:&quot;041eba5c-597d-4c9e-8540-d74503c07719&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:5,&quot;second&quot;:59,&quot;nano&quot;:996598000}},&quot;historyId&quot;:&quot;d122cf9c-a031-46ea-9c26-09e5c946b672&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:5,&quot;second&quot;:59,&quot;nano&quot;:785079300}},&quot;historyId&quot;:&quot;d2591b92-5513-4372-bcc4-54d6f642a76f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:5,&quot;second&quot;:59,&quot;nano&quot;:581098000}},&quot;historyId&quot;:&quot;74874c6e-9d1a-405d-b57f-af5c85332b86&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:5,&quot;second&quot;:57,&quot;nano&quot;:350325200}},&quot;historyId&quot;:&quot;d1a5672e-c618-4aa5-8132-2a3ff5701431&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:4,&quot;second&quot;:50,&quot;nano&quot;:895509200}},&quot;historyId&quot;:&quot;21446f87-4401-4314-a94c-123796696b68&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:4,&quot;second&quot;:50,&quot;nano&quot;:232010400}},&quot;historyId&quot;:&quot;b525da95-38e1-4ce2-ad81-7ba09a4a7345&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:4,&quot;second&quot;:49,&quot;nano&quot;:684071000}},&quot;historyId&quot;:&quot;d0fedd71-a9fd-4237-9cd9-bdb5a1c290e1&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:4,&quot;second&quot;:49,&quot;nano&quot;:69086000}},&quot;historyId&quot;:&quot;e0a6ee84-a1ba-4f2d-b58d-19aa34ab0e72&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:4,&quot;second&quot;:48,&quot;nano&quot;:447483700}},&quot;historyId&quot;:&quot;9b9489a6-2736-4ebc-920a-6ddbd6440616&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:4,&quot;second&quot;:47,&quot;nano&quot;:849816300}},&quot;historyId&quot;:&quot;0a9d180d-ec93-4d47-928f-b5329f18be92&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:4,&quot;second&quot;:47,&quot;nano&quot;:129359800}},&quot;historyId&quot;:&quot;374b1e6d-069e-42dd-b750-06d08790e863&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:4,&quot;second&quot;:46,&quot;nano&quot;:347765800}},&quot;historyId&quot;:&quot;ab9d9fb8-0783-499c-8e0d-1f4ebbe7b860&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:4,&quot;second&quot;:45,&quot;nano&quot;:571042600}},&quot;historyId&quot;:&quot;b6606f16-417b-4a89-847b-7416a56c4210&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:4,&quot;second&quot;:45,&quot;nano&quot;:150192000}},&quot;historyId&quot;:&quot;0d3cdf3b-ca10-44ff-bd5c-1c4d298efe2d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:4,&quot;second&quot;:44,&quot;nano&quot;:868126500}},&quot;historyId&quot;:&quot;0b043835-94e1-4793-93fc-e830e2f4018b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:4,&quot;second&quot;:44,&quot;nano&quot;:656012500}},&quot;historyId&quot;:&quot;201725ef-5b58-4c60-8f5c-e9873cb48ab7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:4,&quot;second&quot;:44,&quot;nano&quot;:382100200}},&quot;historyId&quot;:&quot;8591589a-5303-46ea-9a23-bf674618bd19&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:4,&quot;second&quot;:44,&quot;nano&quot;:152836500}},&quot;historyId&quot;:&quot;998e997b-832f-40af-afcc-ac135e5249e7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:4,&quot;second&quot;:43,&quot;nano&quot;:831087600}},&quot;historyId&quot;:&quot;3d99150a-8923-40e2-ad85-f0169cb39d70&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:4,&quot;second&quot;:33,&quot;nano&quot;:317051500}},&quot;historyId&quot;:&quot;358a46f7-3f35-4b69-b133-f8ade23404d9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:4,&quot;second&quot;:32,&quot;nano&quot;:968706900}},&quot;historyId&quot;:&quot;dc5f09e9-9b0a-411d-93b5-43d49af5116e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:4,&quot;second&quot;:32,&quot;nano&quot;:585208900}},&quot;historyId&quot;:&quot;ab435d7e-a793-4bb3-be93-125284861824&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:4,&quot;second&quot;:32,&quot;nano&quot;:307914700}},&quot;historyId&quot;:&quot;97105484-db45-4e6e-a116-4db0a6804b12&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:4,&quot;second&quot;:32,&quot;nano&quot;:34121800}},&quot;historyId&quot;:&quot;7fc9b610-3d69-4bc1-8fb9-a25d98fa40e0&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:4,&quot;second&quot;:22,&quot;nano&quot;:295507000}},&quot;historyId&quot;:&quot;ab25c6ec-91e3-411e-84fa-e17418890871&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:4,&quot;second&quot;:22,&quot;nano&quot;:184815500}},&quot;historyId&quot;:&quot;cbabd1cb-4007-42fd-a177-aecab9bd6cb0&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:4,&quot;second&quot;:22,&quot;nano&quot;:3593900}},&quot;historyId&quot;:&quot;cd0e07f0-35e8-4d24-9915-48cc5e17f905&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:4,&quot;second&quot;:21,&quot;nano&quot;:865770000}},&quot;historyId&quot;:&quot;f31808f8-a451-478b-840d-8b10b6b81408&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:4,&quot;second&quot;:21,&quot;nano&quot;:730407700}},&quot;historyId&quot;:&quot;505f8b51-ad40-45d7-846f-c954b0a58d27&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:4,&quot;second&quot;:21,&quot;nano&quot;:553526400}},&quot;historyId&quot;:&quot;b8f78ed5-1431-4746-a8cc-2eff65015916&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:2,&quot;second&quot;:23,&quot;nano&quot;:408035100}},&quot;historyId&quot;:&quot;2a513488-c00d-4907-9a53-5b1c7f6dbf46&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:15,&quot;minute&quot;:0,&quot;second&quot;:18,&quot;nano&quot;:955761000}},&quot;historyId&quot;:&quot;b6fd4c00-92ce-407b-8a47-33cf1fb36f55&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:59,&quot;second&quot;:30,&quot;nano&quot;:243169200}},&quot;historyId&quot;:&quot;856fc013-e593-49b0-a6e3-dbc3f5a9215d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:20,&quot;second&quot;:25,&quot;nano&quot;:507219300}},&quot;historyId&quot;:&quot;e5db114f-12f4-4699-ae57-2b10ab1fb035&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:6,&quot;second&quot;:2,&quot;nano&quot;:525563300}},&quot;historyId&quot;:&quot;574e5050-310e-42a3-abef-cb824af77fdd&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-filter-interceptor&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/test&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.filter_interceptor.controller.TestController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;4a596b790fb9fdd5fbf5049e155a778f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:11,&quot;day&quot;:4},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:2,&quot;second&quot;:57,&quot;nano&quot;:576656100}},&quot;historyId&quot;:&quot;38f745ed-91cb-478b-8eb9-5f8acaac2ad7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-file&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/file/native&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.file.controller.FileUploadController&quot;,&quot;methodName&quot;:&quot;nativeUpload&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;a1e8429f5c2bc2533404b3efbbd1ceea&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/file/native&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\yz.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:31},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:31,&quot;second&quot;:24,&quot;nano&quot;:5000800}},&quot;historyId&quot;:&quot;024401cf-f858-403f-ad92-6a3ff4c92088&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-file&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/file/oss&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.file.controller.FileUploadController&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;3d39cda4b51b32954f557f1ec7d10637&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/file/oss&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\yz.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:31},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:26,&quot;second&quot;:36,&quot;nano&quot;:860879700}},&quot;historyId&quot;:&quot;2545fcb8-f8a0-4dea-86c5-e2db93afda48&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-file&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/file/minio&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.file.controller.FileUploadController&quot;,&quot;methodName&quot;:&quot;minioUpload&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;3d875fde4b687cd2e60ef25cc4566730&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/file/minio&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\yz.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:31},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:25,&quot;second&quot;:0,&quot;nano&quot;:46786300}},&quot;historyId&quot;:&quot;3de24904-2cfa-492a-b942-36ddae1ac8c8&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-file&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/file/native&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.file.controller.FileUploadController&quot;,&quot;methodName&quot;:&quot;nativeUpload&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;a1e8429f5c2bc2533404b3efbbd1ceea&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/file/native&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\gk\\照片\\IMG_1781(20240814-012159).jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:31},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:14,&quot;second&quot;:18,&quot;nano&quot;:654082600}},&quot;historyId&quot;:&quot;e70540e0-d39c-4f9e-9c60-4afdebb5d23a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-file&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/file/native&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.file.controller.FileUploadController&quot;,&quot;methodName&quot;:&quot;nativeUpload&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;a1e8429f5c2bc2533404b3efbbd1ceea&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/file/native&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\gk\\照片\\IMG_1781(20240814-012159).jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:31},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:13,&quot;second&quot;:3,&quot;nano&quot;:857225000}},&quot;historyId&quot;:&quot;dee0eecc-fbbd-4598-b4b9-f6f5b84d4986&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-file&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/file/native&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.file.controller.FileUploadController&quot;,&quot;methodName&quot;:&quot;nativeUpload&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;a1e8429f5c2bc2533404b3efbbd1ceea&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/file/native&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\gk\\照片\\IMG_1781(20240814-012159).jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;},{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;request&quot;,&quot;type&quot;:&quot;text&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:31},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:11,&quot;second&quot;:47,&quot;nano&quot;:424260100}},&quot;historyId&quot;:&quot;9cc44817-20b2-4ed6-9599-d9bcae818451&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 0,\n  \&quot;createdAt\&quot;: \&quot;2024-10-22T13:25:00.000Z\&quot;,\n  \&quot;answerContent\&quot;: \&quot;第一问答案\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 1,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:25\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;\&quot;,\n      \&quot;userId\&quot;: 1,\n      \&quot;email\&quot;: \&quot;\&quot;,\n      \&quot;username\&quot;: \&quot;\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:26},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:27,&quot;second&quot;:44,&quot;nano&quot;:152791900}},&quot;historyId&quot;:&quot;306fd1b6-7e6e-4323-9467-6f26a85b23dc&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 0,\n  \&quot;createdAt\&quot;: \&quot;2024-10-22T13:25:00.000Z\&quot;,\n  \&quot;answerContent\&quot;: \&quot;第一问答案\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 1,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:25\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;\&quot;,\n      \&quot;userId\&quot;: 1,\n      \&quot;email\&quot;: \&quot;\&quot;,\n      \&quot;username\&quot;: \&quot;\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:26},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:27,&quot;second&quot;:43,&quot;nano&quot;:540649700}},&quot;historyId&quot;:&quot;1d3526d3-2aa0-4e8c-bde7-d75499f96a23&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers/question/{questionId}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;getAnswersByQuestionId&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;ac5a008049dcbe744a4413bd4e0cd424&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers/question/{questionId}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;questionId&quot;,&quot;value&quot;:&quot;1&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:26},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:27,&quot;second&quot;:39,&quot;nano&quot;:772490800}},&quot;historyId&quot;:&quot;13ef118f-2833-4a45-bfb4-4eb96c2ea4ca&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 0,\n  \&quot;createdAt\&quot;: \&quot;2024-10-22T13:25:00.000Z\&quot;,\n  \&quot;answerContent\&quot;: \&quot;第一问答案\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 1,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:25\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;\&quot;,\n      \&quot;userId\&quot;: 1,\n      \&quot;email\&quot;: \&quot;\&quot;,\n      \&quot;username\&quot;: \&quot;\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:26},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:27,&quot;second&quot;:35,&quot;nano&quot;:195401700}},&quot;historyId&quot;:&quot;3b75ea0b-3848-49a0-8256-f671cdd4a27a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 0,\n  \&quot;createdAt\&quot;: \&quot;2024-10-22T13:25:00.000Z\&quot;,\n  \&quot;answerContent\&quot;: \&quot;第一问答案\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 1,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:25\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;\&quot;,\n      \&quot;userId\&quot;: 1,\n      \&quot;email\&quot;: \&quot;\&quot;,\n      \&quot;username\&quot;: \&quot;\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:26},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:12,&quot;second&quot;:22,&quot;nano&quot;:726396100}},&quot;historyId&quot;:&quot;0c883aba-f0c8-4311-a93f-fa374c9c7af4&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 0,\n  \&quot;createdAt\&quot;: \&quot;2024-10-22 13:25\&quot;,\n  \&quot;answerContent\&quot;: \&quot;第一问答案\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 1,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:25\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;\&quot;,\n      \&quot;userId\&quot;: 1,\n      \&quot;email\&quot;: \&quot;\&quot;,\n      \&quot;username\&quot;: \&quot;\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:26},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:11,&quot;second&quot;:55,&quot;nano&quot;:875005600}},&quot;historyId&quot;:&quot;ee977e2d-78d9-4426-8170-3fbdf25e146e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 0,\n  \&quot;createdAt\&quot;: \&quot;2024-10-22 13:25\&quot;,\n  \&quot;answerContent\&quot;: \&quot;第一问答案\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 1,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:25\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;\&quot;,\n      \&quot;userId\&quot;: 1,\n      \&quot;email\&quot;: \&quot;\&quot;,\n      \&quot;username\&quot;: \&quot;\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:26},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:11,&quot;second&quot;:55,&quot;nano&quot;:112778600}},&quot;historyId&quot;:&quot;cb040d3a-d29c-4d0e-8937-69d8b3d89444&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 0,\n  \&quot;createdAt\&quot;: \&quot;2024-10-22 13:25\&quot;,\n  \&quot;answerContent\&quot;: \&quot;第一问答案\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 1,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:25\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;\&quot;,\n      \&quot;userId\&quot;: 1,\n      \&quot;email\&quot;: \&quot;\&quot;,\n      \&quot;username\&quot;: \&quot;\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:26},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:11,&quot;second&quot;:54,&quot;nano&quot;:315036200}},&quot;historyId&quot;:&quot;843d401d-2cad-4574-a6a9-7ddaa922ca09&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 0,\n  \&quot;createdAt\&quot;: \&quot;2024-10-22 13:25\&quot;,\n  \&quot;answerContent\&quot;: \&quot;第一问答案\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 1,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:25\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;\&quot;,\n      \&quot;userId\&quot;: 1,\n      \&quot;email\&quot;: \&quot;\&quot;,\n      \&quot;username\&quot;: \&quot;\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:26},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:11,&quot;second&quot;:53,&quot;nano&quot;:220339300}},&quot;historyId&quot;:&quot;7a1d0ccf-e3a5-4744-a24b-11c31b1eda17&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 0,\n  \&quot;createdAt\&quot;: \&quot;2024-10-22 13:25\&quot;,\n  \&quot;answerContent\&quot;: \&quot;第一问答案\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 1,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:25\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;\&quot;,\n      \&quot;userId\&quot;: 1,\n      \&quot;email\&quot;: \&quot;\&quot;,\n      \&quot;username\&quot;: \&quot;\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:26},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:11,&quot;second&quot;:15,&quot;nano&quot;:692871200}},&quot;historyId&quot;:&quot;344c65a1-2c45-49d7-ac1f-830dec4d41db&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 0,\n  \&quot;createdAt\&quot;: \&quot;2024-10-22 13:25\&quot;,\n  \&quot;answerContent\&quot;: \&quot;第一问答案\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 1,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:25\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;\&quot;,\n      \&quot;userId\&quot;: 1,\n      \&quot;email\&quot;: \&quot;\&quot;,\n      \&quot;username\&quot;: \&quot;\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:26},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:9,&quot;second&quot;:9,&quot;nano&quot;:335849900}},&quot;historyId&quot;:&quot;a972f830-66de-4752-a53a-5d5a33781392&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 0,\n  \&quot;createdAt\&quot;: \&quot;2024-10-22 13:25\&quot;,\n  \&quot;answerContent\&quot;: \&quot;第一问答案\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 1,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:25\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;\&quot;,\n      \&quot;userId\&quot;: 1,\n      \&quot;email\&quot;: \&quot;\&quot;,\n      \&quot;username\&quot;: \&quot;\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:26},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:7,&quot;second&quot;:52,&quot;nano&quot;:818307200}},&quot;historyId&quot;:&quot;c4212cde-ffb2-455b-95e2-c0283eb6ea69&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 0,\n  \&quot;createdAt\&quot;: \&quot;2024-10-22 13:25\&quot;,\n  \&quot;answerContent\&quot;: \&quot;第一问答案\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 1,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:25\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;\&quot;,\n      \&quot;userId\&quot;: 1,\n      \&quot;email\&quot;: \&quot;\&quot;,\n      \&quot;username\&quot;: \&quot;\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:26},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:5,&quot;second&quot;:45,&quot;nano&quot;:8152000}},&quot;historyId&quot;:&quot;bbb46c8e-aaee-4067-bf7a-2ed5af77efb6&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 0,\n  \&quot;createdAt\&quot;: \&quot;2024-10-22 13:25\&quot;,\n  \&quot;answerContent\&quot;: \&quot;第一问答案\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 1,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:25\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;\&quot;,\n      \&quot;userId\&quot;: 1,\n      \&quot;email\&quot;: \&quot;\&quot;,\n      \&quot;username\&quot;: \&quot;\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:26},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:5,&quot;second&quot;:41,&quot;nano&quot;:298699300}},&quot;historyId&quot;:&quot;b7f64371-b687-438e-9fbe-73058cdcc7a7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 0,\n  \&quot;createdAt\&quot;: \&quot;2024-10-22 13:25\&quot;,\n  \&quot;answerContent\&quot;: \&quot;第一问答案\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 1,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:25\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;\&quot;,\n      \&quot;userId\&quot;: 1,\n      \&quot;email\&quot;: \&quot;\&quot;,\n      \&quot;username\&quot;: \&quot;\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:26},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:5,&quot;second&quot;:1,&quot;nano&quot;:410003000}},&quot;historyId&quot;:&quot;e87bedfe-996f-4038-9982-05805a2a2e30&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/questions&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.QuestionController&quot;,&quot;methodName&quot;:&quot;postQuestion&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;0294f6c114127578df512334303c5ffa&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/questions&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;questionContent\&quot;: \&quot;问题4\&quot;,\n  \&quot;questionId\&quot;: 0,\n  \&quot;createTime\&quot;: \&quot;2024-10-24 14:33\&quot;,\n  \&quot;user\&quot;: {\n    \&quot;password\&quot;: \&quot;\&quot;,\n    \&quot;userId\&quot;: 2,\n    \&quot;email\&quot;: \&quot;\&quot;,\n    \&quot;username\&quot;: \&quot;\&quot;\n  }\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:15,&quot;second&quot;:40,&quot;nano&quot;:128479000}},&quot;historyId&quot;:&quot;532e25e1-50b2-49bd-9864-471a6bc92f3b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/questions&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.QuestionController&quot;,&quot;methodName&quot;:&quot;postQuestion&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;0294f6c114127578df512334303c5ffa&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/questions&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;questionContent\&quot;: \&quot;问题4\&quot;,\n  \&quot;questionId\&quot;: 0,\n  \&quot;createTime\&quot;: \&quot;2024-10-24 14:33\&quot;,\n  \&quot;user\&quot;: {\n    \&quot;password\&quot;: \&quot;\&quot;,\n    \&quot;userId\&quot;: 2,\n    \&quot;email\&quot;: \&quot;\&quot;,\n    \&quot;username\&quot;: \&quot;\&quot;\n  }\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:15,&quot;minute&quot;:9,&quot;second&quot;:10,&quot;nano&quot;:435268800}},&quot;historyId&quot;:&quot;60f51f70-3579-49e4-a7df-a79e4983a108&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/questions&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.QuestionController&quot;,&quot;methodName&quot;:&quot;postQuestion&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;0294f6c114127578df512334303c5ffa&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/questions&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;questionContent\&quot;: \&quot;内容4\&quot;,\n  \&quot;questionId\&quot;: 0,\n  \&quot;createTime\&quot;: \&quot;2024-10-24 14:33\&quot;,\n  \&quot;user\&quot;: {\n    \&quot;password\&quot;: \&quot;\&quot;,\n    \&quot;userId\&quot;: 1,\n    \&quot;email\&quot;: \&quot;\&quot;,\n    \&quot;username\&quot;: \&quot;\&quot;\n  }\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:15,&quot;minute&quot;:8,&quot;second&quot;:42,&quot;nano&quot;:522827500}},&quot;historyId&quot;:&quot;062240b9-94e4-4ec5-9129-c968105ce083&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/questions&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.QuestionController&quot;,&quot;methodName&quot;:&quot;postQuestion&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;0294f6c114127578df512334303c5ffa&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/questions&quot;,&quot;requestBody&quot;:&quot;{\n    \&quot;title\&quot;: \&quot;问题标题\&quot;,\n    \&quot;question_content\&quot;: \&quot;问题内容\&quot;,\n    \&quot;createTime\&quot;: \&quot;2023-10-24 12:00\&quot;\n}\n\n&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:33,&quot;second&quot;:27,&quot;nano&quot;:711990600}},&quot;historyId&quot;:&quot;03800bd0-4908-4d08-84b3-28b79bbbb704&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/questions&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.QuestionController&quot;,&quot;methodName&quot;:&quot;postQuestion&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;0294f6c114127578df512334303c5ffa&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/questions&quot;,&quot;requestBody&quot;:&quot;{\n    \&quot;title\&quot;: \&quot;问题标题\&quot;,\n    \&quot;content\&quot;: \&quot;问题内容\&quot;,\n    \&quot;createTime\&quot;: \&quot;2023-10-24 12:00\&quot;\n}\n\n&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:32,&quot;second&quot;:58,&quot;nano&quot;:341801400}},&quot;historyId&quot;:&quot;4e2026d5-2d35-4866-b081-0b04408bf4be&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/questions&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.QuestionController&quot;,&quot;methodName&quot;:&quot;postQuestion&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;0294f6c114127578df512334303c5ffa&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/questions&quot;,&quot;requestBody&quot;:&quot;{\n    \&quot;title\&quot;: \&quot;问题标题\&quot;,\n    \&quot;content\&quot;: \&quot;问题内容\&quot;,\n    \&quot;createTime\&quot;: \&quot;2023-10-24T12:00:00\&quot;\n}\n&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:32,&quot;second&quot;:16,&quot;nano&quot;:218298000}},&quot;historyId&quot;:&quot;a744dc16-70cc-457f-a3a1-d584673a094a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/questions&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.QuestionController&quot;,&quot;methodName&quot;:&quot;postQuestion&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;0294f6c114127578df512334303c5ffa&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/questions&quot;,&quot;requestBody&quot;:&quot;{\n    \&quot;title\&quot;: \&quot;问题标题\&quot;,\n    \&quot;content\&quot;: \&quot;问题内容\&quot;,\n    \&quot;createTime\&quot;: \&quot;2023-10-24T12:00:00\&quot;\n}\n&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:32,&quot;second&quot;:11,&quot;nano&quot;:24564700}},&quot;historyId&quot;:&quot;68d28ae8-3e00-4548-9106-b148e381e67e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/questions&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.QuestionController&quot;,&quot;methodName&quot;:&quot;postQuestion&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;0294f6c114127578df512334303c5ffa&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/questions&quot;,&quot;requestBody&quot;:&quot;{\n    \&quot;title\&quot;: \&quot;问题标题\&quot;,\n    \&quot;content\&quot;: \&quot;问题内容\&quot;,\n    \&quot;createTime\&quot;: \&quot;2023-10-24T12:00:00\&quot;\n}\n&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:32,&quot;second&quot;:2,&quot;nano&quot;:337610100}},&quot;historyId&quot;:&quot;fd360dd0-bb24-4dd8-ab7e-117478656128&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/questions/{id}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.QuestionController&quot;,&quot;methodName&quot;:&quot;getQuestionById&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;9fa704dc00ce2a85a38dfaf0051ada8a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/questions/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;2&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:19,&quot;second&quot;:26,&quot;nano&quot;:103891800}},&quot;historyId&quot;:&quot;927fc257-bd95-49aa-aae9-fda137d68cf1&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/questions&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.QuestionController&quot;,&quot;methodName&quot;:&quot;getAllQuestions&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;060778c6ef74a10d43e981cd77c30823&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/questions&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:19,&quot;second&quot;:19,&quot;nano&quot;:150867400}},&quot;historyId&quot;:&quot;fac6f8be-a7a8-48d5-a6b6-217a201fbce4&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/questions&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.QuestionController&quot;,&quot;methodName&quot;:&quot;postQuestion&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;0294f6c114127578df512334303c5ffa&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/questions&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;questionContent\&quot;: \&quot;第一问\&quot;,\n  \&quot;questionId\&quot;: 0,\n  \&quot;questionCreated\&quot;: {\n    \&quot;cdate\&quot;: {\n      \&quot;zoneOffset\&quot;: 0,\n      \&quot;cachedFixedDateJan1\&quot;: 0,\n      \&quot;hours\&quot;: 0,\n      \&quot;zoneinfo\&quot;: {},\n      \&quot;year\&quot;: 0,\n      \&quot;minutes\&quot;: 0,\n      \&quot;normalized\&quot;: false,\n      \&quot;forceStandardTime\&quot;: false,\n      \&quot;cachedYear\&quot;: 0,\n      \&quot;leapYear\&quot;: false,\n      \&quot;locale\&quot;: {},\n      \&quot;fraction\&quot;: 0,\n      \&quot;cachedFixedDateNextJan1\&quot;: 0,\n      \&quot;seconds\&quot;: 0,\n      \&quot;dayOfWeek\&quot;: 0,\n      \&quot;month\&quot;: 0,\n      \&quot;daylightSaving\&quot;: 0,\n      \&quot;era\&quot;: {\n        \&quot;localTime\&quot;: false,\n        \&quot;name\&quot;: \&quot;\&quot;,\n        \&quot;abbr\&quot;: \&quot;\&quot;,\n        \&quot;sinceDate\&quot;: {\n          \&quot;zoneOffset\&quot;: 0,\n          \&quot;hours\&quot;: 0,\n          \&quot;zoneinfo\&quot;: {\n            \&quot;zoneId\&quot;: {},\n            \&quot;ID\&quot;: \&quot;\&quot;\n          },\n          \&quot;year\&quot;: 0,\n          \&quot;minutes\&quot;: 0,\n          \&quot;normalized\&quot;: false,\n          \&quot;forceStandardTime\&quot;: false,\n          \&quot;leapYear\&quot;: false,\n          \&quot;locale\&quot;: {\n            \&quot;localeExtensions\&quot;: {\n              \&quot;extensionMap\&quot;: {},\n              \&quot;id\&quot;: \&quot;\&quot;\n            },\n            \&quot;baseLocale\&quot;: {\n              \&quot;variant\&quot;: \&quot;\&quot;,\n              \&quot;language\&quot;: \&quot;\&quot;,\n              \&quot;region\&quot;: \&quot;\&quot;,\n              \&quot;script\&quot;: \&quot;\&quot;,\n              \&quot;hash\&quot;: 0\n            },\n            \&quot;languageTag\&quot;: \&quot;\&quot;,\n            \&quot;hashCodeValue\&quot;: 0\n          },\n          \&quot;fraction\&quot;: 0,\n          \&quot;seconds\&quot;: 0,\n          \&quot;dayOfWeek\&quot;: 0,\n          \&quot;month\&quot;: 0,\n          \&quot;daylightSaving\&quot;: 0,\n          \&quot;era\&quot;: {},\n          \&quot;dayOfMonth\&quot;: 0,\n          \&quot;millis\&quot;: 0\n        },\n        \&quot;hash\&quot;: 0,\n        \&quot;since\&quot;: 0\n      },\n      \&quot;dayOfMonth\&quot;: 0,\n      \&quot;millis\&quot;: 0\n    },\n    \&quot;nanos\&quot;: 0,\n    \&quot;fastTime\&quot;: 0\n  },\n  \&quot;user\&quot;: {\n    \&quot;password\&quot;: \&quot;123\&quot;,\n    \&quot;userId\&quot;: 1,\n    \&quot;email\&quot;: \&quot;test@qq.com\&quot;,\n    \&quot;username\&quot;: \&quot;test01\&quot;\n  }\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:18,&quot;second&quot;:57,&quot;nano&quot;:966097200}},&quot;historyId&quot;:&quot;04d8584b-8c47-4698-95ed-74a24c7b17d3&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/users/login&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;b158bf24d6212ff1a3a924e124dd011f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/users/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;userId\&quot;: 0,\n  \&quot;email\&quot;: \&quot;\&quot;,\n  \&quot;username\&quot;: \&quot;test01\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:41,&quot;second&quot;:56,&quot;nano&quot;:534775600}},&quot;historyId&quot;:&quot;710d0776-dd4e-44ac-84e9-812d5ed67c8f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 0,\n  \&quot;createdAt\&quot;: \&quot;2024-10-22 13:25\&quot;,\n  \&quot;answerContent\&quot;: \&quot;第一问答案02\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 1,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:25\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;\&quot;,\n      \&quot;userId\&quot;: 1,\n      \&quot;email\&quot;: \&quot;\&quot;,\n      \&quot;username\&quot;: \&quot;\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:30,&quot;second&quot;:18,&quot;nano&quot;:153220100}},&quot;historyId&quot;:&quot;aa4f6614-88c3-4024-93dd-df4d5fac11b2&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 0,\n  \&quot;createdAt\&quot;: \&quot;2024-10-22 13:25\&quot;,\n  \&quot;answerContent\&quot;: \&quot;第一问答案02\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 1,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:25\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;\&quot;,\n      \&quot;userId\&quot;: 2,\n      \&quot;email\&quot;: \&quot;\&quot;,\n      \&quot;username\&quot;: \&quot;\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:28,&quot;second&quot;:19,&quot;nano&quot;:509698900}},&quot;historyId&quot;:&quot;ef2889ad-5ce4-47e3-8cae-2a1c1b221110&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 0,\n  \&quot;createdAt\&quot;: \&quot;2024-10-22 13:25\&quot;,\n  \&quot;answerContent\&quot;: \&quot;第一问答案02\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 1,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:25\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;\&quot;,\n      \&quot;userId\&quot;: 1,\n      \&quot;email\&quot;: \&quot;\&quot;,\n      \&quot;username\&quot;: \&quot;\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:27,&quot;second&quot;:28,&quot;nano&quot;:819656800}},&quot;historyId&quot;:&quot;78983cf9-61bd-454a-98ea-5bb179828b5c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 0,\n  \&quot;createdAt\&quot;: \&quot;2024-10-22 13:25\&quot;,\n  \&quot;answerContent\&quot;: \&quot;第二问答案\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 2,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:25\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;\&quot;,\n      \&quot;userId\&quot;: 1,\n      \&quot;email\&quot;: \&quot;\&quot;,\n      \&quot;username\&quot;: \&quot;\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:26,&quot;second&quot;:5,&quot;nano&quot;:855506800}},&quot;historyId&quot;:&quot;772cc12b-f37a-4ba9-9d20-b0fe7a174b7e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 0,\n  \&quot;createdAt\&quot;: \&quot;2024-10-22 13:25\&quot;,\n  \&quot;answerContent\&quot;: \&quot;第二问答案\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 2,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:25\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;\&quot;,\n      \&quot;userId\&quot;: 1,\n      \&quot;email\&quot;: \&quot;\&quot;,\n      \&quot;username\&quot;: \&quot;\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:25,&quot;second&quot;:42,&quot;nano&quot;:176458700}},&quot;historyId&quot;:&quot;6a1f35a2-c691-40d8-a320-90783a056790&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 2,\n  \&quot;createdAt\&quot;: \&quot;2024-10-22 13:22\&quot;,\n  \&quot;answerContent\&quot;: \&quot;第二问答案\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 2,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:22\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;\&quot;,\n      \&quot;userId\&quot;: 2,\n      \&quot;email\&quot;: \&quot;\&quot;,\n      \&quot;username\&quot;: \&quot;\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:24,&quot;second&quot;:40,&quot;nano&quot;:185598600}},&quot;historyId&quot;:&quot;cb22f6e4-930f-44de-aee3-3853c01b3bce&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 2,\n  \&quot;createdAt\&quot;: \&quot;2024-10-22 13:22\&quot;,\n  \&quot;answerContent\&quot;: \&quot;第二问答案\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 2,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:22\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;\&quot;,\n      \&quot;userId\&quot;: 1,\n      \&quot;email\&quot;: \&quot;\&quot;,\n      \&quot;username\&quot;: \&quot;\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:24,&quot;second&quot;:31,&quot;nano&quot;:978229800}},&quot;historyId&quot;:&quot;aac102d4-08b3-4e31-9ced-398819fca4cd&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 0,\n  \&quot;createdAt\&quot;: \&quot;2024-10-22 13:22\&quot;,\n  \&quot;answerContent\&quot;: \&quot;第二问答案\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 2,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:22\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;\&quot;,\n      \&quot;userId\&quot;: 1,\n      \&quot;email\&quot;: \&quot;\&quot;,\n      \&quot;username\&quot;: \&quot;\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:24,&quot;second&quot;:8,&quot;nano&quot;:644968700}},&quot;historyId&quot;:&quot;b4060e99-a089-4554-9156-956037d6f449&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 0,\n  \&quot;createdAt\&quot;: \&quot;2024-10-22 13:22\&quot;,\n  \&quot;answerContent\&quot;: \&quot;第一问答案\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 1,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:22\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;\&quot;,\n      \&quot;userId\&quot;: 1,\n      \&quot;email\&quot;: \&quot;\&quot;,\n      \&quot;username\&quot;: \&quot;\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:23,&quot;second&quot;:25,&quot;nano&quot;:471662900}},&quot;historyId&quot;:&quot;bbbbc013-2ea7-4a1c-af50-49db7be94b4e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 0,\n  \&quot;createdAt\&quot;: \&quot;2024-10-22 13:22\&quot;,\n  \&quot;answerContent\&quot;: \&quot;\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 0,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:22\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;\&quot;,\n      \&quot;userId\&quot;: 0,\n      \&quot;email\&quot;: \&quot;\&quot;,\n      \&quot;username\&quot;: \&quot;\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:22,&quot;second&quot;:24,&quot;nano&quot;:304297200}},&quot;historyId&quot;:&quot;f3ef5913-ae8c-4b35-9335-b5804f576fa8&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 0,\n  \&quot;createdAt\&quot;: \&quot;2024-10-22 13:22\&quot;,\n  \&quot;answerContent\&quot;: \&quot;\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 0,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:22\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;\&quot;,\n      \&quot;userId\&quot;: 0,\n      \&quot;email\&quot;: \&quot;\&quot;,\n      \&quot;username\&quot;: \&quot;\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:22,&quot;second&quot;:13,&quot;nano&quot;:783556000}},&quot;historyId&quot;:&quot;86ee2665-d0f8-4381-bcb8-cad5341253ce&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 0,\n  \&quot;createdAt\&quot;: \&quot;2024-10-22T13:20\&quot;,\n  \&quot;answerContent\&quot;: \&quot;\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 0,\n    \&quot;createTime\&quot;: \&quot;2024-10-22T13:20\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;\&quot;,\n      \&quot;userId\&quot;: 0,\n      \&quot;email\&quot;: \&quot;\&quot;,\n      \&quot;username\&quot;: \&quot;\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:21,&quot;second&quot;:6,&quot;nano&quot;:532649500}},&quot;historyId&quot;:&quot;480568dc-8713-412d-b96e-69bbb2eceb68&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 0,\n  \&quot;createdAt\&quot;: \&quot;2024-10-22T13:20\&quot;,\n  \&quot;answerContent\&quot;: \&quot;\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 0,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:20\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;\&quot;,\n      \&quot;userId\&quot;: 0,\n      \&quot;email\&quot;: \&quot;\&quot;,\n      \&quot;username\&quot;: \&quot;\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:21,&quot;second&quot;:1,&quot;nano&quot;:582154400}},&quot;historyId&quot;:&quot;84224600-4bba-41f7-a037-52a84c713fbc&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 0,\n  \&quot;createdAt\&quot;: \&quot;2024-10-22 13:20\&quot;,\n  \&quot;answerContent\&quot;: \&quot;\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 0,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:20\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;\&quot;,\n      \&quot;userId\&quot;: 0,\n      \&quot;email\&quot;: \&quot;\&quot;,\n      \&quot;username\&quot;: \&quot;\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:20,&quot;second&quot;:17,&quot;nano&quot;:334870600}},&quot;historyId&quot;:&quot;186365e4-a8b4-4335-8af5-0207832de745&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 1,\n  \&quot;createdAt\&quot;: {},\n  \&quot;answerContent\&quot;: \&quot;第一问回答\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;第一问\&quot;,\n    \&quot;questionId\&quot;: 1,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:09\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;123\&quot;,\n      \&quot;userId\&quot;: 1,\n      \&quot;email\&quot;: \&quot;test@qq.com\&quot;,\n      \&quot;username\&quot;: \&quot;test01\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:18,&quot;second&quot;:53,&quot;nano&quot;:361449700}},&quot;historyId&quot;:&quot;61183f24-fec4-4553-a93f-fc4c1689d92b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/users/login&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;b158bf24d6212ff1a3a924e124dd011f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/users/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;userId\&quot;: 0,\n  \&quot;email\&quot;: \&quot;\&quot;,\n  \&quot;username\&quot;: \&quot;test01\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:18,&quot;second&quot;:41,&quot;nano&quot;:35478500}},&quot;historyId&quot;:&quot;538e710b-2e32-4320-86f5-aaaec877f04e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 1,\n  \&quot;createdAt\&quot;: {},\n  \&quot;answerContent\&quot;: \&quot;第一问回答\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;第一问\&quot;,\n    \&quot;questionId\&quot;: 1,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:09\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;123\&quot;,\n      \&quot;userId\&quot;: 1,\n      \&quot;email\&quot;: \&quot;test@qq.com\&quot;,\n      \&quot;username\&quot;: \&quot;test01\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:18,&quot;second&quot;:22,&quot;nano&quot;:450740300}},&quot;historyId&quot;:&quot;420cc205-aacf-4fbb-b850-9f1d8114956f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 1,\n  \&quot;createdAt\&quot;: {},\n  \&quot;answerContent\&quot;: \&quot;第一问回答\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;第一问\&quot;,\n    \&quot;questionId\&quot;: 1,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:09\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;123\&quot;,\n      \&quot;userId\&quot;: 1,\n      \&quot;email\&quot;: \&quot;test@qq.com\&quot;,\n      \&quot;username\&quot;: \&quot;test01\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:17,&quot;second&quot;:50,&quot;nano&quot;:294651700}},&quot;historyId&quot;:&quot;6b2ea6fb-6bb8-427c-9da2-49be872d6b85&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 1,\n  \&quot;createdAt\&quot;: {},\n  \&quot;answerContent\&quot;: \&quot;第一问回答\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;第一问\&quot;,\n    \&quot;questionId\&quot;: 1,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:09\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;123\&quot;,\n      \&quot;userId\&quot;: 2,\n      \&quot;email\&quot;: \&quot;test@qq.com\&quot;,\n      \&quot;username\&quot;: \&quot;test01\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:17,&quot;second&quot;:45,&quot;nano&quot;:448811700}},&quot;historyId&quot;:&quot;f38bac0b-093c-4b50-bae7-00c640f7a202&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 1,\n  \&quot;createdAt\&quot;: {},\n  \&quot;answerContent\&quot;: \&quot;第一问回答\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 1,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:09\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;123\&quot;,\n      \&quot;userId\&quot;: 2,\n      \&quot;email\&quot;: \&quot;test@qq.com\&quot;,\n      \&quot;username\&quot;: \&quot;test01\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:17,&quot;second&quot;:29,&quot;nano&quot;:735428100}},&quot;historyId&quot;:&quot;e5a88f21-3e5a-441f-ad36-4bb0db000638&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 1,\n  \&quot;createdAt\&quot;: {\&quot;024-10-22T13:09:56\&quot;},\n  \&quot;answerContent\&quot;: \&quot;第一问回答\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 1,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:09\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;123\&quot;,\n      \&quot;userId\&quot;: 2,\n      \&quot;email\&quot;: \&quot;test@qq.com\&quot;,\n      \&quot;username\&quot;: \&quot;test01\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:15,&quot;second&quot;:51,&quot;nano&quot;:56134200}},&quot;historyId&quot;:&quot;7e1b129c-928c-47fe-8380-8919ef305bf1&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 1,\n  \&quot;createdAt\&quot;: {\&quot;024-10-22T13:09:56\&quot;},\n  \&quot;answerContent\&quot;: \&quot;第一问回答\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 1,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:09\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;123\&quot;,\n      \&quot;userId\&quot;: 2,\n      \&quot;email\&quot;: \&quot;test@qq.com\&quot;,\n      \&quot;username\&quot;: \&quot;test01\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:14,&quot;second&quot;:20,&quot;nano&quot;:161799700}},&quot;historyId&quot;:&quot;bb93f2af-34d5-40f5-a3ee-6f81aa83a74d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 1,\n  \&quot;createdAt\&quot;: {},\n  \&quot;answerContent\&quot;: \&quot;第一问回答\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 1,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:09\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;123\&quot;,\n      \&quot;userId\&quot;: 2,\n      \&quot;email\&quot;: \&quot;test@qq.com\&quot;,\n      \&quot;username\&quot;: \&quot;test01\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:12,&quot;second&quot;:49,&quot;nano&quot;:915587100}},&quot;historyId&quot;:&quot;0b2c5bd7-d3ff-422a-b0d1-425e1391d774&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 1,\n  \&quot;createdAt\&quot;: {},\n  \&quot;answerContent\&quot;: \&quot;\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 1,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:09\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;123\&quot;,\n      \&quot;userId\&quot;: 2,\n      \&quot;email\&quot;: \&quot;test@qq.com\&quot;,\n      \&quot;username\&quot;: \&quot;test01\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:10,&quot;second&quot;:35,&quot;nano&quot;:64199300}},&quot;historyId&quot;:&quot;6de1d66a-cccf-44fe-8210-3f0076729573&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;postAnswer&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;1a7dcd8f64064c6ce6a4d6b18289760e&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;answerId\&quot;: 1,\n  \&quot;createdAt\&quot;: {},\n  \&quot;answerContent\&quot;: \&quot;\&quot;,\n  \&quot;question\&quot;: {\n    \&quot;questionContent\&quot;: \&quot;\&quot;,\n    \&quot;questionId\&quot;: 1,\n    \&quot;createTime\&quot;: \&quot;2024-10-22 13:09\&quot;,\n    \&quot;user\&quot;: {\n      \&quot;password\&quot;: \&quot;123\&quot;,\n      \&quot;userId\&quot;: 2,\n      \&quot;email\&quot;: \&quot;test@qq.com\&quot;,\n      \&quot;username\&quot;: \&quot;test01\&quot;\n    }\n  },\n  \&quot;user\&quot;: {}\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:9,&quot;second&quot;:56,&quot;nano&quot;:850859800}},&quot;historyId&quot;:&quot;8f9bf1be-dec5-49a3-840c-43533af6458a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers/question/{questionId}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;getAnswersByQuestionId&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;ac5a008049dcbe744a4413bd4e0cd424&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers/question/{questionId}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;questionId&quot;,&quot;value&quot;:&quot;1&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:9,&quot;second&quot;:21,&quot;nano&quot;:179790400}},&quot;historyId&quot;:&quot;6a2c1a4f-eb60-46b9-b20f-4a2cecce2108&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/questions/{id}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.QuestionController&quot;,&quot;methodName&quot;:&quot;getQuestionById&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;9fa704dc00ce2a85a38dfaf0051ada8a&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/questions/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;2&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:9,&quot;second&quot;:10,&quot;nano&quot;:625495000}},&quot;historyId&quot;:&quot;2f10ead7-2bab-4896-acb8-bd92240361a0&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/questions/{id}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.QuestionController&quot;,&quot;methodName&quot;:&quot;getQuestionById&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;9fa704dc00ce2a85a38dfaf0051ada8a&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/questions/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;1&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:9,&quot;second&quot;:6,&quot;nano&quot;:957624700}},&quot;historyId&quot;:&quot;14add1fb-fdaa-4181-a476-95e2bd15b2b2&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/questions&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.QuestionController&quot;,&quot;methodName&quot;:&quot;getAllQuestions&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;060778c6ef74a10d43e981cd77c30823&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/questions&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:8,&quot;second&quot;:59,&quot;nano&quot;:755946900}},&quot;historyId&quot;:&quot;28d8e533-7ac1-4750-8389-a02b6f628f33&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/questions&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.QuestionController&quot;,&quot;methodName&quot;:&quot;postQuestion&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;0294f6c114127578df512334303c5ffa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/questions&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;questionContent\&quot;: \&quot;第一问\&quot;,\n  \&quot;questionId\&quot;: 0,\n  \&quot;questionCreated\&quot;: {\n    \&quot;cdate\&quot;: {\n      \&quot;zoneOffset\&quot;: 0,\n      \&quot;cachedFixedDateJan1\&quot;: 0,\n      \&quot;hours\&quot;: 0,\n      \&quot;zoneinfo\&quot;: {},\n      \&quot;year\&quot;: 0,\n      \&quot;minutes\&quot;: 0,\n      \&quot;normalized\&quot;: false,\n      \&quot;forceStandardTime\&quot;: false,\n      \&quot;cachedYear\&quot;: 0,\n      \&quot;leapYear\&quot;: false,\n      \&quot;locale\&quot;: {},\n      \&quot;fraction\&quot;: 0,\n      \&quot;cachedFixedDateNextJan1\&quot;: 0,\n      \&quot;seconds\&quot;: 0,\n      \&quot;dayOfWeek\&quot;: 0,\n      \&quot;month\&quot;: 0,\n      \&quot;daylightSaving\&quot;: 0,\n      \&quot;era\&quot;: {\n        \&quot;localTime\&quot;: false,\n        \&quot;name\&quot;: \&quot;\&quot;,\n        \&quot;abbr\&quot;: \&quot;\&quot;,\n        \&quot;sinceDate\&quot;: {\n          \&quot;zoneOffset\&quot;: 0,\n          \&quot;hours\&quot;: 0,\n          \&quot;zoneinfo\&quot;: {\n            \&quot;zoneId\&quot;: {},\n            \&quot;ID\&quot;: \&quot;\&quot;\n          },\n          \&quot;year\&quot;: 0,\n          \&quot;minutes\&quot;: 0,\n          \&quot;normalized\&quot;: false,\n          \&quot;forceStandardTime\&quot;: false,\n          \&quot;leapYear\&quot;: false,\n          \&quot;locale\&quot;: {\n            \&quot;localeExtensions\&quot;: {\n              \&quot;extensionMap\&quot;: {},\n              \&quot;id\&quot;: \&quot;\&quot;\n            },\n            \&quot;baseLocale\&quot;: {\n              \&quot;variant\&quot;: \&quot;\&quot;,\n              \&quot;language\&quot;: \&quot;\&quot;,\n              \&quot;region\&quot;: \&quot;\&quot;,\n              \&quot;script\&quot;: \&quot;\&quot;,\n              \&quot;hash\&quot;: 0\n            },\n            \&quot;languageTag\&quot;: \&quot;\&quot;,\n            \&quot;hashCodeValue\&quot;: 0\n          },\n          \&quot;fraction\&quot;: 0,\n          \&quot;seconds\&quot;: 0,\n          \&quot;dayOfWeek\&quot;: 0,\n          \&quot;month\&quot;: 0,\n          \&quot;daylightSaving\&quot;: 0,\n          \&quot;era\&quot;: {},\n          \&quot;dayOfMonth\&quot;: 0,\n          \&quot;millis\&quot;: 0\n        },\n        \&quot;hash\&quot;: 0,\n        \&quot;since\&quot;: 0\n      },\n      \&quot;dayOfMonth\&quot;: 0,\n      \&quot;millis\&quot;: 0\n    },\n    \&quot;nanos\&quot;: 0,\n    \&quot;fastTime\&quot;: 0\n  },\n  \&quot;user\&quot;: {\n    \&quot;password\&quot;: \&quot;123\&quot;,\n    \&quot;userId\&quot;: 1,\n    \&quot;email\&quot;: \&quot;test@qq.com\&quot;,\n    \&quot;username\&quot;: \&quot;test01\&quot;\n  }\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:7,&quot;second&quot;:8,&quot;nano&quot;:61929300}},&quot;historyId&quot;:&quot;fce798cb-1d66-4be0-b71b-230978c8eaaf&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/questions&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.QuestionController&quot;,&quot;methodName&quot;:&quot;postQuestion&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;0294f6c114127578df512334303c5ffa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/questions&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;questionContent\&quot;: \&quot;第一问\&quot;,\n  \&quot;questionId\&quot;: 0,\n  \&quot;questionCreated\&quot;: {\n    \&quot;cdate\&quot;: {\n      \&quot;zoneOffset\&quot;: 0,\n      \&quot;cachedFixedDateJan1\&quot;: 0,\n      \&quot;hours\&quot;: 0,\n      \&quot;zoneinfo\&quot;: {},\n      \&quot;year\&quot;: 0,\n      \&quot;minutes\&quot;: 0,\n      \&quot;normalized\&quot;: false,\n      \&quot;forceStandardTime\&quot;: false,\n      \&quot;cachedYear\&quot;: 0,\n      \&quot;leapYear\&quot;: false,\n      \&quot;locale\&quot;: {},\n      \&quot;fraction\&quot;: 0,\n      \&quot;cachedFixedDateNextJan1\&quot;: 0,\n      \&quot;seconds\&quot;: 0,\n      \&quot;dayOfWeek\&quot;: 0,\n      \&quot;month\&quot;: 0,\n      \&quot;daylightSaving\&quot;: 0,\n      \&quot;era\&quot;: {\n        \&quot;localTime\&quot;: false,\n        \&quot;name\&quot;: \&quot;\&quot;,\n        \&quot;abbr\&quot;: \&quot;\&quot;,\n        \&quot;sinceDate\&quot;: {\n          \&quot;zoneOffset\&quot;: 0,\n          \&quot;hours\&quot;: 0,\n          \&quot;zoneinfo\&quot;: {\n            \&quot;zoneId\&quot;: {},\n            \&quot;ID\&quot;: \&quot;\&quot;\n          },\n          \&quot;year\&quot;: 0,\n          \&quot;minutes\&quot;: 0,\n          \&quot;normalized\&quot;: false,\n          \&quot;forceStandardTime\&quot;: false,\n          \&quot;leapYear\&quot;: false,\n          \&quot;locale\&quot;: {\n            \&quot;localeExtensions\&quot;: {\n              \&quot;extensionMap\&quot;: {},\n              \&quot;id\&quot;: \&quot;\&quot;\n            },\n            \&quot;baseLocale\&quot;: {\n              \&quot;variant\&quot;: \&quot;\&quot;,\n              \&quot;language\&quot;: \&quot;\&quot;,\n              \&quot;region\&quot;: \&quot;\&quot;,\n              \&quot;script\&quot;: \&quot;\&quot;,\n              \&quot;hash\&quot;: 0\n            },\n            \&quot;languageTag\&quot;: \&quot;\&quot;,\n            \&quot;hashCodeValue\&quot;: 0\n          },\n          \&quot;fraction\&quot;: 0,\n          \&quot;seconds\&quot;: 0,\n          \&quot;dayOfWeek\&quot;: 0,\n          \&quot;month\&quot;: 0,\n          \&quot;daylightSaving\&quot;: 0,\n          \&quot;era\&quot;: {},\n          \&quot;dayOfMonth\&quot;: 0,\n          \&quot;millis\&quot;: 0\n        },\n        \&quot;hash\&quot;: 0,\n        \&quot;since\&quot;: 0\n      },\n      \&quot;dayOfMonth\&quot;: 0,\n      \&quot;millis\&quot;: 0\n    },\n    \&quot;nanos\&quot;: 0,\n    \&quot;fastTime\&quot;: 0\n  },\n  \&quot;user\&quot;: {\n    \&quot;password\&quot;: \&quot;123\&quot;,\n    \&quot;userId\&quot;: 1,\n    \&quot;email\&quot;: \&quot;test@qq.com\&quot;,\n    \&quot;username\&quot;: \&quot;test01\&quot;\n  }\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:5,&quot;second&quot;:51,&quot;nano&quot;:66526400}},&quot;historyId&quot;:&quot;6ea1a577-8dee-4a57-9c39-60947a137248&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/questions&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.QuestionController&quot;,&quot;methodName&quot;:&quot;postQuestion&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;0294f6c114127578df512334303c5ffa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/questions&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;questionContent\&quot;: \&quot;第一问\&quot;,\n  \&quot;questionId\&quot;: 0,\n  \&quot;questionCreated\&quot;: {\n    \&quot;cdate\&quot;: {\n      \&quot;zoneOffset\&quot;: 0,\n      \&quot;cachedFixedDateJan1\&quot;: 0,\n      \&quot;hours\&quot;: 0,\n      \&quot;zoneinfo\&quot;: {},\n      \&quot;year\&quot;: 0,\n      \&quot;minutes\&quot;: 0,\n      \&quot;normalized\&quot;: false,\n      \&quot;forceStandardTime\&quot;: false,\n      \&quot;cachedYear\&quot;: 0,\n      \&quot;leapYear\&quot;: false,\n      \&quot;locale\&quot;: {},\n      \&quot;fraction\&quot;: 0,\n      \&quot;cachedFixedDateNextJan1\&quot;: 0,\n      \&quot;seconds\&quot;: 0,\n      \&quot;dayOfWeek\&quot;: 0,\n      \&quot;month\&quot;: 0,\n      \&quot;daylightSaving\&quot;: 0,\n      \&quot;era\&quot;: {\n        \&quot;localTime\&quot;: false,\n        \&quot;name\&quot;: \&quot;\&quot;,\n        \&quot;abbr\&quot;: \&quot;\&quot;,\n        \&quot;sinceDate\&quot;: {\n          \&quot;zoneOffset\&quot;: 0,\n          \&quot;hours\&quot;: 0,\n          \&quot;zoneinfo\&quot;: {\n            \&quot;zoneId\&quot;: {},\n            \&quot;ID\&quot;: \&quot;\&quot;\n          },\n          \&quot;year\&quot;: 0,\n          \&quot;minutes\&quot;: 0,\n          \&quot;normalized\&quot;: false,\n          \&quot;forceStandardTime\&quot;: false,\n          \&quot;leapYear\&quot;: false,\n          \&quot;locale\&quot;: {\n            \&quot;localeExtensions\&quot;: {\n              \&quot;extensionMap\&quot;: {},\n              \&quot;id\&quot;: \&quot;\&quot;\n            },\n            \&quot;baseLocale\&quot;: {\n              \&quot;variant\&quot;: \&quot;\&quot;,\n              \&quot;language\&quot;: \&quot;\&quot;,\n              \&quot;region\&quot;: \&quot;\&quot;,\n              \&quot;script\&quot;: \&quot;\&quot;,\n              \&quot;hash\&quot;: 0\n            },\n            \&quot;languageTag\&quot;: \&quot;\&quot;,\n            \&quot;hashCodeValue\&quot;: 0\n          },\n          \&quot;fraction\&quot;: 0,\n          \&quot;seconds\&quot;: 0,\n          \&quot;dayOfWeek\&quot;: 0,\n          \&quot;month\&quot;: 0,\n          \&quot;daylightSaving\&quot;: 0,\n          \&quot;era\&quot;: {},\n          \&quot;dayOfMonth\&quot;: 0,\n          \&quot;millis\&quot;: 0\n        },\n        \&quot;hash\&quot;: 0,\n        \&quot;since\&quot;: 0\n      },\n      \&quot;dayOfMonth\&quot;: 0,\n      \&quot;millis\&quot;: 0\n    },\n    \&quot;nanos\&quot;: 0,\n    \&quot;fastTime\&quot;: 0\n  },\n  \&quot;user\&quot;: {\n    \&quot;password\&quot;: \&quot;123\&quot;,\n    \&quot;userId\&quot;: 1,\n    \&quot;email\&quot;: \&quot;test@qq.com\&quot;,\n    \&quot;username\&quot;: \&quot;test01\&quot;\n  }\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:5,&quot;second&quot;:24,&quot;nano&quot;:490875300}},&quot;historyId&quot;:&quot;8a739bac-a094-4600-a59e-f9c648c01f53&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/questions&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.QuestionController&quot;,&quot;methodName&quot;:&quot;postQuestion&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;0294f6c114127578df512334303c5ffa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/questions&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;questionContent\&quot;: \&quot;第一问\&quot;,\n  \&quot;questionId\&quot;: 0,\n  \&quot;questionCreated\&quot;: {\n    \&quot;cdate\&quot;: {\n      \&quot;zoneOffset\&quot;: 0,\n      \&quot;cachedFixedDateJan1\&quot;: 0,\n      \&quot;hours\&quot;: 0,\n      \&quot;zoneinfo\&quot;: {},\n      \&quot;year\&quot;: 0,\n      \&quot;minutes\&quot;: 0,\n      \&quot;normalized\&quot;: false,\n      \&quot;forceStandardTime\&quot;: false,\n      \&quot;cachedYear\&quot;: 0,\n      \&quot;leapYear\&quot;: false,\n      \&quot;locale\&quot;: {},\n      \&quot;fraction\&quot;: 0,\n      \&quot;cachedFixedDateNextJan1\&quot;: 0,\n      \&quot;seconds\&quot;: 0,\n      \&quot;dayOfWeek\&quot;: 0,\n      \&quot;month\&quot;: 0,\n      \&quot;daylightSaving\&quot;: 0,\n      \&quot;era\&quot;: {\n        \&quot;localTime\&quot;: false,\n        \&quot;name\&quot;: \&quot;\&quot;,\n        \&quot;abbr\&quot;: \&quot;\&quot;,\n        \&quot;sinceDate\&quot;: {\n          \&quot;zoneOffset\&quot;: 0,\n          \&quot;hours\&quot;: 0,\n          \&quot;zoneinfo\&quot;: {\n            \&quot;zoneId\&quot;: {},\n            \&quot;ID\&quot;: \&quot;\&quot;\n          },\n          \&quot;year\&quot;: 0,\n          \&quot;minutes\&quot;: 0,\n          \&quot;normalized\&quot;: false,\n          \&quot;forceStandardTime\&quot;: false,\n          \&quot;leapYear\&quot;: false,\n          \&quot;locale\&quot;: {\n            \&quot;localeExtensions\&quot;: {\n              \&quot;extensionMap\&quot;: {},\n              \&quot;id\&quot;: \&quot;\&quot;\n            },\n            \&quot;baseLocale\&quot;: {\n              \&quot;variant\&quot;: \&quot;\&quot;,\n              \&quot;language\&quot;: \&quot;\&quot;,\n              \&quot;region\&quot;: \&quot;\&quot;,\n              \&quot;script\&quot;: \&quot;\&quot;,\n              \&quot;hash\&quot;: 0\n            },\n            \&quot;languageTag\&quot;: \&quot;\&quot;,\n            \&quot;hashCodeValue\&quot;: 0\n          },\n          \&quot;fraction\&quot;: 0,\n          \&quot;seconds\&quot;: 0,\n          \&quot;dayOfWeek\&quot;: 0,\n          \&quot;month\&quot;: 0,\n          \&quot;daylightSaving\&quot;: 0,\n          \&quot;era\&quot;: {},\n          \&quot;dayOfMonth\&quot;: 0,\n          \&quot;millis\&quot;: 0\n        },\n        \&quot;hash\&quot;: 0,\n        \&quot;since\&quot;: 0\n      },\n      \&quot;dayOfMonth\&quot;: 0,\n      \&quot;millis\&quot;: 0\n    },\n    \&quot;nanos\&quot;: 0,\n    \&quot;fastTime\&quot;: 0\n  },\n  \&quot;user\&quot;: {\n    \&quot;password\&quot;: \&quot;123\&quot;,\n    \&quot;userId\&quot;: 1,\n    \&quot;email\&quot;: \&quot;test@qq.com\&quot;,\n    \&quot;username\&quot;: \&quot;test01\&quot;\n  }\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:4,&quot;second&quot;:21,&quot;nano&quot;:580622900}},&quot;historyId&quot;:&quot;e9b71da0-36ac-47f5-a981-84067c1b3bf2&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/users/login&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;b158bf24d6212ff1a3a924e124dd011f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/users/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;userId\&quot;: 0,\n  \&quot;email\&quot;: \&quot;\&quot;,\n  \&quot;username\&quot;: \&quot;test02\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:57,&quot;second&quot;:21,&quot;nano&quot;:64278400}},&quot;historyId&quot;:&quot;4c23ef74-f285-4148-a1dc-9a756a40129b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/users/register&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.UserController&quot;,&quot;methodName&quot;:&quot;register&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;c4a38fe18de140f5cd2a50042066978c&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/users/register&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;userId\&quot;: 0,\n  \&quot;email\&quot;: \&quot;test@qq.com\&quot;,\n  \&quot;username\&quot;: \&quot;test02\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:56,&quot;second&quot;:18,&quot;nano&quot;:152534000}},&quot;historyId&quot;:&quot;2daebf4d-cb5f-4b66-93d9-00ef30b68bba&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/questions&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.QuestionController&quot;,&quot;methodName&quot;:&quot;postQuestion&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;0294f6c114127578df512334303c5ffa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/questions&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;questionContent\&quot;: \&quot;第一问\&quot;,\n  \&quot;questionId\&quot;: 0,\n  \&quot;questionCreated\&quot;: {\n    \&quot;cdate\&quot;: {\n      \&quot;zoneOffset\&quot;: 0,\n      \&quot;cachedFixedDateJan1\&quot;: 0,\n      \&quot;hours\&quot;: 0,\n      \&quot;zoneinfo\&quot;: {},\n      \&quot;year\&quot;: 0,\n      \&quot;minutes\&quot;: 0,\n      \&quot;normalized\&quot;: false,\n      \&quot;forceStandardTime\&quot;: false,\n      \&quot;cachedYear\&quot;: 0,\n      \&quot;leapYear\&quot;: false,\n      \&quot;locale\&quot;: {},\n      \&quot;fraction\&quot;: 0,\n      \&quot;cachedFixedDateNextJan1\&quot;: 0,\n      \&quot;seconds\&quot;: 0,\n      \&quot;dayOfWeek\&quot;: 0,\n      \&quot;month\&quot;: 0,\n      \&quot;daylightSaving\&quot;: 0,\n      \&quot;era\&quot;: {\n        \&quot;localTime\&quot;: false,\n        \&quot;name\&quot;: \&quot;\&quot;,\n        \&quot;abbr\&quot;: \&quot;\&quot;,\n        \&quot;sinceDate\&quot;: {\n          \&quot;zoneOffset\&quot;: 0,\n          \&quot;hours\&quot;: 0,\n          \&quot;zoneinfo\&quot;: {\n            \&quot;zoneId\&quot;: {},\n            \&quot;ID\&quot;: \&quot;\&quot;\n          },\n          \&quot;year\&quot;: 0,\n          \&quot;minutes\&quot;: 0,\n          \&quot;normalized\&quot;: false,\n          \&quot;forceStandardTime\&quot;: false,\n          \&quot;leapYear\&quot;: false,\n          \&quot;locale\&quot;: {\n            \&quot;localeExtensions\&quot;: {\n              \&quot;extensionMap\&quot;: {},\n              \&quot;id\&quot;: \&quot;\&quot;\n            },\n            \&quot;baseLocale\&quot;: {\n              \&quot;variant\&quot;: \&quot;\&quot;,\n              \&quot;language\&quot;: \&quot;\&quot;,\n              \&quot;region\&quot;: \&quot;\&quot;,\n              \&quot;script\&quot;: \&quot;\&quot;,\n              \&quot;hash\&quot;: 0\n            },\n            \&quot;languageTag\&quot;: \&quot;\&quot;,\n            \&quot;hashCodeValue\&quot;: 0\n          },\n          \&quot;fraction\&quot;: 0,\n          \&quot;seconds\&quot;: 0,\n          \&quot;dayOfWeek\&quot;: 0,\n          \&quot;month\&quot;: 0,\n          \&quot;daylightSaving\&quot;: 0,\n          \&quot;era\&quot;: {},\n          \&quot;dayOfMonth\&quot;: 0,\n          \&quot;millis\&quot;: 0\n        },\n        \&quot;hash\&quot;: 0,\n        \&quot;since\&quot;: 0\n      },\n      \&quot;dayOfMonth\&quot;: 0,\n      \&quot;millis\&quot;: 0\n    },\n    \&quot;nanos\&quot;: 0,\n    \&quot;fastTime\&quot;: 0\n  },\n  \&quot;user\&quot;: {\n    \&quot;password\&quot;: \&quot;123\&quot;,\n    \&quot;userId\&quot;: 1,\n    \&quot;email\&quot;: \&quot;\&quot;,\n    \&quot;username\&quot;: \&quot;test01\&quot;\n  }\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:55,&quot;second&quot;:59,&quot;nano&quot;:941798700}},&quot;historyId&quot;:&quot;4b408d1b-c212-4b11-a525-51dc2f279c46&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/questions&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.QuestionController&quot;,&quot;methodName&quot;:&quot;postQuestion&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;0294f6c114127578df512334303c5ffa&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/questions&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;questionContent\&quot;: \&quot;第一问\&quot;,\n  \&quot;questionId\&quot;: 0,\n  \&quot;questionCreated\&quot;: {\n    \&quot;cdate\&quot;: {\n      \&quot;zoneOffset\&quot;: 0,\n      \&quot;cachedFixedDateJan1\&quot;: 0,\n      \&quot;hours\&quot;: 0,\n      \&quot;zoneinfo\&quot;: {},\n      \&quot;year\&quot;: 0,\n      \&quot;minutes\&quot;: 0,\n      \&quot;normalized\&quot;: false,\n      \&quot;forceStandardTime\&quot;: false,\n      \&quot;cachedYear\&quot;: 0,\n      \&quot;leapYear\&quot;: false,\n      \&quot;locale\&quot;: {},\n      \&quot;fraction\&quot;: 0,\n      \&quot;cachedFixedDateNextJan1\&quot;: 0,\n      \&quot;seconds\&quot;: 0,\n      \&quot;dayOfWeek\&quot;: 0,\n      \&quot;month\&quot;: 0,\n      \&quot;daylightSaving\&quot;: 0,\n      \&quot;era\&quot;: {\n        \&quot;localTime\&quot;: false,\n        \&quot;name\&quot;: \&quot;\&quot;,\n        \&quot;abbr\&quot;: \&quot;\&quot;,\n        \&quot;sinceDate\&quot;: {\n          \&quot;zoneOffset\&quot;: 0,\n          \&quot;hours\&quot;: 0,\n          \&quot;zoneinfo\&quot;: {\n            \&quot;zoneId\&quot;: {},\n            \&quot;ID\&quot;: \&quot;\&quot;\n          },\n          \&quot;year\&quot;: 0,\n          \&quot;minutes\&quot;: 0,\n          \&quot;normalized\&quot;: false,\n          \&quot;forceStandardTime\&quot;: false,\n          \&quot;leapYear\&quot;: false,\n          \&quot;locale\&quot;: {\n            \&quot;localeExtensions\&quot;: {\n              \&quot;extensionMap\&quot;: {},\n              \&quot;id\&quot;: \&quot;\&quot;\n            },\n            \&quot;baseLocale\&quot;: {\n              \&quot;variant\&quot;: \&quot;\&quot;,\n              \&quot;language\&quot;: \&quot;\&quot;,\n              \&quot;region\&quot;: \&quot;\&quot;,\n              \&quot;script\&quot;: \&quot;\&quot;,\n              \&quot;hash\&quot;: 0\n            },\n            \&quot;languageTag\&quot;: \&quot;\&quot;,\n            \&quot;hashCodeValue\&quot;: 0\n          },\n          \&quot;fraction\&quot;: 0,\n          \&quot;seconds\&quot;: 0,\n          \&quot;dayOfWeek\&quot;: 0,\n          \&quot;month\&quot;: 0,\n          \&quot;daylightSaving\&quot;: 0,\n          \&quot;era\&quot;: {},\n          \&quot;dayOfMonth\&quot;: 0,\n          \&quot;millis\&quot;: 0\n        },\n        \&quot;hash\&quot;: 0,\n        \&quot;since\&quot;: 0\n      },\n      \&quot;dayOfMonth\&quot;: 0,\n      \&quot;millis\&quot;: 0\n    },\n    \&quot;nanos\&quot;: 0,\n    \&quot;fastTime\&quot;: 0\n  },\n  \&quot;user\&quot;: {\n    \&quot;password\&quot;: \&quot;\&quot;,\n    \&quot;userId\&quot;: 1,\n    \&quot;email\&quot;: \&quot;\&quot;,\n    \&quot;username\&quot;: \&quot;\&quot;\n  }\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:55,&quot;second&quot;:32,&quot;nano&quot;:480272300}},&quot;historyId&quot;:&quot;d08d2856-c594-4b84-8219-7d34aff83ec7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/users/login&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;b158bf24d6212ff1a3a924e124dd011f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/users/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;userId\&quot;: 0,\n  \&quot;email\&quot;: \&quot;\&quot;,\n  \&quot;username\&quot;: \&quot;test01\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:20,&quot;nano&quot;:601560500}},&quot;historyId&quot;:&quot;95de3462-4367-4858-9490-2718fb0fcc1d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/users/login&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;b158bf24d6212ff1a3a924e124dd011f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/users/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;12345\&quot;,\n  \&quot;userId\&quot;: 0,\n  \&quot;email\&quot;: \&quot;\&quot;,\n  \&quot;username\&quot;: \&quot;test\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:14,&quot;nano&quot;:221845200}},&quot;historyId&quot;:&quot;144d7c3b-519a-4a14-80dd-4d2e16a86f9f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/users/login&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;b158bf24d6212ff1a3a924e124dd011f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/users/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;12345\&quot;,\n  \&quot;userId\&quot;: 0,\n  \&quot;email\&quot;: \&quot;\&quot;,\n  \&quot;username\&quot;: \&quot;test\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:13,&quot;nano&quot;:242333700}},&quot;historyId&quot;:&quot;c0886ab3-3842-4c9d-90de-6a55fe9c6403&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/users/login&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;b158bf24d6212ff1a3a924e124dd011f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/users/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;12345\&quot;,\n  \&quot;userId\&quot;: 0,\n  \&quot;email\&quot;: \&quot;\&quot;,\n  \&quot;username\&quot;: \&quot;test01\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:5,&quot;nano&quot;:163557000}},&quot;historyId&quot;:&quot;5484d8dc-3791-4106-a258-2e0be1e0820a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/users/login&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;b158bf24d6212ff1a3a924e124dd011f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/users/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;userId\&quot;: 0,\n  \&quot;email\&quot;: \&quot;\&quot;,\n  \&quot;username\&quot;: \&quot;test01\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:53,&quot;second&quot;:43,&quot;nano&quot;:489271100}},&quot;historyId&quot;:&quot;45e0fd41-2f8c-459d-a3f8-96e291c65c11&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/users/register&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.UserController&quot;,&quot;methodName&quot;:&quot;register&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;c4a38fe18de140f5cd2a50042066978c&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/users/register&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;userId\&quot;: 0,\n  \&quot;email\&quot;: \&quot;test@qq.com\&quot;,\n  \&quot;username\&quot;: \&quot;test01\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:53,&quot;second&quot;:11,&quot;nano&quot;:46842300}},&quot;historyId&quot;:&quot;3d196bd9-46ae-464e-a2af-584d248f6e8b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-qasystem&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/answers/question/{questionId}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.qasystem.controller.AnswerController&quot;,&quot;methodName&quot;:&quot;getAnswersByQuestionId&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;ac5a008049dcbe744a4413bd4e0cd424&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/answers/question/{questionId}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;questionId&quot;,&quot;value&quot;:&quot;1&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:22},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:51,&quot;second&quot;:56,&quot;nano&quot;:191821500}},&quot;historyId&quot;:&quot;0e49b0a0-b9b1-4825-a89c-22a590defeb4&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;admin\&quot;,\n  \&quot;phone\&quot;: \&quot;13064861014\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:44,&quot;second&quot;:44,&quot;nano&quot;:973579600}},&quot;historyId&quot;:&quot;4e3a1a62-ae22-4bfa-ade2-114bd15175b4&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;admin\&quot;,\n  \&quot;phone\&quot;: \&quot;1304861014\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:44,&quot;second&quot;:39,&quot;nano&quot;:952253900}},&quot;historyId&quot;:&quot;b4d5247a-a7a7-406a-a236-768c5c469133&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;admin\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:44,&quot;second&quot;:33,&quot;nano&quot;:174132700}},&quot;historyId&quot;:&quot;06dfbff0-4e8b-4447-bc7c-a170e48d3d05&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:44,&quot;second&quot;:24,&quot;nano&quot;:2981600}},&quot;historyId&quot;:&quot;b9cf2879-64a4-4a82-b168-f1dc129400b6&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/articles/{id}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.ExceptionController&quot;,&quot;methodName&quot;:&quot;getArticle&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;0cae6f86ae9b28eab004b7dbc6948454&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/articles/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;0&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:44,&quot;second&quot;:10,&quot;nano&quot;:678825800}},&quot;historyId&quot;:&quot;c6aa94c0-9bac-4317-899b-cbd01ed3f4ca&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/articles/{id}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.ExceptionController&quot;,&quot;methodName&quot;:&quot;getArticle&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;0cae6f86ae9b28eab004b7dbc6948454&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/articles/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;1&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:44,&quot;second&quot;:4,&quot;nano&quot;:388519600}},&quot;historyId&quot;:&quot;19f7f013-cf39-48b2-bb9c-3f67e062a02f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;admin\&quot;,\n  \&quot;phone\&quot;: \&quot;1304861014\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:43,&quot;second&quot;:47,&quot;nano&quot;:289776000}},&quot;historyId&quot;:&quot;e00cdfc6-ed0f-488c-8994-2670d7485c8e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;admin\&quot;,\n  \&quot;phone\&quot;: \&quot;13064861014\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:43,&quot;second&quot;:44,&quot;nano&quot;:155750700}},&quot;historyId&quot;:&quot;1c705572-8705-4dd1-8f4b-b0f2dad76761&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;admin\&quot;,\n  \&quot;Phone\&quot;: \&quot;13064861014\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:42,&quot;second&quot;:47,&quot;nano&quot;:818824100}},&quot;historyId&quot;:&quot;cef44950-c029-4600-8166-076f4bc69004&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;admin\&quot;,\n  \&quot;Phone\&quot;: \&quot;1304\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:42,&quot;second&quot;:14,&quot;nano&quot;:738694100}},&quot;historyId&quot;:&quot;270bd810-d7b5-41f5-a81d-fad73914a140&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;admin\&quot;,\n  \&quot;Phone\&quot;: \&quot;1304\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:40,&quot;second&quot;:14,&quot;nano&quot;:59900700}},&quot;historyId&quot;:&quot;46617b06-e1e1-43de-b116-e62c0c9606d2&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;admin\&quot;,\n  \&quot;Phone\&quot;: \&quot;1304\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:40,&quot;second&quot;:13,&quot;nano&quot;:235260500}},&quot;historyId&quot;:&quot;de8cd521-8b0f-41a3-8e2c-457c836fdd80&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;admin\&quot;,\n  \&quot;Phone\&quot;: \&quot;1304\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:37,&quot;second&quot;:27,&quot;nano&quot;:862251400}},&quot;historyId&quot;:&quot;6d79ff12-43b9-4c61-82fb-a474705f8d44&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;admin\&quot;,\n  \&quot;Phone\&quot;: \&quot;1304\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:37,&quot;second&quot;:27,&quot;nano&quot;:445631600}},&quot;historyId&quot;:&quot;8ac543c9-196a-4df2-86d3-cfff6017084e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;admin\&quot;,\n  \&quot;Phone\&quot;: \&quot;1304\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:37,&quot;second&quot;:26,&quot;nano&quot;:790140800}},&quot;historyId&quot;:&quot;d39230f1-fa8c-474e-95f4-59fea77212e8&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;admin\&quot;,\n  \&quot;Phone\&quot;: \&quot;13064861014\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:37,&quot;second&quot;:13,&quot;nano&quot;:561109600}},&quot;historyId&quot;:&quot;8fb1027d-22fb-4e2b-aeb5-c72ddc4cbdd1&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;admin\&quot;,\n  \&quot;Phone\&quot;: \&quot;13064861014\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:36,&quot;second&quot;:41,&quot;nano&quot;:88613700}},&quot;historyId&quot;:&quot;7627d704-a34a-41f1-942e-38b1d5f8af4e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;admin\&quot;,\n  \&quot;Phone\&quot;: \&quot;12222222222\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:36,&quot;second&quot;:24,&quot;nano&quot;:590528800}},&quot;historyId&quot;:&quot;902be9e2-b6df-4545-9352-eeb94e90a796&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;admin\&quot;,\n  \&quot;Phone\&quot;: \&quot;13064861014\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:36,&quot;second&quot;:4,&quot;nano&quot;:608184700}},&quot;historyId&quot;:&quot;a843e6f8-c493-46e7-99e2-f2687307942a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;111\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;admin\&quot;,\n  \&quot;Phone\&quot;: \&quot;13064861014\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:35,&quot;second&quot;:32,&quot;nano&quot;:346739800}},&quot;historyId&quot;:&quot;c5d64a80-8697-4d59-8351-dad3e90c21cf&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;111\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;\&quot;,\n  \&quot;Phone\&quot;: \&quot;13064861014\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:35,&quot;second&quot;:26,&quot;nano&quot;:532481400}},&quot;historyId&quot;:&quot;a7b0a32a-f96a-4fe8-88fe-f547a7156326&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;111\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:35,&quot;second&quot;:13,&quot;nano&quot;:816680300}},&quot;historyId&quot;:&quot;53df70d7-6676-4de0-8869-bd03d76e092e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;111\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;admin\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:35,&quot;second&quot;:8,&quot;nano&quot;:839644200}},&quot;historyId&quot;:&quot;d965a107-6912-4256-a790-12a519b84a7d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/articles/{id}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.ExceptionController&quot;,&quot;methodName&quot;:&quot;getArticle&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;0cae6f86ae9b28eab004b7dbc6948454&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/articles/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;0&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:35,&quot;second&quot;:0,&quot;nano&quot;:242085400}},&quot;historyId&quot;:&quot;5ded702c-0235-414b-8b6a-3691d584a035&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/articles/{id}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.ExceptionController&quot;,&quot;methodName&quot;:&quot;getArticle&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;0cae6f86ae9b28eab004b7dbc6948454&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/articles/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;1&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:34,&quot;second&quot;:55,&quot;nano&quot;:233406800}},&quot;historyId&quot;:&quot;28d7a9e1-c0e6-411c-8d61-2830db277bc5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;111\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;admin\&quot;,\n  \&quot;Phone\&quot;: \&quot;111\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:34,&quot;second&quot;:18,&quot;nano&quot;:326445400}},&quot;historyId&quot;:&quot;a62638dd-71b7-4934-b26c-3144fa607de6&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;111\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;admin\&quot;,\n  \&quot;Phone\&quot;: \&quot;13064861014\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:33,&quot;second&quot;:57,&quot;nano&quot;:56654800}},&quot;historyId&quot;:&quot;6d49cabe-6735-4d4a-b6b0-78126cff4114&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;111\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;admin\&quot;,\n  \&quot;Phone\&quot;: \&quot;111\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:33,&quot;second&quot;:45,&quot;nano&quot;:674030500}},&quot;historyId&quot;:&quot;7eb83b3d-e1a0-45da-ab15-ea0798dd0203&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;111\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;\&quot;,\n  \&quot;Phone\&quot;: \&quot;111\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:33,&quot;second&quot;:25,&quot;nano&quot;:75543800}},&quot;historyId&quot;:&quot;e8b0e0a2-9606-4cec-861a-33b7a7862be5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;111\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;\&quot;,\n  \&quot;Phone\&quot;: \&quot;111\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:33,&quot;second&quot;:1,&quot;nano&quot;:546881500}},&quot;historyId&quot;:&quot;9f3c29a1-53e1-4433-b044-ae22bd37a637&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;111\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:32,&quot;second&quot;:14,&quot;nano&quot;:793114300}},&quot;historyId&quot;:&quot;222351aa-8fd5-4ea4-ac9b-85ddadd5fef3&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;111\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;\&quot;,\n  \&quot;phone\&quot;: \&quot;13064861014\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:31,&quot;second&quot;:59,&quot;nano&quot;:391948300}},&quot;historyId&quot;:&quot;17a906d1-6d67-424b-b5aa-c5771eff501b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;111\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;admin\&quot;,\n  \&quot;phone\&quot;: \&quot;13064861014\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:31,&quot;second&quot;:42,&quot;nano&quot;:82115200}},&quot;historyId&quot;:&quot;dc4e00bc-81d6-4e24-9d80-c5997f72cf89&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/articles/{id}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.ExceptionController&quot;,&quot;methodName&quot;:&quot;getArticle&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;0cae6f86ae9b28eab004b7dbc6948454&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/articles/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;0&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:31,&quot;second&quot;:18,&quot;nano&quot;:301152100}},&quot;historyId&quot;:&quot;f093f84c-292b-45c9-9f66-3be249b63fa1&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/articles/{id}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.ExceptionController&quot;,&quot;methodName&quot;:&quot;getArticle&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;0cae6f86ae9b28eab004b7dbc6948454&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/articles/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;1&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:30,&quot;second&quot;:32,&quot;nano&quot;:650407200}},&quot;historyId&quot;:&quot;42a9092b-d08e-4481-abcb-66b68e573381&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/articles/{id}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.ExceptionController&quot;,&quot;methodName&quot;:&quot;getArticle&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;0cae6f86ae9b28eab004b7dbc6948454&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/articles/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;1&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:30,&quot;second&quot;:26,&quot;nano&quot;:533866400}},&quot;historyId&quot;:&quot;78445bbc-6534-4078-9267-11ec49d75a1f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;111\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;admin\&quot;,\n  \&quot;phone\&quot; : \&quot;111\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:25,&quot;second&quot;:8,&quot;nano&quot;:645612100}},&quot;historyId&quot;:&quot;6441ab22-a915-4f92-8cd5-09173b8a42ea&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;111\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:24,&quot;second&quot;:2,&quot;nano&quot;:639925200}},&quot;historyId&quot;:&quot;8363598c-4760-4a68-bd09-6180a94349b8&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/articles/{id}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.ExceptionController&quot;,&quot;methodName&quot;:&quot;getArticle&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;0cae6f86ae9b28eab004b7dbc6948454&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/articles/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;0&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:23,&quot;second&quot;:54,&quot;nano&quot;:786482400}},&quot;historyId&quot;:&quot;cd5b1b16-64ac-4553-a719-865c87bb3174&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/articles/{id}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.ExceptionController&quot;,&quot;methodName&quot;:&quot;getArticle&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;0cae6f86ae9b28eab004b7dbc6948454&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/articles/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;1&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:23,&quot;second&quot;:45,&quot;nano&quot;:980142500}},&quot;historyId&quot;:&quot;e6fe70dc-5c77-4c9f-a17c-757a19f0c154&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/clazz/{id}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.ClazzController&quot;,&quot;methodName&quot;:&quot;getClazzWithTeacher&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取班级和对应老师信息&quot;,&quot;description&quot;:&quot;获取班级和对应老师信息&quot;,&quot;methodName&quot;:&quot;getClazzWithTeacher&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;eb47453e39d6e38313401919ae118977&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/clazz/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;1&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:22,&quot;second&quot;:2,&quot;nano&quot;:94047100}},&quot;historyId&quot;:&quot;a0b3bf01-c007-4c6e-be9d-5ffbd47c3a83&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;111\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:20,&quot;second&quot;:3,&quot;nano&quot;:199877500}},&quot;historyId&quot;:&quot;3a61109e-0b6a-468a-a7a0-1d0cb602fa0d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/articles/{id}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.ExceptionController&quot;,&quot;methodName&quot;:&quot;getArticle&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;0cae6f86ae9b28eab004b7dbc6948454&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/articles/1&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;1&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:18,&quot;second&quot;:28,&quot;nano&quot;:744510800}},&quot;historyId&quot;:&quot;b5cfb23d-0577-4895-9230-4818846f5f99&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;111\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:18,&quot;second&quot;:12,&quot;nano&quot;:46081600}},&quot;historyId&quot;:&quot;061224de-6673-4287-8244-b8879ff583d4&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;111\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:18,&quot;second&quot;:4,&quot;nano&quot;:335831800}},&quot;historyId&quot;:&quot;50ff3001-7585-47df-a29f-daaf92332ef1&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;111\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:9,&quot;second&quot;:3,&quot;nano&quot;:803218500}},&quot;historyId&quot;:&quot;590dc160-c133-400a-9d35-4196b46c3b3d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/add&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.UserController&quot;,&quot;methodName&quot;:&quot;addUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c3f14fd70ed14926c91674942a71ed31&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/add&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;111\&quot;,\n  \&quot;age\&quot;: 10,\n  \&quot;username\&quot;: \&quot;\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:8,&quot;second&quot;:47,&quot;nano&quot;:474790200}},&quot;historyId&quot;:&quot;03d8912c-d5c4-473a-9754-89bfcb95d574&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/articles/{id}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.ExceptionController&quot;,&quot;methodName&quot;:&quot;getArticle&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;0cae6f86ae9b28eab004b7dbc6948454&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/articles/1&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;1&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:1,&quot;second&quot;:52,&quot;nano&quot;:257913900}},&quot;historyId&quot;:&quot;24d36ebb-a338-4cd9-a8eb-416d1fa3b2cc&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/articles/{id}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.ExceptionController&quot;,&quot;methodName&quot;:&quot;getArticle&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;0cae6f86ae9b28eab004b7dbc6948454&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/articles/1&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;1&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:1,&quot;second&quot;:5,&quot;nano&quot;:125455700}},&quot;historyId&quot;:&quot;f0d543f6-3bbc-496a-b837-85e6fcaa6e63&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/articles/{id}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.ExceptionController&quot;,&quot;methodName&quot;:&quot;getArticle&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;0cae6f86ae9b28eab004b7dbc6948454&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/articles/1&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;2&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:1,&quot;second&quot;:1,&quot;nano&quot;:957162900}},&quot;historyId&quot;:&quot;8e45e819-f301-4554-84d4-1b093ec65ec5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/articles/{id}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.ExceptionController&quot;,&quot;methodName&quot;:&quot;getArticle&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;0cae6f86ae9b28eab004b7dbc6948454&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/articles/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;2&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:0,&quot;second&quot;:39,&quot;nano&quot;:212408200}},&quot;historyId&quot;:&quot;51cbf23c-e668-44d6-a8fd-b099eaa7a487&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-exception&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/articles/{id}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.exception.controller.ExceptionController&quot;,&quot;methodName&quot;:&quot;getArticle&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;0cae6f86ae9b28eab004b7dbc6948454&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/articles/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;1&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:15},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:0,&quot;second&quot;:32,&quot;nano&quot;:771611000}},&quot;historyId&quot;:&quot;1a03dc79-d967-42d3-a4ba-97f8dad65e30&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/clazz/{id}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.ClazzController&quot;,&quot;methodName&quot;:&quot;getClazzWithTeacher&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;eb47453e39d6e38313401919ae118977&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/clazz/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;1&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:19,&quot;second&quot;:25,&quot;nano&quot;:705780400}},&quot;historyId&quot;:&quot;bcd4b491-00fd-4752-8181-6e7165efa002&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/student/{id}/courses&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.StudentController&quot;,&quot;methodName&quot;:&quot;getStudentWithCourses&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;f7dcb022b9e119407675d5f0c523c991&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/student/{id}/courses&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;1&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:19,&quot;second&quot;:16,&quot;nano&quot;:645140000}},&quot;historyId&quot;:&quot;c43f8d24-c3cd-4eea-bffc-0322a8cfec9f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/clazz/{id}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.ClazzController&quot;,&quot;methodName&quot;:&quot;getClazzWithTeacher&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;eb47453e39d6e38313401919ae118977&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/clazz/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;2&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:9,&quot;second&quot;:6,&quot;nano&quot;:135812800}},&quot;historyId&quot;:&quot;11e4fc26-a833-4a7a-b74f-a3f36fa47bf6&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/student/{id}/courses&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.StudentController&quot;,&quot;methodName&quot;:&quot;getStudentWithCourses&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;f7dcb022b9e119407675d5f0c523c991&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/student/{id}/courses&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;2&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:5,&quot;second&quot;:21,&quot;nano&quot;:350059200}},&quot;historyId&quot;:&quot;98b937af-c462-44e4-aee7-b79541d38d7e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/student/{id}/courses&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.StudentController&quot;,&quot;methodName&quot;:&quot;getStudentWithCourses&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;f7dcb022b9e119407675d5f0c523c991&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/student/{id}/courses&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;3&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:5,&quot;second&quot;:17,&quot;nano&quot;:5669600}},&quot;historyId&quot;:&quot;cf1b64a1-9cb2-45c5-9f36-1e1aa02ed2f1&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/student/{id}/courses&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.StudentController&quot;,&quot;methodName&quot;:&quot;getStudentWithCourses&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;f7dcb022b9e119407675d5f0c523c991&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/student/{id}/courses&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;3&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:5,&quot;second&quot;:6,&quot;nano&quot;:18307900}},&quot;historyId&quot;:&quot;a3e039a0-13bd-44c6-8bc5-291e6a1b514f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/student/{id}/courses&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.StudentController&quot;,&quot;methodName&quot;:&quot;getStudentWithCourses&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;f7dcb022b9e119407675d5f0c523c991&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/student/{id}/courses&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;2&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:4,&quot;second&quot;:59,&quot;nano&quot;:946886200}},&quot;historyId&quot;:&quot;867011f0-d058-4c7b-a95a-1f7832b45ca5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/clazz/{id}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.ClazzController&quot;,&quot;methodName&quot;:&quot;getClazzWithTeacher&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;eb47453e39d6e38313401919ae118977&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/clazz/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;1&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:4,&quot;second&quot;:17,&quot;nano&quot;:353231900}},&quot;historyId&quot;:&quot;9bd38446-ed04-4541-85e8-bfe1a68b4a83&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/student/{id}/courses&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.StudentController&quot;,&quot;methodName&quot;:&quot;getStudentWithCourses&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;f7dcb022b9e119407675d5f0c523c991&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/student/{id}/courses&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;1&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:3,&quot;second&quot;:45,&quot;nano&quot;:651478900}},&quot;historyId&quot;:&quot;7d8b9bd7-599b-48bb-be95-144b1097ec87&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/page&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.UserController&quot;,&quot;methodName&quot;:&quot;getUsersByPage&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9af32f3563bf190e1c29477926aad4dc&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/page?currentPage\u003d1\u0026pageSize\u003d2&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:54,&quot;second&quot;:56,&quot;nano&quot;:116376100}},&quot;historyId&quot;:&quot;73988c49-cab7-4899-8d50-6588db4bbb5a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/page&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.UserController&quot;,&quot;methodName&quot;:&quot;getUsersByPage&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9af32f3563bf190e1c29477926aad4dc&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/page&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;currentPage&quot;,&quot;value&quot;:&quot;1&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;},{&quot;key&quot;:&quot;pageSize&quot;,&quot;value&quot;:&quot;2&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:45,&quot;second&quot;:35,&quot;nano&quot;:160533800}},&quot;historyId&quot;:&quot;3628a402-3b7b-4cd8-9faf-368339ec78d9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/name&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.UserController&quot;,&quot;methodName&quot;:&quot;getUsersByName&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;753c5f17ddaae4b0daa5832c68dfe8a3&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/name&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;name&quot;,&quot;value&quot;:&quot;李&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:45,&quot;second&quot;:22,&quot;nano&quot;:924924600}},&quot;historyId&quot;:&quot;78f4b41c-6031-4910-9b6e-7c941eacd943&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/{id}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.UserController&quot;,&quot;methodName&quot;:&quot;getUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b501cda4a7b5c952c646355fc4c5fbd8&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;2&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:45,&quot;second&quot;:10,&quot;nano&quot;:166278700}},&quot;historyId&quot;:&quot;fddb2b6b-b908-4511-a002-eb33e211b3ab&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/delete/{id}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.UserController&quot;,&quot;methodName&quot;:&quot;deleteUser&quot;,&quot;httpMethod&quot;:&quot;DELETE&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;801d619aed1256e41660338341ebf897&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/delete/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;DELETE&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;1845717250195918850&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:44,&quot;second&quot;:54,&quot;nano&quot;:54052000}},&quot;historyId&quot;:&quot;e3f71467-b4a3-42ae-ace1-5b9228754a2a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/update&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.UserController&quot;,&quot;methodName&quot;:&quot;updateUser&quot;,&quot;httpMethod&quot;:&quot;PUT&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;87d474d462832d29882dc5bc889b6aca&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/update&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;id\&quot;: 1845717250195918850,\n  \&quot;name\&quot;: \&quot;张三丰\&quot;,\n  \&quot;age\&quot;: 40,\n  \&quot;email\&quot;: \&quot;zhangsf123@qq.com\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;PUT&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:44,&quot;second&quot;:37,&quot;nano&quot;:865108300}},&quot;historyId&quot;:&quot;199c579d-ff36-4577-a654-8faf85cb3517&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/create&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.UserController&quot;,&quot;methodName&quot;:&quot;createUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;437ddd13cdee864e9bd124b61132dff8&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/create&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;name\&quot;: \&quot;张三丰\&quot;,\n  \&quot;age\&quot;: 30,\n  \&quot;email\&quot;: \&quot;zhangsf@qq.com\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:44,&quot;second&quot;:18,&quot;nano&quot;:815843900}},&quot;historyId&quot;:&quot;cc258fe0-ae73-43ec-a480-5f15598829fd&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/page&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.UserController&quot;,&quot;methodName&quot;:&quot;getUsersByPage&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9af32f3563bf190e1c29477926aad4dc&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/page&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;currentPage&quot;,&quot;value&quot;:&quot;1&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;},{&quot;key&quot;:&quot;pageSize&quot;,&quot;value&quot;:&quot;2&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:43,&quot;second&quot;:28,&quot;nano&quot;:425373300}},&quot;historyId&quot;:&quot;6e54a2e0-175a-41cb-98f9-d7b3ecebbf57&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/page&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.UserController&quot;,&quot;methodName&quot;:&quot;getUsersByPage&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9af32f3563bf190e1c29477926aad4dc&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/page&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;currentPage&quot;,&quot;value&quot;:&quot;1&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;},{&quot;key&quot;:&quot;pageSize&quot;,&quot;value&quot;:&quot;2&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:42,&quot;second&quot;:12,&quot;nano&quot;:201876100}},&quot;historyId&quot;:&quot;0de039c4-d503-4a79-a091-c372d6efaf19&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/name&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.UserController&quot;,&quot;methodName&quot;:&quot;getUsersByName&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;753c5f17ddaae4b0daa5832c68dfe8a3&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/name&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;name&quot;,&quot;value&quot;:&quot;张&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:41,&quot;second&quot;:58,&quot;nano&quot;:648844900}},&quot;historyId&quot;:&quot;3f856855-155a-4308-b841-b3d700fc99a3&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/{id}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.UserController&quot;,&quot;methodName&quot;:&quot;getUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b501cda4a7b5c952c646355fc4c5fbd8&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;1&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:41,&quot;second&quot;:47,&quot;nano&quot;:818549100}},&quot;historyId&quot;:&quot;4689e515-9c95-47e3-ba2e-270a212780af&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/delete/{id}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.UserController&quot;,&quot;methodName&quot;:&quot;deleteUser&quot;,&quot;httpMethod&quot;:&quot;DELETE&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;801d619aed1256e41660338341ebf897&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/delete/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;DELETE&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;1845716388585230337&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:41,&quot;second&quot;:30,&quot;nano&quot;:712494800}},&quot;historyId&quot;:&quot;30446b40-1589-4123-92c8-114b3f221658&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/update&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.UserController&quot;,&quot;methodName&quot;:&quot;updateUser&quot;,&quot;httpMethod&quot;:&quot;PUT&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;87d474d462832d29882dc5bc889b6aca&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/update&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;id\&quot;: 1845716388585230337,\n  \&quot;name\&quot;: \&quot;张三丰\&quot;,\n  \&quot;age\&quot;: 40,\n  \&quot;email\&quot;: \&quot;zhangsf123@qq.com\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;PUT&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:41,&quot;second&quot;:12,&quot;nano&quot;:850343500}},&quot;historyId&quot;:&quot;36a3bfd5-2dc1-4177-a24a-90d30d831fe3&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/create&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.UserController&quot;,&quot;methodName&quot;:&quot;createUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;437ddd13cdee864e9bd124b61132dff8&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/create&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;name\&quot;: \&quot;张三丰\&quot;,\n  \&quot;age\&quot;: 30,\n  \&quot;email\&quot;: \&quot;zhangsf@qq.com\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:40,&quot;second&quot;:53,&quot;nano&quot;:439830300}},&quot;historyId&quot;:&quot;fed36388-2a8a-4111-80ce-30d395d0ca17&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/update&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.UserController&quot;,&quot;methodName&quot;:&quot;updateUser&quot;,&quot;httpMethod&quot;:&quot;PUT&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;87d474d462832d29882dc5bc889b6aca&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/update&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;id\&quot;: 1845715846798594049,\n  \&quot;name\&quot;: \&quot;张三丰\&quot;,\n  \&quot;age\&quot;: 40,\n  \&quot;email\&quot;: \&quot;zhangsf123@qq.com\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;PUT&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:39,&quot;second&quot;:9,&quot;nano&quot;:276219700}},&quot;historyId&quot;:&quot;816d22d7-5009-44c1-b2c6-588d3450d0ca&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/update&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.UserController&quot;,&quot;methodName&quot;:&quot;updateUser&quot;,&quot;httpMethod&quot;:&quot;PUT&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;87d474d462832d29882dc5bc889b6aca&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/update&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;id\&quot;: 1845713629706260482,\n  \&quot;name\&quot;: \&quot;张三丰\&quot;,\n  \&quot;age\&quot;: 40,\n  \&quot;email\&quot;: \&quot;zhangsf123@qq.com\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;PUT&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:39,&quot;second&quot;:3,&quot;nano&quot;:797587400}},&quot;historyId&quot;:&quot;4c976a62-8c95-46ee-8ba0-2337334286bc&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/create&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.UserController&quot;,&quot;methodName&quot;:&quot;createUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;437ddd13cdee864e9bd124b61132dff8&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/create&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;name\&quot;: \&quot;张三丰\&quot;,\n  \&quot;age\&quot;: 0,\n  \&quot;email\&quot;: \&quot;zhangsf@qq.com\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:38,&quot;second&quot;:44,&quot;nano&quot;:35553800}},&quot;historyId&quot;:&quot;d9509a13-1edb-46d5-94b2-7215b719fa85&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/page&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.UserController&quot;,&quot;methodName&quot;:&quot;getUsersByPage&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;9af32f3563bf190e1c29477926aad4dc&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/page&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;currentPage&quot;,&quot;value&quot;:&quot;1&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;},{&quot;key&quot;:&quot;pageSize&quot;,&quot;value&quot;:&quot;2&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:35,&quot;second&quot;:18,&quot;nano&quot;:563634300}},&quot;historyId&quot;:&quot;af51ba8b-f698-496f-961c-721665af58b1&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/name&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.UserController&quot;,&quot;methodName&quot;:&quot;getUsersByName&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;753c5f17ddaae4b0daa5832c68dfe8a3&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/name&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;name&quot;,&quot;value&quot;:&quot;张&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:34,&quot;second&quot;:55,&quot;nano&quot;:58975700}},&quot;historyId&quot;:&quot;d60114cf-c911-4977-a800-c993cffc034b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/name&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.UserController&quot;,&quot;methodName&quot;:&quot;getUsersByName&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;753c5f17ddaae4b0daa5832c68dfe8a3&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/name&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;name&quot;,&quot;value&quot;:&quot;name\u003d张&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:34,&quot;second&quot;:49,&quot;nano&quot;:868050900}},&quot;historyId&quot;:&quot;2aba1443-f267-47df-9a30-64547aaa2093&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/name&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.UserController&quot;,&quot;methodName&quot;:&quot;getUsersByName&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;753c5f17ddaae4b0daa5832c68dfe8a3&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/name?name\u003d张&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;name&quot;,&quot;value&quot;:&quot;name\u003d张&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:34,&quot;second&quot;:39,&quot;nano&quot;:391372000}},&quot;historyId&quot;:&quot;c4eee5d7-4dfb-4da0-b58a-f29ef70754a6&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/name&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.UserController&quot;,&quot;methodName&quot;:&quot;getUsersByName&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;753c5f17ddaae4b0daa5832c68dfe8a3&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/name?name\u003d张&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;name&quot;,&quot;value&quot;:&quot;张&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:33,&quot;second&quot;:24,&quot;nano&quot;:853530500}},&quot;historyId&quot;:&quot;71a67baa-40d6-4405-998d-15b50dac1599&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/name&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.UserController&quot;,&quot;methodName&quot;:&quot;getUsersByName&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;753c5f17ddaae4b0daa5832c68dfe8a3&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/name?name\u003d张&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;name&quot;,&quot;value&quot;:&quot;&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:33,&quot;second&quot;:19,&quot;nano&quot;:150426700}},&quot;historyId&quot;:&quot;6155d768-3c9b-48f2-b7fb-dcb8daf7be80&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/{id}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.UserController&quot;,&quot;methodName&quot;:&quot;getUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;b501cda4a7b5c952c646355fc4c5fbd8&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;1&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:32,&quot;second&quot;:57,&quot;nano&quot;:165777500}},&quot;historyId&quot;:&quot;881be82d-9729-40ce-b906-6d4ca2e49658&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/delete/{id}&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.UserController&quot;,&quot;methodName&quot;:&quot;deleteUser&quot;,&quot;httpMethod&quot;:&quot;DELETE&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;801d619aed1256e41660338341ebf897&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/delete/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;DELETE&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;1845713629706260482&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:32,&quot;second&quot;:28,&quot;nano&quot;:553925000}},&quot;historyId&quot;:&quot;1b061276-ab32-4433-910a-65bd73b088e8&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/update&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.UserController&quot;,&quot;methodName&quot;:&quot;updateUser&quot;,&quot;httpMethod&quot;:&quot;PUT&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;87d474d462832d29882dc5bc889b6aca&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/update&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;id\&quot;: 1845713629706260482,\n  \&quot;name\&quot;: \&quot;张三丰\&quot;,\n  \&quot;age\&quot;: 40,\n  \&quot;email\&quot;: \&quot;zhangsf123@qq.com\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;PUT&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:31,&quot;second&quot;:45,&quot;nano&quot;:626029200}},&quot;historyId&quot;:&quot;c3763a66-e75c-41dd-bfa0-79b175353521&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/update&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.UserController&quot;,&quot;methodName&quot;:&quot;updateUser&quot;,&quot;httpMethod&quot;:&quot;PUT&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;87d474d462832d29882dc5bc889b6aca&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/update&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;name\&quot;: \&quot;张三丰\&quot;,\n  \&quot;age\&quot;: 40,\n  \&quot;email\&quot;: \&quot;zhangsf123@qq.com\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;PUT&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:31,&quot;second&quot;:8,&quot;nano&quot;:436924700}},&quot;historyId&quot;:&quot;a9eedce0-5f94-4d99-8399-f6274f81a632&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-mp&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/create&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.mp.controller.UserController&quot;,&quot;methodName&quot;:&quot;createUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;437ddd13cdee864e9bd124b61132dff8&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/create&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;name\&quot;: \&quot;张三丰\&quot;,\n  \&quot;age\&quot;: 0,\n  \&quot;email\&quot;: \&quot;zhangsf@qq.com\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:29,&quot;second&quot;:55,&quot;nano&quot;:440131000}},&quot;historyId&quot;:&quot;394393e4-040f-4595-84d7-8b280eb5265d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-database01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/v1/zhihu/specials&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.database01.controller.SpecialController&quot;,&quot;methodName&quot;:&quot;getSpecials&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;4fa4dd7e4cbe27e74b952b032266e863&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/v1/zhihu/specials&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:54,&quot;second&quot;:9,&quot;nano&quot;:171709400}},&quot;historyId&quot;:&quot;cb63c6db-6565-4f19-a190-9eb7420e2918&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-database01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/v1/zhihu/specials&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.database01.controller.SpecialController&quot;,&quot;methodName&quot;:&quot;getSpecials&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;4fa4dd7e4cbe27e74b952b032266e863&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/v1/zhihu/specials&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:54,&quot;second&quot;:2,&quot;nano&quot;:96882500}},&quot;historyId&quot;:&quot;e703db16-da69-4e24-ab68-14293ae743e3&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-database01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/v1/zhihu/specials&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.database01.controller.SpecialController&quot;,&quot;methodName&quot;:&quot;getSpecials&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;4fa4dd7e4cbe27e74b952b032266e863&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/v1/zhihu/specials&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:50,&quot;second&quot;:48,&quot;nano&quot;:5902300}},&quot;historyId&quot;:&quot;f90a40ac-535d-454b-8268-f43e7b068a65&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-database01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/v1/zhihu/specials&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.database01.controller.SpecialController&quot;,&quot;methodName&quot;:&quot;getSpecials&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;4fa4dd7e4cbe27e74b952b032266e863&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/v1/zhihu/specials&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:38,&quot;second&quot;:50,&quot;nano&quot;:861844200}},&quot;historyId&quot;:&quot;a36e5d0f-c92e-4048-a81c-92a16bcd2802&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-database01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/v1/zhihu/specials&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.database01.controller.SpecialController&quot;,&quot;methodName&quot;:&quot;getSpecials&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;4fa4dd7e4cbe27e74b952b032266e863&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/v1/zhihu/specials&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:37,&quot;second&quot;:19,&quot;nano&quot;:779210200}},&quot;historyId&quot;:&quot;22c80ab3-996c-48b3-b013-2e3674503a2f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-database01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/v1/zhihu/specials&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.database01.controller.SpecialController&quot;,&quot;methodName&quot;:&quot;getSpecials&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;4fa4dd7e4cbe27e74b952b032266e863&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/v1/zhihu/specials&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:28,&quot;second&quot;:53,&quot;nano&quot;:600998200}},&quot;historyId&quot;:&quot;eafcd54f-e972-45b0-9895-c24adce317d6&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-database01&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/v1/zhihu/specials&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.database01.controller.SpecialController&quot;,&quot;methodName&quot;:&quot;getSpecials&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;4fa4dd7e4cbe27e74b952b032266e863&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/v1/zhihu/specials&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:27,&quot;second&quot;:17,&quot;nano&quot;:18210400}},&quot;historyId&quot;:&quot;d9101df9-3579-40a6-a0e4-f104eb4b428f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-database01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/v1/zhihu/specials&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springbootdatabase01.controller.SpecialController&quot;,&quot;methodName&quot;:&quot;getSpecials&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;44ccd3ca4a46737027a19bd9f6bf3e38&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/v1/zhihu/specials&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:18,&quot;minute&quot;:7,&quot;second&quot;:19,&quot;nano&quot;:402343800}},&quot;historyId&quot;:&quot;03e2abbe-b13e-4ffd-b851-3a89144578a6&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-database01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/v1/zhihu/specials&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springbootdatabase01.controller.SpecialController&quot;,&quot;methodName&quot;:&quot;getSpecials&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;44ccd3ca4a46737027a19bd9f6bf3e38&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/v1/zhihu/specials&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:18,&quot;minute&quot;:6,&quot;second&quot;:10,&quot;nano&quot;:425981600}},&quot;historyId&quot;:&quot;a7d57ac0-aac3-478f-8300-7b7c46223beb&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-database01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/v1/zhihu/specials&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springbootdatabase01.controller.SpecialController&quot;,&quot;methodName&quot;:&quot;getSpecials&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;44ccd3ca4a46737027a19bd9f6bf3e38&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/v1/zhihu/specials&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:18,&quot;minute&quot;:5,&quot;second&quot;:43,&quot;nano&quot;:751634500}},&quot;historyId&quot;:&quot;e3e86a72-44b9-4cd9-a254-fdd22913c895&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/qrcode&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.QrCodeController&quot;,&quot;methodName&quot;:&quot;qrcode&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;56d5fc0defdd2960bae03281cdf0677a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/qrcode&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:28},&quot;time&quot;:{&quot;hour&quot;:22,&quot;minute&quot;:2,&quot;second&quot;:39,&quot;nano&quot;:986590700}},&quot;historyId&quot;:&quot;271e3d0a-95f2-4e45-9629-c5e1d267c604&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/qrcode&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.QrCodeController&quot;,&quot;methodName&quot;:&quot;qrcode&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;56d5fc0defdd2960bae03281cdf0677a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/qrcode&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:28},&quot;time&quot;:{&quot;hour&quot;:22,&quot;minute&quot;:2,&quot;second&quot;:31,&quot;nano&quot;:710124500}},&quot;historyId&quot;:&quot;a76db93f-9bdf-45ef-8cc6-fe6200c0c0ae&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/file/oss&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.FileUploadController&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;oss ⽂件上传&quot;,&quot;description&quot;:&quot;oss ⽂件上传&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;f63ec6879a08c99145eb523b23eeb5b3&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/file/oss&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\yz.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:27,&quot;second&quot;:50,&quot;nano&quot;:835697100}},&quot;historyId&quot;:&quot;dd2af3b3-2444-4048-8e0e-fa5ae150733d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/file/oss&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.FileUploadController&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;oss ⽂件上传&quot;,&quot;description&quot;:&quot;oss ⽂件上传&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;f63ec6879a08c99145eb523b23eeb5b3&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/file/oss&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\yz.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:27,&quot;second&quot;:5,&quot;nano&quot;:189114300}},&quot;historyId&quot;:&quot;bdf16f7d-1188-4dbf-a24e-8d7c7345826f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/file/oss&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.FileUploadController&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;oss ⽂件上传&quot;,&quot;description&quot;:&quot;oss ⽂件上传&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;f63ec6879a08c99145eb523b23eeb5b3&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/file/oss&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\yz.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:26,&quot;second&quot;:38,&quot;nano&quot;:185615700}},&quot;historyId&quot;:&quot;3777a420-1c4b-45bd-ae88-603dac4fd112&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/file/oss&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.FileUploadController&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;oss ⽂件上传&quot;,&quot;description&quot;:&quot;oss ⽂件上传&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;f63ec6879a08c99145eb523b23eeb5b3&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/file/oss&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\yz.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:26,&quot;second&quot;:31,&quot;nano&quot;:681432600}},&quot;historyId&quot;:&quot;6b11eeeb-a8af-4461-bea0-65be72198cf9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/file/oss&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.FileUploadController&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;oss ⽂件上传&quot;,&quot;description&quot;:&quot;oss ⽂件上传&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;f63ec6879a08c99145eb523b23eeb5b3&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/file/oss&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\yz.jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:24,&quot;second&quot;:53,&quot;nano&quot;:821903600}},&quot;historyId&quot;:&quot;1f5850ec-84c9-4604-8c89-a77cbe046040&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/file/oss&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.FileUploadController&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;oss ⽂件上传&quot;,&quot;description&quot;:&quot;oss ⽂件上传&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;f63ec6879a08c99145eb523b23eeb5b3&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/file/oss&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\gk\\照片\\IMG_1781(20240814-012159).jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:20,&quot;minute&quot;:0,&quot;second&quot;:3,&quot;nano&quot;:931312500}},&quot;historyId&quot;:&quot;ca9f4053-ecb0-4c91-9ab1-ad4a9fdecb77&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/mail&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.EmailController&quot;,&quot;methodName&quot;:&quot;sendEmail&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;c48c8cb3dd3adbda6c82e7a6f5bfc3d7&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/mail&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;subject\&quot;: \&quot;中午好\&quot;,\n  \&quot;from\&quot;: \&quot;2319780642@qq.com\&quot;,\n  \&quot;to\&quot;: \&quot;2319780642@qq.com\&quot;,\n  \&quot;body\&quot;: \&quot;中午好\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:15,&quot;minute&quot;:7,&quot;second&quot;:58,&quot;nano&quot;:863161900}},&quot;historyId&quot;:&quot;6155046d-268b-4a7c-b8a3-aa27294efa83&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/mail&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.EmailController&quot;,&quot;methodName&quot;:&quot;sendEmail&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;c48c8cb3dd3adbda6c82e7a6f5bfc3d7&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/mail&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;subject\&quot;: \&quot;中午好\&quot;,\n  \&quot;from\&quot;: \&quot;2319780642@qq.com\&quot;,\n  \&quot;to\&quot;: \&quot;2319780642@qq.com\&quot;,\n  \&quot;body\&quot;: \&quot;中午好\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:15,&quot;minute&quot;:7,&quot;second&quot;:43,&quot;nano&quot;:620091700}},&quot;historyId&quot;:&quot;fdcfa738-d774-4d0d-b4b3-9b9436a652f9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/backup&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.ConfigBackupController&quot;,&quot;methodName&quot;:&quot;backupConfig&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ad14ab3443304a4a1d73f91fe6dd796a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/backup&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:16,&quot;nano&quot;:790772700}},&quot;historyId&quot;:&quot;6a1b047e-16e9-4d73-8c45-e21a14a1303c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/backup&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.ConfigBackupController&quot;,&quot;methodName&quot;:&quot;backupConfig&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ad14ab3443304a4a1d73f91fe6dd796a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/backup&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:4,&quot;nano&quot;:599908100}},&quot;historyId&quot;:&quot;eeb19010-2ee1-46b1-97ba-0d3f7dc36484&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/backup&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.ConfigBackupController&quot;,&quot;methodName&quot;:&quot;backupConfig&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ad14ab3443304a4a1d73f91fe6dd796a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/backup&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:32,&quot;second&quot;:24,&quot;nano&quot;:410462500}},&quot;historyId&quot;:&quot;de7eaefb-66e1-4e07-8178-adc66e7a409d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/backup&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.ConfigBackupController&quot;,&quot;methodName&quot;:&quot;backupConfig&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ad14ab3443304a4a1d73f91fe6dd796a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/backup&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:32,&quot;second&quot;:23,&quot;nano&quot;:718392000}},&quot;historyId&quot;:&quot;101677f2-8ea2-4026-97ac-e87709327010&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/backup&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.ConfigBackupController&quot;,&quot;methodName&quot;:&quot;backupConfig&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ad14ab3443304a4a1d73f91fe6dd796a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/backup&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:32,&quot;second&quot;:15,&quot;nano&quot;:643542700}},&quot;historyId&quot;:&quot;46303b4a-0e31-436c-b32d-fec1372f7af9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/backup&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.ConfigBackupController&quot;,&quot;methodName&quot;:&quot;backupConfig&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ad14ab3443304a4a1d73f91fe6dd796a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/backup&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:30,&quot;second&quot;:56,&quot;nano&quot;:124323400}},&quot;historyId&quot;:&quot;a2ccff9f-56cd-4422-8ed7-793bbf9e7679&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/log&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.LogController&quot;,&quot;methodName&quot;:&quot;logMsg&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;7b21881f58146cb2fa308477548626d4&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/backup&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:29,&quot;second&quot;:32,&quot;nano&quot;:556818100}},&quot;historyId&quot;:&quot;d0dfd94a-f029-4bb4-b997-d3d6dce25bc0&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/log&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.LogController&quot;,&quot;methodName&quot;:&quot;logMsg&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;7b21881f58146cb2fa308477548626d4&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/log&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:18,&quot;second&quot;:49,&quot;nano&quot;:411798300}},&quot;historyId&quot;:&quot;8aedc445-1c9b-4ac2-9789-fcee9cc1a8f3&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/log&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.LogController&quot;,&quot;methodName&quot;:&quot;logMsg&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;7b21881f58146cb2fa308477548626d4&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/log&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:18,&quot;second&quot;:26,&quot;nano&quot;:333121000}},&quot;historyId&quot;:&quot;d5417405-741f-4ada-8327-a55731f92533&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/log&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.LogController&quot;,&quot;methodName&quot;:&quot;logMsg&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;7b21881f58146cb2fa308477548626d4&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/log&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:16,&quot;second&quot;:55,&quot;nano&quot;:496887100}},&quot;historyId&quot;:&quot;9a53bc1a-7ce9-4990-8728-687c36f1537a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/file/oss&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.FileUploadController&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;oss ⽂件上传&quot;,&quot;description&quot;:&quot;oss ⽂件上传&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;},&quot;id&quot;:&quot;f63ec6879a08c99145eb523b23eeb5b3&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/file/oss&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\gk\\照片\\IMG_1781(20240814-012159).jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:0,&quot;second&quot;:59,&quot;nano&quot;:201961900}},&quot;historyId&quot;:&quot;14239ce9-c2e3-44af-aae0-cfb0b26a3464&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/file/oss&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.FileUploadController&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;oss ⽂件上传&quot;,&quot;description&quot;:&quot;oss ⽂件上传&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;f63ec6879a08c99145eb523b23eeb5b3&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/file/oss&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;D:\\HuaweiMoveData\\Users\\keke666\\Desktop\\gk\\照片\\IMG_1781(20240814-012159).jpg&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:49,&quot;second&quot;:43,&quot;nano&quot;:330086000}},&quot;historyId&quot;:&quot;63a1d175-7efe-4c80-86ed-057d79da7dd6&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/mail&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.EmailController&quot;,&quot;methodName&quot;:&quot;sendEmail&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;c48c8cb3dd3adbda6c82e7a6f5bfc3d7&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/mail&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;subject\&quot;: \&quot;中午好\&quot;,\n  \&quot;from\&quot;: \&quot;2319780642@qq.com\&quot;,\n  \&quot;to\&quot;: \&quot;2319780642@qq.com\&quot;,\n  \&quot;body\&quot;: \&quot;中午好\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:22,&quot;second&quot;:18,&quot;nano&quot;:342528600}},&quot;historyId&quot;:&quot;5cc2fc2f-030d-45e5-9f5e-18ab3bb5bf79&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/mail&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.EmailController&quot;,&quot;methodName&quot;:&quot;sendEmail&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;c48c8cb3dd3adbda6c82e7a6f5bfc3d7&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/mail&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;subject\&quot;: \&quot;qq\&quot;,\n  \&quot;from\&quot;: \&quot;2319780642@qq.com\&quot;,\n  \&quot;to\&quot;: \&quot;2319780642@qq.com\&quot;,\n  \&quot;body\&quot;: \&quot;qqqq\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:16,&quot;second&quot;:23,&quot;nano&quot;:380476700}},&quot;historyId&quot;:&quot;bbe35a3e-1248-4501-9c06-82486e5f9af9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/file/oss&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.FileUploadController&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;oss ⽂件上传&quot;,&quot;description&quot;:&quot;oss ⽂件上传&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;},&quot;id&quot;:&quot;f63ec6879a08c99145eb523b23eeb5b3&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/file/oss&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:52,&quot;second&quot;:21,&quot;nano&quot;:84266100}},&quot;historyId&quot;:&quot;1a66639a-4c78-456b-9a15-6e1cce6a7447&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/file/oss&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.FileUploadController&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;oss ⽂件上传&quot;,&quot;description&quot;:&quot;oss ⽂件上传&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;},&quot;id&quot;:&quot;f63ec6879a08c99145eb523b23eeb5b3&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/file/oss&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:52,&quot;second&quot;:9,&quot;nano&quot;:553889100}},&quot;historyId&quot;:&quot;93bcc0b6-c416-4f8e-8849-d0ad4b779306&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/file/oss&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.FileUploadController&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;oss ⽂件上传&quot;,&quot;description&quot;:&quot;oss ⽂件上传&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;},&quot;id&quot;:&quot;f63ec6879a08c99145eb523b23eeb5b3&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/file/oss&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:52,&quot;second&quot;:9,&quot;nano&quot;:393417200}},&quot;historyId&quot;:&quot;831027a4-d715-4220-a251-07de2a352941&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/file/oss&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.FileUploadController&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;oss ⽂件上传&quot;,&quot;description&quot;:&quot;oss ⽂件上传&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;},&quot;id&quot;:&quot;f63ec6879a08c99145eb523b23eeb5b3&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/file/oss&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:52,&quot;second&quot;:9,&quot;nano&quot;:227487900}},&quot;historyId&quot;:&quot;b3988bf3-c28c-4e90-9ce0-ea269c29463c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/file/oss&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.FileUploadController&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;oss ⽂件上传&quot;,&quot;description&quot;:&quot;oss ⽂件上传&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;},&quot;id&quot;:&quot;f63ec6879a08c99145eb523b23eeb5b3&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/file/oss&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:52,&quot;second&quot;:9,&quot;nano&quot;:45168400}},&quot;historyId&quot;:&quot;9c4e52f6-d496-45dd-8bd8-5869092f5892&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/file/oss&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.FileUploadController&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;oss ⽂件上传&quot;,&quot;description&quot;:&quot;oss ⽂件上传&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;},&quot;id&quot;:&quot;f63ec6879a08c99145eb523b23eeb5b3&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/file/oss&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:52,&quot;second&quot;:8,&quot;nano&quot;:850554500}},&quot;historyId&quot;:&quot;39853bc8-0d3f-4ab5-8184-7602334e0217&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/file/oss&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.FileUploadController&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;oss ⽂件上传&quot;,&quot;description&quot;:&quot;oss ⽂件上传&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;},&quot;id&quot;:&quot;f63ec6879a08c99145eb523b23eeb5b3&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/file/oss&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:52,&quot;second&quot;:8,&quot;nano&quot;:420203300}},&quot;historyId&quot;:&quot;d58da1c9-5064-4393-9776-5d865b960a6e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/file/oss&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.FileUploadController&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;oss ⽂件上传&quot;,&quot;description&quot;:&quot;oss ⽂件上传&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;},&quot;id&quot;:&quot;f63ec6879a08c99145eb523b23eeb5b3&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/file/oss&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:52,&quot;second&quot;:7,&quot;nano&quot;:693242900}},&quot;historyId&quot;:&quot;4806bd42-0c77-4e9d-a36e-6cb678e92e5e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/file/oss&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.FileUploadController&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;oss ⽂件上传&quot;,&quot;description&quot;:&quot;oss ⽂件上传&quot;,&quot;methodName&quot;:&quot;ossUpload&quot;},&quot;id&quot;:&quot;f63ec6879a08c99145eb523b23eeb5b3&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/file/oss&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;multipart/form-data&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[{&quot;value&quot;:&quot;&quot;,&quot;name&quot;:&quot;file&quot;,&quot;type&quot;:&quot;file&quot;,&quot;description&quot;:&quot;&quot;}],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:24},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:50,&quot;second&quot;:7,&quot;nano&quot;:654489900}},&quot;historyId&quot;:&quot;baf95305-efb5-4b34-962f-48bdc39a927d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/mail&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.EmailController&quot;,&quot;methodName&quot;:&quot;sendEmail&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;f8e4f95e656ee90f6d304ebc2eb9f2bc&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/mail&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;to\&quot;: \&quot;2319780642@qq.com\&quot;,\n  \&quot;subject\&quot;: \&quot;晚上好\&quot;,\n  \&quot;body\&quot;: \&quot;你好\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:22,&quot;minute&quot;:43,&quot;second&quot;:21,&quot;nano&quot;:525544300}},&quot;historyId&quot;:&quot;89d8654f-b912-4c17-afdb-f45de6d2c53b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/mail&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.EmailController&quot;,&quot;methodName&quot;:&quot;sendEmail&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;f8e4f95e656ee90f6d304ebc2eb9f2bc&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/mail&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;to\&quot;: \&quot;2319780642@qq.com\&quot;,\n  \&quot;subject\&quot;: \&quot;hello\&quot;,\n  \&quot;body\&quot;: \&quot;晚上好\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:22,&quot;minute&quot;:42,&quot;second&quot;:57,&quot;nano&quot;:578906000}},&quot;historyId&quot;:&quot;d8dcb66c-929c-48db-85ef-849c231b525c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/mail&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.EmailController&quot;,&quot;methodName&quot;:&quot;sendEmail&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;f8e4f95e656ee90f6d304ebc2eb9f2bc&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/mail&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;to\&quot;: \&quot;2319780642@qq.com\&quot;,\n  \&quot;subject\&quot;: \&quot;ooo\&quot;,\n  \&quot;body\&quot;: \&quot;000\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:22,&quot;minute&quot;:42,&quot;second&quot;:19,&quot;nano&quot;:913507100}},&quot;historyId&quot;:&quot;ee3eae4a-0d0b-4788-934a-1bc7a01605d9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/mail&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.EmailController&quot;,&quot;methodName&quot;:&quot;sendEmail&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;f8e4f95e656ee90f6d304ebc2eb9f2bc&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/mail&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;to\&quot;: \&quot;2319780642@qq.com\&quot;,\n  \&quot;subject\&quot;: \&quot;ooo\&quot;,\n  \&quot;body\&quot;: \&quot;000\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:22,&quot;minute&quot;:41,&quot;second&quot;:5,&quot;nano&quot;:482116200}},&quot;historyId&quot;:&quot;fb4b9a53-a9df-4691-86a7-5fec9d2b8909&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/mail&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.EmailController&quot;,&quot;methodName&quot;:&quot;sendEmail&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;f8e4f95e656ee90f6d304ebc2eb9f2bc&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/mail&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;to\&quot;: \&quot;2319780642@qq.com\&quot;,\n  \&quot;subject\&quot;: \&quot;ooo\&quot;,\n  \&quot;body\&quot;: \&quot;000\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:22,&quot;minute&quot;:39,&quot;second&quot;:9,&quot;nano&quot;:484547800}},&quot;historyId&quot;:&quot;301847ad-db02-4518-9dc7-8e4b37b62616&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/mail&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.EmailController&quot;,&quot;methodName&quot;:&quot;sendEmail&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;f8e4f95e656ee90f6d304ebc2eb9f2bc&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/mail&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;to\&quot;: \&quot;2319780642@qq.com\&quot;,\n  \&quot;subject\&quot;: \&quot;ooo\&quot;,\n  \&quot;body\&quot;: \&quot;000\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:22,&quot;minute&quot;:37,&quot;second&quot;:32,&quot;nano&quot;:432715000}},&quot;historyId&quot;:&quot;56c100b6-10d1-41f9-9443-5d419cb98ab6&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/mail&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.EmailController&quot;,&quot;methodName&quot;:&quot;sendEmail&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;f8e4f95e656ee90f6d304ebc2eb9f2bc&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/mail&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:22,&quot;minute&quot;:36,&quot;second&quot;:39,&quot;nano&quot;:779625700}},&quot;historyId&quot;:&quot;8aa533af-9ed4-42bc-bb0d-cb2807ffccec&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/mail&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.EmailController&quot;,&quot;methodName&quot;:&quot;sendEmail&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;f8e4f95e656ee90f6d304ebc2eb9f2bc&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/mail&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:22,&quot;minute&quot;:36,&quot;second&quot;:16,&quot;nano&quot;:219828100}},&quot;historyId&quot;:&quot;00427bb9-9be3-4793-b3d1-2a16b919f596&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/qrcode&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.QrCodeController&quot;,&quot;methodName&quot;:&quot;qrcode&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;56d5fc0defdd2960bae03281cdf0677a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/qrcode&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:22,&quot;minute&quot;:15,&quot;second&quot;:16,&quot;nano&quot;:968168500}},&quot;historyId&quot;:&quot;c61fb9c9-4872-48f2-bd0f-b77db55eee28&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/qrcode&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.QrCodeController&quot;,&quot;methodName&quot;:&quot;qrcode&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;56d5fc0defdd2960bae03281cdf0677a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/qrcode&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:22,&quot;minute&quot;:13,&quot;second&quot;:56,&quot;nano&quot;:238320800}},&quot;historyId&quot;:&quot;3a363286-ff8c-41ab-bc36-967dac5dc32d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/qrcode&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.QrCodeController&quot;,&quot;methodName&quot;:&quot;qrcode&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;56d5fc0defdd2960bae03281cdf0677a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/qrcode&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:22,&quot;minute&quot;:13,&quot;second&quot;:26,&quot;nano&quot;:333981300}},&quot;historyId&quot;:&quot;aa605e63-4e4a-4a77-afaf-f25fe0fb8c23&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/jwt/generate&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.JwtController&quot;,&quot;methodName&quot;:&quot;generateToken&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;generateToken&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;8f4dd8769bd939541e4b50eee0b4750b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/jwt/generate?username\u003dzhangsan&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;application/x-www-form-urlencoded&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:22,&quot;minute&quot;:2,&quot;second&quot;:8,&quot;nano&quot;:253952300}},&quot;historyId&quot;:&quot;aab3b41d-9c10-4068-9d17-303a7cd607d1&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/jwt/generate&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.JwtController&quot;,&quot;methodName&quot;:&quot;generateToken&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;generateToken&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;8f4dd8769bd939541e4b50eee0b4750b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/jwt/generate?username\u003dzhangsan&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;application/x-www-form-urlencoded&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:22,&quot;minute&quot;:1,&quot;second&quot;:48,&quot;nano&quot;:532611700}},&quot;historyId&quot;:&quot;a7f3b689-fe96-4e2c-9ecd-e9032852d227&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/jwt/generate&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.JwtController&quot;,&quot;methodName&quot;:&quot;generateToken&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;generateToken&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;8f4dd8769bd939541e4b50eee0b4750b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/jwt/generate?username\u003dzhangsan&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;application/x-www-form-urlencoded&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:22,&quot;minute&quot;:1,&quot;second&quot;:30,&quot;nano&quot;:834920800}},&quot;historyId&quot;:&quot;ca39ca64-c21f-472a-8af4-ad7c45106ec7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/jwt/generate&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.JwtController&quot;,&quot;methodName&quot;:&quot;generateToken&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;generateToken&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;8f4dd8769bd939541e4b50eee0b4750b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/jwt/generate?username\u003dzhangsan&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;application/x-www-form-urlencoded&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[{&quot;key&quot;:&quot;username&quot;,&quot;value&quot;:&quot;zhangsan&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:22,&quot;minute&quot;:0,&quot;second&quot;:37,&quot;nano&quot;:311661700}},&quot;historyId&quot;:&quot;6e42d82c-740a-47c0-b992-31f1bd8b67b7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/jwt/generate&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.JwtController&quot;,&quot;methodName&quot;:&quot;generateToken&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;generateToken&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;8f4dd8769bd939541e4b50eee0b4750b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/jwt/generate?&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;application/x-www-form-urlencoded&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[{&quot;key&quot;:&quot;username&quot;,&quot;value&quot;:&quot;zhangsan&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:22,&quot;minute&quot;:0,&quot;second&quot;:27,&quot;nano&quot;:164615200}},&quot;historyId&quot;:&quot;307a534d-b9c5-4e84-88bf-e1213351c3d8&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/jwt/generate&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.JwtController&quot;,&quot;methodName&quot;:&quot;generateToken&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;generateToken&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;8f4dd8769bd939541e4b50eee0b4750b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/jwt/generate?username\u003dzhangsan&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;application/x-www-form-urlencoded&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[{&quot;key&quot;:&quot;username&quot;,&quot;value&quot;:&quot;zhangsan&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:21,&quot;minute&quot;:58,&quot;second&quot;:7,&quot;nano&quot;:991751500}},&quot;historyId&quot;:&quot;2d62ca5d-114c-4e18-9e89-ab180abc5fb2&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/jwt/generate&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.JwtController&quot;,&quot;methodName&quot;:&quot;generateToken&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;generateToken&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;8f4dd8769bd939541e4b50eee0b4750b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/jwt/generate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;application/x-www-form-urlencoded&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[{&quot;key&quot;:&quot;username&quot;,&quot;value&quot;:&quot;zhangsan&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:21,&quot;minute&quot;:57,&quot;second&quot;:17,&quot;nano&quot;:893659400}},&quot;historyId&quot;:&quot;35f29e1a-b6ae-48e6-9e4e-252def98d3f0&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/jwt/generate&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.JwtController&quot;,&quot;methodName&quot;:&quot;generateToken&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;generateToken&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;8f4dd8769bd939541e4b50eee0b4750b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/jwt/generate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;application/x-www-form-urlencoded&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[{&quot;key&quot;:&quot;username&quot;,&quot;value&quot;:&quot;zhangsan&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:21,&quot;minute&quot;:57,&quot;second&quot;:9,&quot;nano&quot;:117940500}},&quot;historyId&quot;:&quot;14e3fbb3-2b76-41c4-acdc-a5468dc80b45&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/jwt/generate&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.JwtController&quot;,&quot;methodName&quot;:&quot;generateToken&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;generateToken&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;8f4dd8769bd939541e4b50eee0b4750b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/jwt/generate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;application/x-www-form-urlencoded&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[{&quot;key&quot;:&quot;username&quot;,&quot;value&quot;:&quot;zhangsan&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:21,&quot;minute&quot;:56,&quot;second&quot;:48,&quot;nano&quot;:827224000}},&quot;historyId&quot;:&quot;a16018ab-7352-4f5a-9c1d-d7005487bdbc&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/jwt/generate&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.JwtController&quot;,&quot;methodName&quot;:&quot;generateToken&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;generateToken&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;8f4dd8769bd939541e4b50eee0b4750b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/jwt/generate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;application/x-www-form-urlencoded&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[{&quot;key&quot;:&quot;username&quot;,&quot;value&quot;:&quot;&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:21,&quot;minute&quot;:55,&quot;second&quot;:51,&quot;nano&quot;:1430300}},&quot;historyId&quot;:&quot;f0931e47-af26-49c9-95f4-3b160f3d2270&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/users&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.UserController&quot;,&quot;methodName&quot;:&quot;createUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;aa41c2200bfc1f86344547ac875c7f2a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/users&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;score\&quot;:99,\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;website\&quot;: \&quot;https://www.niit.edu.cn\&quot;,\n  \&quot;phoneNumber\&quot;: \&quot;1306486101411\&quot;,\n  \&quot;subscriptionEndDate\&quot;: \&quot;2024-10-01\&quot;,\n  \&quot;email\&quot;: \&quot;niit@qq.com\&quot;,\n  \&quot;age\&quot;: 20,\n  \&quot;username\&quot;: \&quot;guke\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:15,&quot;minute&quot;:28,&quot;second&quot;:2,&quot;nano&quot;:840398800}},&quot;historyId&quot;:&quot;80879bd7-203d-4a36-88aa-3e2bd7118f8e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/users&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.UserController&quot;,&quot;methodName&quot;:&quot;createUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;aa41c2200bfc1f86344547ac875c7f2a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/users&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;score\&quot;:99,\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;website\&quot;: \&quot;https://www.niit.edu.cn\&quot;,\n  \&quot;phoneNumber\&quot;: \&quot;13064861014\&quot;,\n  \&quot;subscriptionEndDate\&quot;: \&quot;2024-10-01\&quot;,\n  \&quot;email\&quot;: \&quot;niit@qq.com\&quot;,\n  \&quot;age\&quot;: 20,\n  \&quot;username\&quot;: \&quot;guke\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:15,&quot;minute&quot;:27,&quot;second&quot;:51,&quot;nano&quot;:830652200}},&quot;historyId&quot;:&quot;acd128f7-e502-4d27-88df-2db6e40cc5ec&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/users&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.UserController&quot;,&quot;methodName&quot;:&quot;createUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;aa41c2200bfc1f86344547ac875c7f2a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/users&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;score\&quot;:99,\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;website\&quot;: \&quot;https://www.niit.edu.cn\&quot;,\n  \&quot;phoneNumber\&quot;: \&quot;13064861014\&quot;,\n  \&quot;subscriptionEndDate\&quot;: \&quot;2024-10-01\&quot;,\n  \&quot;email\&quot;: \&quot;niit@qq.com\&quot;,\n  \&quot;age\&quot;: 20,\n  \&quot;username\&quot;: \&quot;g\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:15,&quot;minute&quot;:27,&quot;second&quot;:48,&quot;nano&quot;:256370800}},&quot;historyId&quot;:&quot;8f40b36a-d612-44f9-97b2-568e2a66ca5d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/users&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.UserController&quot;,&quot;methodName&quot;:&quot;createUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;aa41c2200bfc1f86344547ac875c7f2a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/users&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;score\&quot;:99,\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;website\&quot;: \&quot;https://www.niit.edu.cn\&quot;,\n  \&quot;phoneNumber\&quot;: \&quot;13064861014\&quot;,\n  \&quot;subscriptionEndDate\&quot;: \&quot;2024-10-01\&quot;,\n  \&quot;email\&quot;: \&quot;niit@qq.com\&quot;,\n  \&quot;age\&quot;: 1,\n  \&quot;username\&quot;: \&quot;guke\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:15,&quot;minute&quot;:27,&quot;second&quot;:38,&quot;nano&quot;:657132600}},&quot;historyId&quot;:&quot;477d5b88-4e28-4498-bf77-b40dd6f0c076&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/users&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.UserController&quot;,&quot;methodName&quot;:&quot;createUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;aa41c2200bfc1f86344547ac875c7f2a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/users&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;score\&quot;:99,\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;website\&quot;: \&quot;https://www.niit.edu.cn\&quot;,\n  \&quot;phoneNumber\&quot;: \&quot;13064861014\&quot;,\n  \&quot;subscriptionEndDate\&quot;: \&quot;2024-10-01\&quot;,\n  \&quot;email\&quot;: \&quot;niit@qq.com\&quot;,\n  \&quot;age\&quot;: 20,\n  \&quot;username\&quot;: \&quot;guke\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:15,&quot;minute&quot;:27,&quot;second&quot;:29,&quot;nano&quot;:798602300}},&quot;historyId&quot;:&quot;1b4fc77d-fb99-416a-8ed0-781e630d2de0&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/users&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.UserController&quot;,&quot;methodName&quot;:&quot;createUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;aa41c2200bfc1f86344547ac875c7f2a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/users&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;score\&quot;:1000,\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;website\&quot;: \&quot;https://www.niit.edu.cn\&quot;,\n  \&quot;phoneNumber\&quot;: \&quot;13064861014\&quot;,\n  \&quot;subscriptionEndDate\&quot;: \&quot;2024-10-01\&quot;,\n  \&quot;email\&quot;: \&quot;niit@qq.com\&quot;,\n  \&quot;age\&quot;: 20,\n  \&quot;username\&quot;: \&quot;guke\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:15,&quot;minute&quot;:27,&quot;second&quot;:12,&quot;nano&quot;:190118100}},&quot;historyId&quot;:&quot;3882799f-21bd-441e-9c55-ab1765c3b59c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/users&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.UserController&quot;,&quot;methodName&quot;:&quot;createUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;aa41c2200bfc1f86344547ac875c7f2a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/users&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;score\&quot;: 1000,\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;website\&quot;: \&quot;https://www.niit.edu.cn\&quot;,\n  \&quot;phoneNumber\&quot;: \&quot;13064861014\&quot;,\n  \&quot;subscriptionEndDate\&quot;: \&quot;2024-10-01\&quot;,\n  \&quot;email\&quot;: \&quot;niit@qq.com\&quot;,\n  \&quot;age\&quot;: 20,\n  \&quot;username\&quot;: \&quot;guke\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:15,&quot;minute&quot;:27,&quot;second&quot;:8,&quot;nano&quot;:463951400}},&quot;historyId&quot;:&quot;9db90fb1-6544-4f0d-9103-36df16aaa59e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/users&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.UserController&quot;,&quot;methodName&quot;:&quot;createUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;aa41c2200bfc1f86344547ac875c7f2a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/users&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;score\&quot;: 99,\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;website\&quot;: \&quot;https://www.niit.edu.cn\&quot;,\n  \&quot;phoneNumber\&quot;: \&quot;13064861014\&quot;,\n  \&quot;subscriptionEndDate\&quot;: \&quot;2024-10-01\&quot;,\n  \&quot;email\&quot;: \&quot;niit@qq.com\&quot;,\n  \&quot;age\&quot;: 20,\n  \&quot;username\&quot;: \&quot;guke\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:15,&quot;minute&quot;:27,&quot;second&quot;:3,&quot;nano&quot;:648764000}},&quot;historyId&quot;:&quot;bec1e99c-fff2-4726-aa35-ebfea4793a34&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/users&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.UserController&quot;,&quot;methodName&quot;:&quot;createUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;aa41c2200bfc1f86344547ac875c7f2a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/users&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;score\&quot;: 99,\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;website\&quot;: \&quot;https://www.niit.edu.cn\&quot;,\n  \&quot;phoneNumber\&quot;: \&quot;13064861014\&quot;,\n  \&quot;subscriptionEndDate\&quot;: \&quot;2024-10-01\&quot;,\n  \&quot;email\&quot;: \&quot;niit@qq.com\&quot;,\n  \&quot;age\&quot;: 20,\n  \&quot;username\&quot;: \&quot;guke\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:15,&quot;minute&quot;:26,&quot;second&quot;:35,&quot;nano&quot;:872602500}},&quot;historyId&quot;:&quot;91169588-61e1-4716-85d5-5e07e5cce626&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/users&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.UserController&quot;,&quot;methodName&quot;:&quot;createUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;aa41c2200bfc1f86344547ac875c7f2a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/users&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;score\&quot;: 99,\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;website\&quot;: \&quot;https://www.niit.edu.cn\&quot;,\n  \&quot;phoneNumber\&quot;: \&quot;13064861014\&quot;,\n  \&quot;subscriptionEndDate\&quot;: \&quot;2024-09-23\&quot;,\n  \&quot;email\&quot;: \&quot;niit@qq.com\&quot;,\n  \&quot;age\&quot;: 20,\n  \&quot;username\&quot;: \&quot;guke\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:15,&quot;minute&quot;:26,&quot;second&quot;:13,&quot;nano&quot;:568819000}},&quot;historyId&quot;:&quot;52a173f9-52a9-463e-95c7-eaacbfcee6ef&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/users&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.UserController&quot;,&quot;methodName&quot;:&quot;createUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;aa41c2200bfc1f86344547ac875c7f2a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/users&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;score\&quot;: 99,\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;website\&quot;: \&quot;https://www.niit.edu.cn\&quot;,\n  \&quot;phoneNumber\&quot;: \&quot;12345678900\&quot;,\n  \&quot;subscriptionEndDate\&quot;: \&quot;2024-09-23\&quot;,\n  \&quot;email\&quot;: \&quot;niit@qq.com\&quot;,\n  \&quot;age\&quot;: 20,\n  \&quot;username\&quot;: \&quot;guke\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:15,&quot;minute&quot;:26,&quot;second&quot;:2,&quot;nano&quot;:164614600}},&quot;historyId&quot;:&quot;a8fd3e14-6db5-4881-a4da-12dd261352d8&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/users&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.UserController&quot;,&quot;methodName&quot;:&quot;createUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;aa41c2200bfc1f86344547ac875c7f2a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/users&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;score\&quot;: 99,\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;website\&quot;: \&quot;https://www.niit.edu.cn\&quot;,\n  \&quot;phoneNumber\&quot;: \&quot;12345678901\&quot;,\n  \&quot;subscriptionEndDate\&quot;: \&quot;2024-09-23\&quot;,\n  \&quot;email\&quot;: \&quot;niit@qq.com\&quot;,\n  \&quot;age\&quot;: 20,\n  \&quot;username\&quot;: \&quot;guke\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:15,&quot;minute&quot;:25,&quot;second&quot;:53,&quot;nano&quot;:692659600}},&quot;historyId&quot;:&quot;25335126-7d37-46d4-ad6e-e57acbeac2cc&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/users&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.UserController&quot;,&quot;methodName&quot;:&quot;createUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;aa41c2200bfc1f86344547ac875c7f2a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/users&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;score\&quot;: 99,\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;website\&quot;: \&quot;https://www.niit.edu.cn\&quot;,\n  \&quot;phoneNumber\&quot;: \&quot;1234567890\&quot;,\n  \&quot;subscriptionEndDate\&quot;: \&quot;2024-09-23\&quot;,\n  \&quot;email\&quot;: \&quot;niit@qq.com\&quot;,\n  \&quot;age\&quot;: 20,\n  \&quot;username\&quot;: \&quot;guke\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:15,&quot;minute&quot;:25,&quot;second&quot;:8,&quot;nano&quot;:972879700}},&quot;historyId&quot;:&quot;59c687b4-c15c-416e-a180-caf724c48246&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/users&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.UserController&quot;,&quot;methodName&quot;:&quot;createUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;aa41c2200bfc1f86344547ac875c7f2a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/users&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;score\&quot;: 0,\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;website\&quot;: \&quot;https://www.niit.edu.cn\&quot;,\n  \&quot;phoneNumber\&quot;: \&quot;1234567890\&quot;,\n  \&quot;subscriptionEndDate\&quot;: \&quot;2024-09-23\&quot;,\n  \&quot;email\&quot;: \&quot;niit@qq.com\&quot;,\n  \&quot;age\&quot;: 20,\n  \&quot;username\&quot;: \&quot;\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:15,&quot;minute&quot;:24,&quot;second&quot;:50,&quot;nano&quot;:656223700}},&quot;historyId&quot;:&quot;ed75d17a-876d-48eb-b32e-a95c2fd87676&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/users&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.UserController&quot;,&quot;methodName&quot;:&quot;createUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;aa41c2200bfc1f86344547ac875c7f2a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/users&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;score\&quot;: 0,\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;website\&quot;: \&quot;https://www.niit.edu.cn\&quot;,\n  \&quot;phoneNumber\&quot;: \&quot;1234567890\&quot;,\n  \&quot;subscriptionEndDate\&quot;: \&quot;2024-09-23\&quot;,\n  \&quot;email\&quot;: \&quot;niit@qq.com\&quot;,\n  \&quot;age\&quot;: 20,\n  \&quot;username\&quot;: \&quot;\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:15,&quot;minute&quot;:24,&quot;second&quot;:49,&quot;nano&quot;:627833600}},&quot;historyId&quot;:&quot;3dac7e33-0544-4cf7-a1a8-8c3b0c938088&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/users&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.UserController&quot;,&quot;methodName&quot;:&quot;createUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;aa41c2200bfc1f86344547ac875c7f2a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/users&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;score\&quot;: 0,\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;website\&quot;: \&quot;https://www.niit.edu.cn\&quot;,\n  \&quot;phoneNumber\&quot;: \&quot;1234567890\&quot;,\n  \&quot;subscriptionEndDate\&quot;: \&quot;2024-09-23\&quot;,\n  \&quot;email\&quot;: \&quot;niit@qq.com\&quot;,\n  \&quot;age\&quot;: 20,\n  \&quot;username\&quot;: \&quot;guke\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:15,&quot;minute&quot;:24,&quot;second&quot;:43,&quot;nano&quot;:952741100}},&quot;historyId&quot;:&quot;5a0ef9ad-c3f5-4a48-a7a5-263c0cb84ebb&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/users&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.UserController&quot;,&quot;methodName&quot;:&quot;createUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;aa41c2200bfc1f86344547ac875c7f2a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/users&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;score\&quot;: 0,\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;website\&quot;: \&quot;https://www.niit.edu.cn\&quot;,\n  \&quot;phoneNumber\&quot;: \&quot;1234567890\&quot;,\n  \&quot;subscriptionEndDate\&quot;: \&quot;2024-09-23\&quot;,\n  \&quot;email\&quot;: \&quot;guke\&quot;,\n  \&quot;age\&quot;: 20,\n  \&quot;username\&quot;: \&quot;\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:15,&quot;minute&quot;:24,&quot;second&quot;:23,&quot;nano&quot;:340904400}},&quot;historyId&quot;:&quot;de81cc35-b5cf-4702-8be5-d28e078b41a8&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/users&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.UserController&quot;,&quot;methodName&quot;:&quot;createUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;aa41c2200bfc1f86344547ac875c7f2a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/users&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;score\&quot;: 0,\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;website\&quot;: \&quot;https://www.niit.edu.cn\&quot;,\n  \&quot;phoneNumber\&quot;: \&quot;1234567890\&quot;,\n  \&quot;subscriptionEndDate\&quot;: \&quot;2024-09-23\&quot;,\n  \&quot;email\&quot;: \&quot;guke\&quot;,\n  \&quot;age\&quot;: 20,\n  \&quot;username\&quot;: \&quot;\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:15,&quot;minute&quot;:24,&quot;second&quot;:14,&quot;nano&quot;:717628500}},&quot;historyId&quot;:&quot;eded99dd-71aa-41d3-bfa8-c17262d77f1e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/users&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.UserController&quot;,&quot;methodName&quot;:&quot;createUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;aa41c2200bfc1f86344547ac875c7f2a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/users&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;score\&quot;: 0,\n  \&quot;password\&quot;: \&quot;\&quot;,\n  \&quot;website\&quot;: \&quot;\&quot;,\n  \&quot;phoneNumber\&quot;: \&quot;\&quot;,\n  \&quot;subscriptionEndDate\&quot;: \&quot;2024-09-23\&quot;,\n  \&quot;email\&quot;: \&quot;\&quot;,\n  \&quot;age\&quot;: 0,\n  \&quot;username\&quot;: \&quot;\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:15,&quot;minute&quot;:22,&quot;second&quot;:50,&quot;nano&quot;:297632700}},&quot;historyId&quot;:&quot;e9c66b2d-8232-4dbc-ad82-7020534609b4&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-configure01&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/users&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.configure.controller.UserController&quot;,&quot;methodName&quot;:&quot;createUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;aa41c2200bfc1f86344547ac875c7f2a&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/users&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;score\&quot;: 0,\n  \&quot;password\&quot;: \&quot;\&quot;,\n  \&quot;website\&quot;: \&quot;\&quot;,\n  \&quot;phoneNumber\&quot;: \&quot;\&quot;,\n  \&quot;subscriptionEndDate\&quot;: \&quot;2024-09-23\&quot;,\n  \&quot;email\&quot;: \&quot;\&quot;,\n  \&quot;age\&quot;: 0,\n  \&quot;username\&quot;: \&quot;\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:15,&quot;minute&quot;:22,&quot;second&quot;:32,&quot;nano&quot;:149900}},&quot;historyId&quot;:&quot;dc009414-292f-4bf6-983f-81a3cf76790d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;zhihu_api&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/v1/special/all&quot;,&quot;simpleClassName&quot;:&quot;top.guke.zhihu.api.controller.SpecialController&quot;,&quot;methodName&quot;:&quot;getAll&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c403176a299a98d96b3eba7bc8030f36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/v1/special/all&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:6,&quot;second&quot;:49,&quot;nano&quot;:456681500}},&quot;historyId&quot;:&quot;bbd63664-4f73-4a03-bdcd-23b6efc73c60&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;zhihu_api&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/v1/special/all&quot;,&quot;simpleClassName&quot;:&quot;top.guke.zhihu.api.controller.SpecialController&quot;,&quot;methodName&quot;:&quot;getAll&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c403176a299a98d96b3eba7bc8030f36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/v1/special/all&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:6,&quot;second&quot;:12,&quot;nano&quot;:418759400}},&quot;historyId&quot;:&quot;e20f27fd-bd88-4cce-b083-847f0b80ec97&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;zhihu_api&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/v1/special/all&quot;,&quot;simpleClassName&quot;:&quot;top.guke.zhihu.api.controller.SpecialController&quot;,&quot;methodName&quot;:&quot;getAll&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c403176a299a98d96b3eba7bc8030f36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/v1/special/all&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:6,&quot;second&quot;:12,&quot;nano&quot;:264908300}},&quot;historyId&quot;:&quot;dfbc399d-b3a6-437f-aea1-4776423eb817&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;zhihu_api&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/v1/special/all&quot;,&quot;simpleClassName&quot;:&quot;top.guke.zhihu.api.controller.SpecialController&quot;,&quot;methodName&quot;:&quot;getAll&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c403176a299a98d96b3eba7bc8030f36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/v1/special/all&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:6,&quot;second&quot;:11,&quot;nano&quot;:126155100}},&quot;historyId&quot;:&quot;7f29c56f-5f3e-42bb-88d8-d185f8053988&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;zhihu_api&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/v1/special/all&quot;,&quot;simpleClassName&quot;:&quot;top.guke.zhihu.api.controller.SpecialController&quot;,&quot;methodName&quot;:&quot;getAll&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c403176a299a98d96b3eba7bc8030f36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/v1/special/all&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:14},&quot;time&quot;:{&quot;hour&quot;:18,&quot;minute&quot;:30,&quot;second&quot;:46,&quot;nano&quot;:441939300}},&quot;historyId&quot;:&quot;a95b4be6-1902-4d77-9397-8c9f336248e5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-logging&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/log&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.logging.controller.LogController&quot;,&quot;methodName&quot;:&quot;logDemo&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;f826ebba8443edc8a8f28af9170c7664&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/log&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:58,&quot;second&quot;:46,&quot;nano&quot;:633882700}},&quot;historyId&quot;:&quot;a5e1dc54-21da-4029-9e8a-84ba74024b19&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-logging&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/log&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.logging.controller.LogController&quot;,&quot;methodName&quot;:&quot;logDemo&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;f826ebba8443edc8a8f28af9170c7664&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/log&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:58,&quot;second&quot;:5,&quot;nano&quot;:577019600}},&quot;historyId&quot;:&quot;285ce27a-d0d9-4f91-b6e5-00d9e8d68a8e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;unknown&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/error&quot;,&quot;simpleClassName&quot;:&quot;org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController&quot;,&quot;methodName&quot;:&quot;errorHtml&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;537396d525421e7e4750240c5cda3fa4&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/log&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:14,&quot;second&quot;:48,&quot;nano&quot;:938774200}},&quot;historyId&quot;:&quot;08988a52-0541-42f6-81df-f88569e1eb08&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;unknown&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/error&quot;,&quot;simpleClassName&quot;:&quot;org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController&quot;,&quot;methodName&quot;:&quot;errorHtml&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;537396d525421e7e4750240c5cda3fa4&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/log&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:13,&quot;second&quot;:0,&quot;nano&quot;:688079100}},&quot;historyId&quot;:&quot;06ca6d69-9460-4475-b43a-1ad573d3203c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;unknown&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/error&quot;,&quot;simpleClassName&quot;:&quot;org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController&quot;,&quot;methodName&quot;:&quot;errorHtml&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;537396d525421e7e4750240c5cda3fa4&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/log&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:12,&quot;second&quot;:35,&quot;nano&quot;:304018400}},&quot;historyId&quot;:&quot;1a606e3b-fa0a-465a-a986-c613e050192c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;unknown&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/error&quot;,&quot;simpleClassName&quot;:&quot;org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController&quot;,&quot;methodName&quot;:&quot;errorHtml&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;537396d525421e7e4750240c5cda3fa4&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/log&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:8,&quot;second&quot;:22,&quot;nano&quot;:101507900}},&quot;historyId&quot;:&quot;170bdd46-d670-48a1-83f7-16f59277f759&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-thymeleaf&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.thymeleaf.Application&quot;,&quot;methodName&quot;:&quot;hello&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;6bfee4b582b25e2f5e9da2e67b258993&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080?name\u003dzhansgsan&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;name&quot;,&quot;value&quot;:&quot;&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:18,&quot;minute&quot;:39,&quot;second&quot;:59,&quot;nano&quot;:821307600}},&quot;historyId&quot;:&quot;4901db9c-26f3-4146-afec-1987b58e7c21&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;unknown&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/error&quot;,&quot;simpleClassName&quot;:&quot;org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController&quot;,&quot;methodName&quot;:&quot;errorHtml&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;537396d525421e7e4750240c5cda3fa4&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/error&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:18,&quot;minute&quot;:30,&quot;second&quot;:26,&quot;nano&quot;:533941800}},&quot;historyId&quot;:&quot;90acaa48-a400-4e96-89af-328d25e94c25&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-thymeleaf&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/sum&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.thymeleaf.Application&quot;,&quot;methodName&quot;:&quot;getSum&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;5f91d911d988c0e640366117ce3c11bc&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/sum?n\u003d5&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;n&quot;,&quot;value&quot;:&quot;&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:17,&quot;minute&quot;:26,&quot;second&quot;:35,&quot;nano&quot;:98002500}},&quot;historyId&quot;:&quot;a5554050-698b-4f61-999a-5e38c4698d54&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-thymeleaf&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/sum&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.thymeleaf.Application&quot;,&quot;methodName&quot;:&quot;getSum&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;5f91d911d988c0e640366117ce3c11bc&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/sum&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;n&quot;,&quot;value&quot;:&quot;&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:17,&quot;minute&quot;:26,&quot;second&quot;:23,&quot;nano&quot;:659767900}},&quot;historyId&quot;:&quot;9f97c5f9-cbde-411f-802e-96a6f573de20&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-thymeleaf&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/sum&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.thymeleaf.Application&quot;,&quot;methodName&quot;:&quot;getSum&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;5f91d911d988c0e640366117ce3c11bc&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/sum&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;n&quot;,&quot;value&quot;:&quot;&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:17,&quot;minute&quot;:26,&quot;second&quot;:20,&quot;nano&quot;:707257800}},&quot;historyId&quot;:&quot;52084572-e4a7-46bf-a90b-02aa8fae4780&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-thymeleaf&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/sum&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.thymeleaf.Application&quot;,&quot;methodName&quot;:&quot;getSum&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;5f91d911d988c0e640366117ce3c11bc&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/sum&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;n&quot;,&quot;value&quot;:&quot;&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:17,&quot;minute&quot;:25,&quot;second&quot;:58,&quot;nano&quot;:786031700}},&quot;historyId&quot;:&quot;d65d347b-a721-445a-ad0d-f9760d7c6dd1&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-thymeleaf&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/taskList&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.thymeleaf.controller.TaskController&quot;,&quot;methodName&quot;:&quot;taskList&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;197997adf11cf4bd412208ed6c5757fc&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/taskList&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:20,&quot;second&quot;:27,&quot;nano&quot;:251036500}},&quot;historyId&quot;:&quot;c5a1b74c-429f-43f5-8d3e-71044e9aeee2&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-thymeleaf&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/taskList&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.thymeleaf.controller.TaskController&quot;,&quot;methodName&quot;:&quot;taskList&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;197997adf11cf4bd412208ed6c5757fc&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/taskList&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:2,&quot;second&quot;:23,&quot;nano&quot;:287855700}},&quot;historyId&quot;:&quot;1b84f82e-f51d-4577-bf19-05bafc18642b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false}]" />
  </component>
</project>