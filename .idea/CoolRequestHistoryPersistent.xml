<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CoolRequestHistoryPersistent">
    <option name="historyAPIS" value="[{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-logging&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/log&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.logging.controller.LogController&quot;,&quot;methodName&quot;:&quot;logDemo&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;f826ebba8443edc8a8f28af9170c7664&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/log&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:58,&quot;second&quot;:46,&quot;nano&quot;:633882700}},&quot;historyId&quot;:&quot;a5e1dc54-21da-4029-9e8a-84ba74024b19&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-logging&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/log&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.logging.controller.LogController&quot;,&quot;methodName&quot;:&quot;logDemo&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;f826ebba8443edc8a8f28af9170c7664&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/log&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:58,&quot;second&quot;:5,&quot;nano&quot;:577019600}},&quot;historyId&quot;:&quot;285ce27a-d0d9-4f91-b6e5-00d9e8d68a8e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;unknown&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/error&quot;,&quot;simpleClassName&quot;:&quot;org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController&quot;,&quot;methodName&quot;:&quot;errorHtml&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;537396d525421e7e4750240c5cda3fa4&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/log&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:14,&quot;second&quot;:48,&quot;nano&quot;:938774200}},&quot;historyId&quot;:&quot;08988a52-0541-42f6-81df-f88569e1eb08&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;unknown&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/error&quot;,&quot;simpleClassName&quot;:&quot;org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController&quot;,&quot;methodName&quot;:&quot;errorHtml&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;537396d525421e7e4750240c5cda3fa4&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/log&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:13,&quot;second&quot;:0,&quot;nano&quot;:688079100}},&quot;historyId&quot;:&quot;06ca6d69-9460-4475-b43a-1ad573d3203c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;unknown&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/error&quot;,&quot;simpleClassName&quot;:&quot;org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController&quot;,&quot;methodName&quot;:&quot;errorHtml&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;537396d525421e7e4750240c5cda3fa4&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/log&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:12,&quot;second&quot;:35,&quot;nano&quot;:304018400}},&quot;historyId&quot;:&quot;1a606e3b-fa0a-465a-a986-c613e050192c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;unknown&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/error&quot;,&quot;simpleClassName&quot;:&quot;org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController&quot;,&quot;methodName&quot;:&quot;errorHtml&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;537396d525421e7e4750240c5cda3fa4&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/log&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:19,&quot;minute&quot;:8,&quot;second&quot;:22,&quot;nano&quot;:101507900}},&quot;historyId&quot;:&quot;170bdd46-d670-48a1-83f7-16f59277f759&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-thymeleaf&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.thymeleaf.Application&quot;,&quot;methodName&quot;:&quot;hello&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;6bfee4b582b25e2f5e9da2e67b258993&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080?name\u003dzhansgsan&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;name&quot;,&quot;value&quot;:&quot;&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:18,&quot;minute&quot;:39,&quot;second&quot;:59,&quot;nano&quot;:821307600}},&quot;historyId&quot;:&quot;4901db9c-26f3-4146-afec-1987b58e7c21&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;unknown&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/error&quot;,&quot;simpleClassName&quot;:&quot;org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController&quot;,&quot;methodName&quot;:&quot;errorHtml&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;id&quot;:&quot;537396d525421e7e4750240c5cda3fa4&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/error&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:18,&quot;minute&quot;:30,&quot;second&quot;:26,&quot;nano&quot;:533941800}},&quot;historyId&quot;:&quot;90acaa48-a400-4e96-89af-328d25e94c25&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-thymeleaf&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/sum&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.thymeleaf.Application&quot;,&quot;methodName&quot;:&quot;getSum&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;5f91d911d988c0e640366117ce3c11bc&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/sum?n\u003d5&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;n&quot;,&quot;value&quot;:&quot;&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:17,&quot;minute&quot;:26,&quot;second&quot;:35,&quot;nano&quot;:98002500}},&quot;historyId&quot;:&quot;a5554050-698b-4f61-999a-5e38c4698d54&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-thymeleaf&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/sum&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.thymeleaf.Application&quot;,&quot;methodName&quot;:&quot;getSum&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;5f91d911d988c0e640366117ce3c11bc&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/sum&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;n&quot;,&quot;value&quot;:&quot;&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:17,&quot;minute&quot;:26,&quot;second&quot;:23,&quot;nano&quot;:659767900}},&quot;historyId&quot;:&quot;9f97c5f9-cbde-411f-802e-96a6f573de20&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-thymeleaf&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/sum&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.thymeleaf.Application&quot;,&quot;methodName&quot;:&quot;getSum&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;5f91d911d988c0e640366117ce3c11bc&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/sum&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;n&quot;,&quot;value&quot;:&quot;&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:17,&quot;minute&quot;:26,&quot;second&quot;:20,&quot;nano&quot;:707257800}},&quot;historyId&quot;:&quot;52084572-e4a7-46bf-a90b-02aa8fae4780&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-thymeleaf&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/sum&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.thymeleaf.Application&quot;,&quot;methodName&quot;:&quot;getSum&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;5f91d911d988c0e640366117ce3c11bc&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/sum&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;n&quot;,&quot;value&quot;:&quot;&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:17,&quot;minute&quot;:25,&quot;second&quot;:58,&quot;nano&quot;:786031700}},&quot;historyId&quot;:&quot;d65d347b-a721-445a-ad0d-f9760d7c6dd1&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-thymeleaf&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/taskList&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.thymeleaf.controller.TaskController&quot;,&quot;methodName&quot;:&quot;taskList&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;197997adf11cf4bd412208ed6c5757fc&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/taskList&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:20,&quot;second&quot;:27,&quot;nano&quot;:251036500}},&quot;historyId&quot;:&quot;c5a1b74c-429f-43f5-8d3e-71044e9aeee2&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring-boot-thymeleaf&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/taskList&quot;,&quot;simpleClassName&quot;:&quot;top.guke.springboot.thymeleaf.controller.TaskController&quot;,&quot;methodName&quot;:&quot;taskList&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;197997adf11cf4bd412208ed6c5757fc&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/taskList&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:2,&quot;second&quot;:23,&quot;nano&quot;:287855700}},&quot;historyId&quot;:&quot;1b84f82e-f51d-4577-bf19-05bafc18642b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false}]" />
  </component>
</project>